(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{549:function(n,t,a){"use strict";a.r(t);var r=a(16),i=function(n){n.options.__data__block__={markmap_1a96284d:"# 消息中间件MQ\n* 优点\n    - 异步处理：提高系统吞吐率\n        - 服务可以先响应后异步处理耗时的逻辑\n    - 应用解耦：不关心其他系统的处理\n        - 服务间的直接调用耦合度高\n    - 流量削峰：缓解短时间内的高并发\n        - 高峰时期服务器的压力大\n    - 日志处理：大量日志传输\n    - 消息通讯\n- 技术选型\n    - Kafka\n        - 超高吞吐量的实时日志采集\n        - 实时数据同步\n    - ActiveMQ\n        - 老牌的消息中间件\n        - 运用广泛\n    - RabbitMQ\n        - Erlang编写\n        - 高并发、高吞吐\n        - 集群化、高可用\n        - 后台完善\n        - 开源社区活跃\n    - RocketMQ\n        - 基于java\n- 常见问题\n    - 消息顺序消费\n        - 保证生产者-MQ-消费者 一对一对一的关系\n            - 并行度低\n            - 异常会阻塞流程\n        - 通过业务设计规避\n            - 业务层面保证消息的顺序\n    - 消息重复消费\n        - 处理消息的逻辑保证幂等性\n            - 消息队列的数据做唯一标识\n    - 消息丢失（保证消息的可靠传输）\n        - 生产者丢失消息\n            - transaction 事务机制\n            - confirm模式 确认模式\n        - 消息队列丢数据\n            - 持久化\n            - 配合confirm模式\n        - 消费者丢失消息\n            - 手动回复确认消息\n- 原理\n    - RabbitMQ基本概念\n        - 组件\n            - Broker：消息队列服务器实体\n            - Exchange：消息交换机\n            - Queue：消息队列载体\n            - Binding：绑定\n            - Routing Key： 路由关键字\n            - VHost： vhost 可以理解为虚拟 broker\n            - Producer： 消息生产者\n            - Consumer： 消息消费者\n            - Channel： 消息通道\n        - 工作模式\n            -  simple模式（即最简单的收发模式）\n                - 消息消费后从队列移除\n            - work工作模式(资源的竞争)\n                - 多个消费者同时监听\n                - 争抢消息\n            - publish/subscribe发布订阅(共享资源)\n                - 每个消费者监听自己的队列\n                - 交换机消息转发\n            - routing路由模式\n                - 根据业务功能路由字符串\n                - 根据字符串将消息扔到队列中\n                - 业务场景:error 通知;EXCEPTION\n        - topic 主题模式(路由模式的一种)\n            - 星号井号代表通配符\n            - 路由功能添加模糊匹配\n            - 交换机根据key的规则模糊匹配到对应的队列"}},e=Object(r.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h1",{attrs:{id:"rabbitmq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rabbitmq"}},[this._v("#")]),this._v(" RabbitMQ")]),this._v(" "),t("Markmap",{attrs:{id:"markmap_1a96284d",code:this.$dataBlock.markmap_1a96284d}})],1)}),[],!1,null,null,null);"function"==typeof i&&i(e);t.default=e.exports}}]);