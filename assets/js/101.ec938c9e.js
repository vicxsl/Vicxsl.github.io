(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{539:function(n,a,e){"use strict";e.r(a);var r=e(16),o=function(n){n.options.__data__block__={markmap_1a96284d:"# 大数据\n## JavaSE\n###     Java语言基础\n####         Java技术体系语言平台\n####         Java核心机制与JVM运行原理\n####         Java开发环境搭建\n####         Java变量、数据类型、数组及运算符\n####         Java流程控制结构\n###     Java面向对象编程\n####         类和对象\n####         方法和封装\n####         static关键字\n####         继承\n####         多态\n####         特殊类\n###     Java核心类库(上)\n####             常用类概述\n####             string类使用\n####             可变字符串类使用\n####             日期相关类使用\n####         Java集合与泛型\n####             集合框架概述\n####             Collection系列集合\n####             List集合与Set集合\n####             Iterator与Listiterator\n####             Collection工具类\n####             集合中使用泛型\n####             自定义泛型\n###     Java核心类库（下）\n####         常用类\n####         异常机制\n####         反射机制\n####         IO流\n####         Lambda表达式\n####         函数式接口\n####         Java多线程技术\n####             线程的原理\n####             线程的创建与启动\n####             创建线程的集中方式对比\n####             继承Thread类与实现Runnable接口\n####             创建线程方式对比\n####             线程的控制\n####             线程的调度\n####             线程的优先级\n####             线程的生命周期\n####             多线程的安全问题与解决办法\n####             线程的同步\n####             互斥锁\n####             线程的死锁问题\n####             线程通信\n####             生产者与消费者案例\n####         Java网络编程\n####             网络编程基础知识\n####             网络编程的主要问题\n####             如何实现网络中主机的相互通讯\n####             网络通讯要素\n####             网络通信协议\n####             OSI参考模型\n####             TCP/ICP参考模型\n####             数据的封装与拆封\n####             java.net,ineAddress类\n####             TCP协议与UDP协议\n####             基于TCP协议的网络编程\n####             Socket的TCP编程\n####             基于UDP协议的网络编程\n####             URL编程\n####             针对HTTP协议的URLConnection\n## java Web数据可视化\n###     MySQL数据库\n####         MySQL基础\n####         MySQL数据库对象\n####         SQL结构化查询语句\n####         JDBC操作\n####         数据库连接池\n####         MySQL查询和慢查询日志分析\n####         MySQL调优之索引优化\n####         MySQL调优之存储引擎优化\n####         MySQL调优之锁机制优化\n###     前端可视化技术\n####         HTML、CSS\n####         JavaScript、Jquery框架\n####         渐进式javaScrript框架Vue\n####         Ajax&Json轻量级数据交互\n####         Highcharts、Echarts可视化组件\n###     Java Web后端技术（上）\n####         Tomcat&Nginx服务器中间件\n####         HTTP协议解析\n####         Servlet规范组件\n####         Cookie及Session\n####         Filter过滤器及Listener监听器\n####         MVC模式及三层架构\n###     Java Web后端技术（下）\n####         Maven项目构建工具\n####         Git项目协作工具\n####         Spring框架\n####         SpringMVC表现层框架\n####         Mybatis持久层框架\n####         SpringBoot框架\n###     Hadoop核心框架（HDFS、MapReduce、YARN）\n## Hadoop核心及生态圈技术栈\n####         Hadoop核心之分布式文件系统HDFS\n####             大数据概述\n####             Hadoop概述\n####             Apache Hadoop完全分布式集群部署\n####             HDFS简介及应用场景\n####             HDFS原理详解\n####             HDFS Shell操作\n####             HDFS Java API操作\n####             HDFS 读写机制解析\n####             HDFS 元数据管理机制\n####             Namenode、Fsimage及Edits编辑日志\n####             2NN及checkPoint检查点\n####             Fsimage及Edits文件解析\n####             CheckPoint周期\n####             Hadoop的限额、归档及集群安全模式\n####             HDFS安全级调优\n####             HDFS核心源码剖析\n####             NameNode如何支撑高并发访问\n####             Namenode FullGC的影响\n####             Namenode fullGC日志分析\n####             日志采集案例\n####         Hadoop核心之分布式计算框架MapReduce\n####             MapReduce设计目标及核心思想\n####             MapReduce主要功能\n####             MapRedcue处理流程\n####             MapRedcue主要案例\n####             Mapper抽象类与Reducer抽象类\n####             MapReduce内置数据类型及自定义数据类型\n####             如何确定Map和Reduce个数\n####             MapReduce Shuffle过程值Combine合并机制\n####             MaoReduce Shuffle过程之Partition分区机制，自定义分区\n####             MapReduce Shuffle之序列化\n####             MapReduce Shuffle过程之自定义排序及二次排序\n####             MapReduce Shuffle过程之数据压缩机制\n####             自定义inputFormat及outputFormat\n####             MapTask运行机制\n####             MapTask并行度\n####             MapReduce调优之job执行三原则\n####             MapReduce Shuffle调优之Map端调优\n####             MapReduce Shuffle调优之Combiner\n####             MapReduce Shuffle调优之Reduce Shuffle端调优\n####             MapReduce Shuffle调优之推测执行&小文件优化\n####             MapReduce Shuffle调优之数据倾斜\n####             MapReduce Shuffle算法拓展之MergeSort归并排序\n####             MapReduce算法拓展之QuickSort快速排序\n####         Hadoop核心之分布式资源调度框架Yarn\n####             分布式资源调度及Yarn简介\n####             Yarn架构及原理\n####             Yarn核心组件之NodeManager节点管理器\n####             Yarn核心组件之Application Master任务专员\n####             Yarn核心组件之Conteiner容器\n####             Yarn资源调度FIFO策略和应用\n####             Yarn资源调度Frir策略和应用\n####             Yarn资源调度Capactiy策略和应用\n####             Yarn多租户资源调度配置\n####             Yarn生产级调优\n####             Hadoop二次开发环境搭建及示例\n####             Hadoop3.X新特性概述\n###     Hadoop生态圈技术栈（上）\n####         数据仓库工具Hive\n####         交互工具Hue\n####         数据采集工具Flume\n####         ETL抽取转换工具Sqoop\n####         ETL抽取转换工具CDC\n####         ETL抽取转换工具DataX\n###     Hadoop生态圈技术栈（中）\n####         Impala即席查询工具介绍\n####         Impala入门使用\n####         Impala交互式查询\n####         Impala集群负载均衡\n####         Impala优化\n###     Hadoop生态圈技术栈（下）\n####         分布式协调组件Zookeeper\n####             ZooKeeper介绍\n####             Zookeeper架构组成\n####             Zookeeper的特点\n####             Zookeeper集群模式\n####             Zookeeper Znode类型\n####             Zookeeper Znode状态信息\n####             Zookeeper Watcher机制\n####             ZooKeeper命令行操作\n####             Zookeeper开源客户端\n####             Zookeeper内部原理之leader选举\n####             Zookeeper内部原理之ZAB一致性协议\n####             ZooKeeper服务器动态上下线监听事件\n####             Zookeeper分布式锁事件\n####             Hadoop HA工作机制\n####         海量列式非关系型数据库HBase\n####             HBase介绍\n####             HBase特点及应用场景\n####             HBase数据模型\n####             HBase架构\n####             Hbase集群部署\n####             Hbase Shell操作\n####             Hbase原理深入之读数据流程\n####             Hbase原理深入之写数据流程\n####             Hbase的Flush机制及阻塞机制\n####             Hbase的Compact合并机制\n####             Hbase的Redion拆分策略\n####             Hbase表的预分区\n####             Hbase表Regin合并\n####             Hbase客户端操作\n####             Hbase协处理器介绍\n####             Hbase协处理器之Observer案例\n####             Hbase表Rowkey设计原则\n####             Hbase表热点\n####             Hbase二级索引\n####             Hbase中布隆过滤器\n####         任务调度系统\n####             工作流调度系统介绍\n####             Azkaban介绍\n####             Azkaban-solo-server部署\n####             Azkaban-multiple-server模式\n####             Azkaban应用之job依赖调度\n####             Azkaban应用之HDFS任务\n####             Azkaban应用之Maperduce任务\n####             Azkaban应用之Hive脚本任务\n####             Azkaban应用之任务调度执行\n####             任务调度组件Airflow\n## 分布式缓存Redils及Kafka消息中间件\n###     高性能分布式缓存Redis\n####         缓存原理及设计\n####             缓存基本思想\n####             缓存的优势、代价\n####             缓存的读写模式\n####             缓存架构的设计思路\n####         数据类型与过期策略\n####             Redis数据类型/应用场景\n####             缓存过期/淘汰策略\n####         Redis持久化机制\n####             RDB机制\n####             AOF机制\n####             AOF重写\n####             RDB与AOF对比和选型\n####         Redis拓展特性\n####             发布订阅机制\n####             事务的概念\n####             事务机制\n####             lua与Redis整合应用\n####             lua脚本复制\n####             Redis监视器\n####             慢查询日志\n####         Redis高可用方案\n####             主从复制\n####             主从复制原理及实现\n####             哨兵模式\n####             检测原理\n####             故障转移\n####             RedisCluster分区\n####             Cluster分区原理\n####             RedisCluster创建\n####             分区路由\n####             节点添加\n####             集群容灾\n####             集群介绍\n####             普通Hash和一致性Hash\n####         Redis经典问题解析\n####             穿透、雪崩、击穿\n####             数据不一致\n####             并发hotkeybigkey\n####             Redis乐观锁\n####             Redis分布式锁\n####         Redis底层数据结构\n####             RedisObject\n####             SDS\n####             跳跃表\n####             字典\n####             ziplist&intset\n####             quicklist\n###     高吞吐消息中间件Kafka\n####         Kafka简介\n####         Kafka生产者\n####         Kafka消费者\n####         Kafka主题\n####         Kafka分区\n####         Kafka物理存储\n####         稳定性\n####         高级应用\n####         集群管理\n####         监控\n####         Kafka核心源码剖析\n####         Kafka调优策略\n####         Kafka幂等性问题解析\n## PB级企业电商离线数据仓项目\n###     PB级企业电商离线数仓项目实战\n####         PB级离线数仓建设策略\n####         护具血缘管理机制\n####         质量监控策略\n####         企业级离线数仓0-1全流程构建\n####         企业数仓生产级性能优化方案\n## 内存级快速计算引擎spark\n####         Scala基础\n####         Scala数据结构和函数\n####         Scala数组相关操作\n####         Scala映射和元组\n####         Scala继承、特质、高阶函数\n####         Scala集合\n####         Scala模式匹配和样例类\n####         Scala偏函数\n####         Scala Future及类型参数\n####         Scala 高级类型\n####         Scala 隐式转换和隐式参数\n####         Akka拓展\n###     Spark实战应用（上）\n###     Scala编程\n####         Spark安装与配置\n####             Spark概述\n####             Spark&Hadoop区别于联系\n####             Spark相关术语\n####             park系统架构\n####             Spark本地模式\n####             Spark伪分布列\n####             Spark集群模式\n####             HistoryServer\n####             HA高可用\n####             Spark on Yaen模式\n####             Spark on Yarn模式下整合历史服务\n####         RDD基础编程\n####             RDD概念及特点\n####             RDD编程模型\n####             RDD的创建\n####             Transformation算子操作\n####             Action算子操作\n####             PairRDD创建及一般操作\n####             PairRDD聚合操作\n####             RroupByKey vs ReduceKey操作\n####             join及action操作\n####             案例之计算圆周率\n####             案例之广告数据分析\n####             案例之共同好友\n####             数据下沉MySQL\n####         RDD高级编程\n####             序列化\n####             依赖关系\n####             RDD缓存\n####             RDD容错\n####             RDD分区数\n####             RDD分区器\n####             自定义分区器\n####             累加器\n####             TopN优化\n####             RDD编程优化\n####         Spark SQL编程\n####             SparkSQL特点\n####             DataFrame与DataSet定义及创建\n####             Schema与Row\n####             SparkSession\n####             action操作\n####             select相关操作\n####             where相关操作\n####             聚组与排序操作\n####             join与集合操作\n####             空值处理与窗口函数\n####             UDF\n####             数据不安全的UDAF\n####             数据安全的UDAF\n####             join方式\n####             SQL语句解析\n###     Spark实战应用（下）\n####         Spark Steaming概述\n####         Spark Steaming架构\n####         Spark Steaming结构化流\n####         Dsteam基础数据源\n####         DSteam无状态转换\n####         DSteam黑名单过滤\n####         DSteam窗口操作\n####         DSteam状态追踪之updatestateByKey\n####         DSteam输出操作\n####         DSteam状态追踪之maoWithState\n####         park Sreaming与Kafka整合\n####         GraphX架构及数据结构\n####         Graphx创建图\n####         Graphx属性操作\n####         Graphx转换及结构操作\n####         GraphX连接与聚合\n####         GraphX强连通体算法\n####         GraphX案例场景中统一用户识别思路\n####         GraphX案例场景中识别用户\n####         GraphX案例场景中数据合并\n###     Spark原理及源码剖析\n####         Master、Worker及Driver核心组件\n####         Spark on Yarn模式运行机制\n####         Master、Worker启动流程\n####         程序模拟Master、Worker\n####         SparkContext内部组件\n####         SparkEnv组件\n####         SparkContext三大组件启动流程\n####         Spark作业调度之job触发\n####         Spark作业调度之Dag原理及重要组件\n####         Spark作业调度之stage划分\n####         Spark作业调度之Task调度\n####         Spark作业调度之调度策略\n####         Spark作业调度之失败重试机制\n####         Spark Shuffle之两阶段\n####         Spark Shuffle之Shuffle Writer流程\n####         Spark Shuffle之Shuffle Reader流程\n####         Spark Shuffle之参数调整\n####         Spark内存管理之堆内内存&堆外内存\n####         Spark内存管理之静态内存\n####         Spark内存管理之统一内存管理\n####         Spark内存管理之存储内存管理\n####         Spark内存管理之执行内存管理\n####         SlockManager\n####         Spark数据倾斜之基本概念\n####         Spark数据倾斜之解决策略\n####         Spark数据倾斜之解决策略\n####         Spark数据倾斜之Reduce并行度\n####         Spark数据倾斜之两阶段聚合\n####         Spark数据倾斜之key加盐打散、扩容\n####         Spark优化之资源优化\n####         Spark优化之动态资源分配\n## 智慧物流大数据项目\n###     智慧物流大数据项目\n####         Flume/Maxwell多源数据采集\n####         LigthGBM销量预测模型\n####         运输车辆动态规划调度\n####         车辆位置/指标实时监控\n####         多维度业务指标看板\n## 新一代计算利器Flink\n###     计算领域锋利的武器Flink\n####         Flink基础\n####         Flink进阶\n####             Flink的应用场景和架构模型\n####             Flink入门程序WordCount和SQL实现\n####             Flink的编程模型与其他框架比较\n####             Flink常用的DataSet和DataStream API\n####             Flink SQL & Table 编程和案例\n####             Flink集群安装部署和HA配置\n####             Flink常见核心概念分析\n####             Flink窗口、时间和水印\n####             Flink状态与容错\n####             Flink Side OutPut分流\n####             Flink CEP复杂时间处理\n####             Flink常用的source和Connecror\n## 开发环境配置（大数据开发（正式班）必备基础）\n###     搭建虚拟机集群\n####         给虚拟机挂载操作系统\n####         创建一台虚拟机\n####         开启虚拟机并安装操作系统\n####             配置内存2048\n####             配置磁盘20G\n####             选择ISO映像文件\n####             配置时区：shanghai\n####             配置分区 /boot /swap /\n####             配置密码\n####         配置静态IP\n####             NAT设置 网关 DHCP\n####             配置网络配置,注意细心设置文件\n####             网络适配器中要共享以太网的连接虚拟机网卡\n####         配置防火墙\n####             重启网卡service network restart\n####         虚拟机名称和hostName\n####          配置hostname与IP映射\n####         克隆并配置网络\n####         大数据集群环境准备\n####             时间服务器配置\n####             vim: command not found\n####             安装JDK\n###     网络编程\n####         网络模型\n####             物理层\n####             数据链路层\n####             网络层\n####             传输层\n####             会话层\n####             表示层\n####             应用层\n####         Socket 机制\n####             通信两端都有Socket，数据在两个Scoket之间IO传输，网络编程也称作为 Socket 编程，套接字编程\n####             基于UDP 协议的Socket 通信\n####         通信协议\n####             UDP\n####             TCP\n####             IP\n####             端口号\n####              基于TCP 协议的Socket 通信\n####         IO通信模型\n####             BIO（阻塞模式）\n####             NIO（非阻塞模式）\n####         RPC\n####             远程过程调用协议\n####             Java的RPC框架\n####             通信和序列化\n###     SecureCRT\n####         配置免密码登录"}},t=Object(r.a)({},(function(){var n=this.$createElement,a=this._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[a("h1",{attrs:{id:"大数据课程思维导图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#大数据课程思维导图"}},[this._v("#")]),this._v(" 大数据课程思维导图")]),this._v(" "),a("Markmap",{attrs:{id:"markmap_1a96284d",code:this.$dataBlock.markmap_1a96284d}})],1)}),[],!1,null,null,null);"function"==typeof o&&o(t);a.default=t.exports}}]);