(window.webpackJsonp=window.webpackJsonp||[]).push([[105],{543:function(t,e,n){"use strict";n.r(e);var r=n(16),a=function(t){t.options.__data__block__={markmap_1a96284d:"* 概述`实现了MVC设计模式的请求驱动类型的轻量级Web框架`\n\t- 优点\n\t\t- 支持各种视图技术\n\t\t- 与Spring框架集成\n\t\t- 清晰的组件角色\n\t\t- 处理各种资源的映射策略\n\t- 核心组件\n\t\t- 前端控制器 DispatcherServlet（不需要程序员开发）\n\t\t\t- 接受请求\n\t\t\t- 响应结果\n\t\t\t- MVC围绕DispatcherServlet来设计的\n\t\t- 处理器映射器HandlerMapping（不需要程序员开发）\n\t\t\t- 根据请求的URL来查找Handler\n\t\t- 处理器适配器HandlerAdapter\n\t\t- 处理器Handler（需要程序员开发）\n\t\t- 视图解析器 ViewResolver（不需要程序员开发）\n\t\t- 视图View（需要程序员开发jsp）\n\t- 工作原理\n\t\t- 1. 用户发送请求至前端控制器DispatcherServlet；\n\t\t* 2. DispatcherServlet收到请求后，调用HandlerMapping处理器映射器，请求获取Handle；\n\t\t* 3. 处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet；\n\t\t* 4. DispatcherServlet 调用 HandlerAdapter处理器适配器；\n\t\t* 5. HandlerAdapter 经过适配调用 具体处理器(Handler，也叫后端控制器)；\n\t\t* 6. Handler执行完成返回ModelAndView;\n\t\t- 7. HandlerAdapter将Handler执行结果ModelAndView返回给DispatcherServlet；\n\t\t- 8. DispatcherServlet将ModelAndView传给ViewResolver视图解析器进行解析；\n\t\t- 9. ViewResolver解析后返回具体View；\n\t\t- 10. DispatcherServlet对View进行渲染视图（即将模型数据填充至视图中）\n\t\t- 11. DispatcherServlet响应用户。\n\t- 使用\n\t\t- 注解\n\t\t\t- @RequestMapping：`用于处理请求 url 映射的注解`\n\t\t\t\t- 处理请求地址映射\n\t\t\t\t- 属性\n\t\t\t\t\t- value： 指定请求的实际地址\n\t\t\t\t\t- method： 指定请求的method类型\n\t\t\t\t\t- consumes： 指定处理请求的提交内容类型（Content-Type）\n\t\t\t\t\t- produces: 指定返回的内容类型\n\t\t\t\t\t- params： 指定request中必须包含某些参数值是\n\t\t\t\t\t- headers： 指定request中必须包含某些指定的header值\n\t\t\t- @RequestBody：`注解实现接收http请求的json数据`\n\t\t\t- @ResponseBody：`注解实现将conreoller方法返回对象转化为json对象响应给客户。`\n\t\t\t- @Controller：`表示为表现层`\n\t\t\t\t- 标记一个类是Controller\n\t\t\t\t- 分发处理器将会扫描使用了该注解的类的方法\n\t- 其他\n\t\t- Spring MVC与Struts2区别\n\t\t\t- 前端控制器不一样\n\t\t\t- 请求参数的接收方式不一样\n\t\t\t- 视图的处理不一样\n\t\t- Spring MVC拦截器\n\t\t\t- 实现HandlerInterceptor接口\n\t\t\t- 继承适配器类"}},s=Object(r.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h1",{attrs:{id:"spring-mvc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc"}},[this._v("#")]),this._v(" Spring MVC")]),this._v(" "),e("Markmap",{attrs:{id:"markmap_1a96284d",code:this.$dataBlock.markmap_1a96284d}})],1)}),[],!1,null,null,null);"function"==typeof a&&a(s);e.default=s.exports}}]);