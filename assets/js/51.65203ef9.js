(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{596:function(s,t,a){"use strict";a.r(t);var n=a(16),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"万字长文-选-redis-还是-mq-终于说明白了"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#万字长文-选-redis-还是-mq-终于说明白了"}},[s._v("#")]),s._v(" 万字长文：选 Redis 还是 MQ，终于说明白了！")]),s._v(" "),a("blockquote",[a("p",[s._v("经常听到很多人讨论：把 Redis 当作消息队列来用，是否合适？")]),s._v(" "),a("p",[s._v("有人表示赞成，他们认为 Redis 很轻量，用作队列很方便。")]),s._v(" "),a("p",[s._v("也有人反对，认为 Redis 会「丢」数据，最好还是用「专业」的消息中间件更稳妥。")]),s._v(" "),a("p",[s._v("究竟哪种方案更好呢？")]),s._v(" "),a("p",[s._v("这篇文章，我就和你聊一聊把 Redis 当作队列，究竟是否合适这个问题。")]),s._v(" "),a("p",[s._v("我会从简单到复杂，一步步带你梳理其中的细节，把这个问题真正讲清楚。")]),s._v(" "),a("p",[s._v("在文章的最后，我还会告诉你关于「技术选型」的思路，文章有点长，希望你可以耐心读完。")])]),s._v(" "),a("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://gitee.com/vicxsl/img/raw/master/img/1633936245383/image-20211011151044927.png",alt:"image-20211011151044927"}}),s._v(" "),a("h2",{attrs:{id:"从最简单的开始-list-队列"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#从最简单的开始-list-队列"}},[s._v("#")]),s._v(" 从最简单的开始：List 队列")]),s._v(" "),a("p",[s._v("如果你的业务需求足够简单，想把 "),a("code",[s._v("Redis")]),s._v(" 当作队列来使用，最先想到的肯定是 List 这个数据类型。")]),s._v(" "),a("p",[s._v("因为 List 底层的实现就是一个「链表」，在头部和尾部操作元素，时间复杂度都是 O(1)，这意味着它非常符合消息队列的模型。")]),s._v(" "),a("p",[s._v("如果把 List 当作队列，你可以这么来用。")]),s._v(" "),a("p",[s._v("生产者使用 LPUSH 发布消息：")]),s._v(" "),a("div",{staticClass:"language-powershell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("127"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("1:6379> LPUSH queue msg1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 1\n127"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("1:6379> LPUSH queue msg2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("消费者这一侧，使用 RPOP 拉取消息：")]),s._v(" "),a("div",{staticClass:"language-powershell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("127"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("1:6379> RPOP queue\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg1"')]),s._v("\n127"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("1:6379> RPOP queue\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg2"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/vicxsl/img/raw/master/img/1633936447778/image-20211011151407398.png",alt:"image-20211011151407398"}})]),s._v(" "),a("p",[s._v("但这里有个小问题，当队列中已经没有消息了，消费者在执行 RPOP 时，会返回 NULL。")]),s._v(" "),a("div",{staticClass:"language-powershell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-powershell"}},[a("code",[s._v("127"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("1:6379> RPOP queue\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" 没消息了\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("而我们在编写消费者逻辑时，一般是一个「死循环」，这个逻辑需要不断地从队列中拉取消息进行处理，伪代码一般会这么写：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rpop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" 没有消息，继续循环\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" 处理消息\n    handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("如果此时队列为空，那消费者依旧会频繁拉取消息，这会造成「CPU 空转」，不仅浪费 CPU 资源，还会对 Redis 造成压力。")]),s._v(" "),a("p",[s._v("怎么解决这个问题呢？")]),s._v(" "),a("p",[s._v("也很简单，当队列为空时，我们可以「休眠」一会，再去尝试拉取消息。代码可以修改成这样：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("rpop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" 没有消息，休眠2s\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        sleep"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" 处理消息        \n    handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("这就解决了 CPU 空转问题。")]),s._v(" "),a("p",[s._v("这个问题虽然解决了，但又带来另外一个问题：当消费者在休眠等待时，有新消息来了，那消费者处理新消息就会存在「延迟」。")]),s._v(" "),a("p",[s._v("假设设置的休眠时间是 2s，那新消息最多存在 2s 的延迟。")]),s._v(" "),a("p",[s._v("要想缩短这个延迟，只能减小休眠的时间。但休眠时间越小，又有可能引发 CPU 空转问题。")]),s._v(" "),a("p",[s._v("鱼和熊掌不可兼得。")]),s._v(" "),a("p",[s._v("那如何做，既能及时处理新消息，还能避免 CPU 空转呢？")]),s._v(" "),a("p",[s._v("Redis 是否存在这样一种机制：如果队列为空，消费者在拉取消息时就「阻塞等待」，一旦有新消息过来，就通知我的消费者立即处理新消息呢？")]),s._v(" "),a("p",[s._v("幸运的是，Redis 确实提供了「阻塞式」拉取消息的命令：BRPOP / BLPOP，这里的 B 指的是阻塞（Block）。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/vicxsl/img/raw/master/img/1633936649257/image-20211011151728871.png",alt:"image-20211011151728871"}})]),s._v(" "),a("p",[s._v("现在，你可以这样来拉取消息了：")]),s._v(" "),a("div",{staticClass:"language-python line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" true"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" 没消息阻塞等待，"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("表示不设置超时时间\n    msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("brpop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" msg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" null"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),s._v(" 处理消息\n    handle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[s._v("使用 BRPOP 这种阻塞式方式拉取消息时，还支持传入一个「超时时间」，如果设置为 0，则表示不设置超时，直到有新消息才返回，否则会在指定的超时时间后返回 NULL。")]),s._v(" "),a("p",[s._v("这个方案不错，既兼顾了效率，还避免了 CPU 空转问题，一举两得。")]),s._v(" "),a("blockquote",[a("p",[s._v("注意：如果设置的超时时间太长，这个连接太久没有活跃过，可能会被 Redis Server 判定为无效连接，之后 Redis Server 会强制把这个客户端踢下线。所以，采用这种方案，客户端要有重连机制。")])]),s._v(" "),a("p",[s._v("解决了消息处理不及时的问题，你可以再思考一下，这种队列模型，有什么缺点？")]),s._v(" "),a("p",[s._v("我们一起来分析一下：")]),s._v(" "),a("p",[a("strong",[s._v("1. 不支持重复消费")]),s._v("：消费者拉取消息后，这条消息就从 List 中删除了，无法被其它消费者再次消费，即不支持多个消费者消费同一批数据。")]),s._v(" "),a("p",[a("strong",[s._v("2. 消息丢失")]),s._v("：消费者拉取到消息后，如果发生异常宕机，那这条消息就丢失了")]),s._v(" "),a("p",[s._v("第一个问题是功能上的，使用 List 做消息队列，它仅仅支持最简单的，一组生产者对应一组消费者，不能满足多组生产者和消费者的业务场景。")]),s._v(" "),a("p",[s._v("第二个问题就比较棘手了，因为从 List 中 POP 一条消息出来后，这条消息就会立即从链表中删除了。也就是说，无论消费者是否处理成功，这条消息都没办法再次消费了。")]),s._v(" "),a("p",[s._v("这也意味着，如果消费者在处理消息时异常宕机，那这条消息就相当于丢失了。")]),s._v(" "),a("p",[s._v("针对这 2 个问题怎么解决呢？我们一个个来看。")]),s._v(" "),a("h2",{attrs:{id:"发布订阅模型-pub-sub"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发布订阅模型-pub-sub"}},[s._v("#")]),s._v(" 发布订阅模型：Pub/Sub")]),s._v(" "),a("p",[s._v("从名字就能看出来，这个模块是 Redis 专门针对「发布/订阅」这种队列模型设计的。")]),s._v(" "),a("p",[s._v("它正好能解决前面提到的第一个问题：重复消费。即多组生产者、消费者的场景，我们来看它是如何做的。")]),s._v(" "),a("p",[s._v("Redis 提供了 PUBLISH / SUBSCRIBE 命令，来完成发布、订阅的操作。")]),s._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5Cxwx535828%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20211011152004974.png",alt:"image-20211011152004974"}})]),s._v(" "),a("p",[s._v("假设你想开启 2 个消费者，同时消费同一批数据，就可以按照以下方式来实现。")]),s._v(" "),a("h3",{attrs:{id:"多个消费者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个消费者"}},[s._v("#")]),s._v(" 多个消费者")]),s._v(" "),a("p",[s._v("首先，使用 SUBSCRIBE 命令，启动 2 个消费者，并「订阅」同一个队列。")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 2个消费者 都订阅一个队列")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SUBSCRIBE queue\nReading messages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("press Ctrl"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("C to quit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"subscribe"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这 2 个消费者都会被阻塞住，等待新消息到来。")]),s._v(" "),a("p",[s._v("之后，再启动一个生产者，发布一条消息。")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" PUBLISH queue msg1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这时，2 个消费者就会解除阻塞，收到生产者发来的新消息。")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" SUBSCRIBE queue\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 收到新消息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg1"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("看到了么，使用 Pub/Sub 这种方案，既支持阻塞式拉取消息，还很好地满足了多组消费者，消费同一批数据的业务需求。")]),s._v(" "),a("h3",{attrs:{id:"多个生产者"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多个生产者"}},[s._v("#")]),s._v(" 多个生产者")]),s._v(" "),a("p",[s._v("除此之外，Pub/Sub 还提供了「匹配订阅」模式，允许消费者根据一定规则，订阅「多个」自己感兴趣的队列。")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 订阅符合规则的队列")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" PSUBSCRIBE queue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\nReading messages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("press Ctrl"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("C to quit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"psubscribe"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue.*"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这里的消费者，订阅了 queue.* 相关的队列消息。")]),s._v(" "),a("p",[s._v("之后，生产者分别向 queue.p1 和 queue.p2 发布消息。")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" PUBLISH queue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("p1 msg1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" PUBLISH queue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("p2 msg2\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("integer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("这时再看消费者，它就可以接收到这 2 个生产者的消息了。")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" PSUBSCRIBE queue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("\nReading messages"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("press Ctrl"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("C to quit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 来自queue.p1的消息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pmessage"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue.*"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue.p1"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg1"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 来自queue.p2的消息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pmessage"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue.*"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue.p2"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"msg2"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/vicxsl/img/raw/master/img/1633937042790/image-20211011152402401.png",alt:"image-20211011152402401"}})]),s._v(" "),a("p",[s._v("我们可以看到，Pub/Sub 最大的优势就是，支持多组生产者、消费者处理消息。")]),s._v(" "),a("h3",{attrs:{id:"消息丢失问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息丢失问题"}},[s._v("#")]),s._v(" 消息丢失问题")]),s._v(" "),a("p",[s._v("讲完了它的优点，那它有什么缺点呢？")]),s._v(" "),a("p",[s._v("其实，Pub/Sub 最大问题是："),a("strong",[s._v("丢数据")]),s._v("。")]),s._v(" "),a("p",[s._v("如果发生以下场景，就有可能导致数据丢失（主要都是可靠性的问题）：")]),s._v(" "),a("blockquote",[a("ul",[a("li",[s._v("消费者下线")]),s._v(" "),a("li",[s._v("Redis 宕机")]),s._v(" "),a("li",[s._v("消息堆积")])])]),s._v(" "),a("p",[s._v("这其实与 Pub/Sub 的实现方式有很大关系。")]),s._v(" "),a("p",[s._v("Pub/Sub 在实现时非常简单，它没有基于任何数据类型，也没有做任何的数据存储，只是单纯地为生产者、消费者建立「数据转发通道」，把符合规则的数据，从一端转发到另一端。")]),s._v(" "),a("p",[s._v("一个完整的发布、订阅消息处理流程是这样的：")]),s._v(" "),a("p",[s._v("1、消费者订阅指定队列，Redis 就会记录一个映射关系：队列->消费者")]),s._v(" "),a("p",[s._v("2、生产者向这个队列发布消息，那 Redis 就从映射关系中找出对应的消费者，把消息转发给它")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/vicxsl/img/raw/master/img/1633938084571/image-20211011154124184.png",alt:"image-20211011154124184"}})]),s._v(" "),a("p",[s._v("看到了么，整个过程中，没有任何的数据存储，一切都是实时转发的。")]),s._v(" "),a("p",[s._v("这种设计方案，就导致了上面提到的那些问题。")]),s._v(" "),a("p",[s._v("例如，如果一个消费者异常挂掉了，它再重新上线后，只能接收新的消息，在下线期间生产者发布的消息，因为找不到消费者，都会被丢弃掉。")]),s._v(" "),a("p",[s._v("如果所有消费者都下线了，那生产者发布的消息，因为找不到任何一个消费者，也会全部「丢弃」。")]),s._v(" "),a("p",[s._v("所以，当你在使用 Pub/Sub 时，一定要注意："),a("strong",[s._v("消费者必须先订阅队列，生产者才能发布消息，否则消息会丢失。")])]),s._v(" "),a("p",[s._v("这也是前面讲例子时，我们让消费者先订阅队列，之后才让生产者发布消息的原因。")]),s._v(" "),a("p",[s._v("另外，因为 Pub/Sub 没有基于任何数据类型实现，所以它也不具备「数据持久化」的能力。")]),s._v(" "),a("p",[s._v("也就是说，Pub/Sub 的相关操作，不会写入到 RDB 和 AOF 中，当 Redis 宕机重启，Pub/Sub 的数据也会全部丢失。")]),s._v(" "),a("p",[s._v("最后，我们来看 Pub/Sub 在处理「消息积压」时，为什么也会丢数据？")]),s._v(" "),a("p",[s._v("当消费者的速度，跟不上生产者时，就会导致数据积压的情况发生。")]),s._v(" "),a("p",[s._v("如果采用 List 当作队列，消息积压时，会导致这个链表很长，最直接的影响就是，Redis 内存会持续增长，直到消费者把所有数据都从链表中取出。")]),s._v(" "),a("p",[s._v("但 Pub/Sub 的处理方式却不一样，当消息积压时，有可能会导致"),a("strong",[s._v("消费失败和消息丢失")]),s._v("！")]),s._v(" "),a("h3",{attrs:{id:"消息缓冲区"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息缓冲区"}},[s._v("#")]),s._v(" 消息缓冲区")]),s._v(" "),a("p",[s._v("还是回到 Pub/Sub 的实现细节上来说。")]),s._v(" "),a("p",[s._v("每个消费者订阅一个队列时，Redis 都会在 Server 上给这个消费者再分配一个「缓冲区」，这个缓冲区其实就是一块内存。")]),s._v(" "),a("p",[s._v("当生产者发布消息时，Redis 先把消息写到对应消费者的缓冲区中。之后，消费者不断地从缓冲区读取消息，处理消息。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/vicxsl/img/raw/master/img/1633938216690/image-20211011154336315.png",alt:"image-20211011154336315"}})]),s._v(" "),a("p",[s._v("但是，问题就出在这个缓冲区上。")]),s._v(" "),a("p",[s._v("因为这个缓冲区其实是有「上限」的（可配置），如果消费者拉取消息很慢，就会造成生产者发布到缓冲区的消息开始积压，缓冲区内存持续增长。")]),s._v(" "),a("p",[s._v("如果超过了缓冲区配置的上限，此时，Redis 就会「强制」把这个消费者踢下线。")]),s._v(" "),a("p",[s._v("这时消费者就会消费失败，也会丢失数据。")]),s._v(" "),a("p",[s._v("如果你有看过 Redis 的配置文件，可以看到这个缓冲区的默认配置：client-output-buffer-limit pubsub 32mb 8mb 60。")]),s._v(" "),a("p",[s._v("它的参数含义如下：")]),s._v(" "),a("ul",[a("li",[s._v("32mb：缓冲区一旦超过 32MB，Redis 直接强制把消费者踢下线")]),s._v(" "),a("li",[s._v("8mb + 60：缓冲区超过 8MB，并且持续 60 秒，Redis 也会把消费者踢下线")])]),s._v(" "),a("p",[s._v("到这里，你应该可以看出："),a("strong",[s._v("List 是属于「拉」模型，而 Pub/Sub 其实属于「推」模型")]),s._v("。")]),s._v(" "),a("p",[s._v("List 中的数据可以一直积压在内存中，消费者什么时候来「拉」都可以。")]),s._v(" "),a("p",[s._v("但 Pub/Sub 是把消息先「推」到消费者在 Redis Server 上的缓冲区中，然后等消费者再来取。")]),s._v(" "),a("p",[s._v("当生产、消费速度不匹配时，就会导致缓冲区的内存开始膨胀，Redis 为了控制缓冲区的上限，所以就有了上面讲到的，强制把消费者踢下线的机制。")]),s._v(" "),a("h3",{attrs:{id:"优缺点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优缺点"}},[s._v("#")]),s._v(" 优缺点")]),s._v(" "),a("p",[s._v("好了，现在我们总结一下 Pub/Sub 的优缺点：")]),s._v(" "),a("p",[s._v("1、支持发布 / 订阅，多组生产者和消费者")]),s._v(" "),a("p",[s._v("2、消费者下线，数据会丢失")]),s._v(" "),a("p",[s._v("3、不支持数据持久化，Redis 宕机数据也会丢失")]),s._v(" "),a("p",[s._v("4、消息堆积，缓冲区溢出，消费者会被强制踢下线，数据也会丢失")]),s._v(" "),a("p",[s._v("有没有发现，除了第一个是优点之外，剩下的都是缺点。所以，很多人觉得 Pub/Sub 很「鸡肋」。")]),s._v(" "),a("p",[s._v("也正是以上原因，Pub/Sub 在实际的应用场景中用得并不多。")]),s._v(" "),a("blockquote",[a("p",[s._v("目前只有哨兵集群和 Redis 实例通信时，采用了 Pub/Sub 的方案，因为哨兵正好符合即时通讯的业务场景。")])]),s._v(" "),a("p",[s._v("我们再来看一下，Pub/Sub 有没有解决，消息处理时异常宕机，无法再次消费的问题呢？")]),s._v(" "),a("p",[s._v("其实也不行，Pub/Sub 从缓冲区取走数据之后，数据就从 Redis 缓冲区删除了，消费者发生异常，自然也无法再次重新消费。")]),s._v(" "),a("p",[s._v("好，现在我们重新梳理一下，当我们在使用一个消息队列时，希望它的功能如下：")]),s._v(" "),a("ul",[a("li",[s._v("支持阻塞等待拉取消息")]),s._v(" "),a("li",[s._v("支持发布 / 订阅模式")]),s._v(" "),a("li",[s._v("消费失败，可重新消费，消息不丢失")]),s._v(" "),a("li",[s._v("实例宕机，消息不丢失，数据可持久化")]),s._v(" "),a("li",[s._v("消息可堆积")])]),s._v(" "),a("p",[s._v("Redis 除了 List 和 Pub/Sub 之外，还有符合这些要求的数据类型吗？")]),s._v(" "),a("p",[s._v("其实，Redis 的作者也看到了以上这些问题，也一直在朝着这些方向努力着。")]),s._v(" "),a("p",[s._v("Redis 作者在开发 Redis 期间，还另外开发了一个开源项目 disque。这个项目的定位，就是一个基于内存的分布式消息队列中间件。")]),s._v(" "),a("p",[s._v("但由于种种原因，这个项目一直不温不火。")]),s._v(" "),a("p",[s._v("终于，在 Redis 5.0 版本，作者把 disque 功能移植到了 Redis 中，并给它定义了一个新的数据类型："),a("strong",[s._v("Stream")]),s._v("。下面我们就来看看，它能符合上面提到的这些要求吗？")]),s._v(" "),a("h1",{attrs:{id:"趋于成熟的队列-stream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#趋于成熟的队列-stream"}},[s._v("#")]),s._v(" 趋于成熟的队列：Stream")]),s._v(" "),a("p",[s._v("我们依旧从简单到复杂，依次来看 Stream 在做消息队列时，是如何处理的？")]),s._v(" "),a("p",[s._v("首先，Stream 通过 XADD 和 XREAD 完成最简单的生产、消费模型：")]),s._v(" "),a("ul",[a("li",[s._v("XADD：发布消息")]),s._v(" "),a("li",[s._v("XREAD：读取消息")])]),s._v(" "),a("p",[s._v("生产者发布 2 条消息：")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// *表示让Redis自动生成消息ID")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XADD queue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" name zhangsan\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618469123380-0"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XADD queue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" name lisi\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618469127777-0"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("使用 XADD 命令发布消息，其中的「*」表示让 Redis 自动生成唯一的消息 ID。")]),s._v(" "),a("p",[s._v("这个消息 ID 的格式是「时间戳-自增序号」。")]),s._v(" "),a("p",[s._v("消费者拉取消息：")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 从开头读取5条消息，0-0表示从开头读取")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XREAD COUNT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" STREAMS queue "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue"')]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618469123380-0"')]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhangsan"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618469127777-0"')]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lisi"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("如果想继续拉取消息，需要传入上一条消息的 ID：")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XREAD COUNT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" STREAMS queue "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1618469127777")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nil"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("以上就是 Stream 最简单的生产、消费。")]),s._v(" "),a("blockquote",[a("p",[s._v("这里不再重点介绍 Stream 命令的各种参数，我在例子中演示时，凡是大写的单词都是「固定」参数，凡是小写的单词，都是可以自己定义的，例如队列名、消息长度等等，下面的例子规则也是一样，为了方便你理解，这里有必要提醒一下。")])]),s._v(" "),a("p",[s._v("下面我们来看，针对前面提到的消息队列要求，Stream 都是如何解决的？")]),s._v(" "),a("h3",{attrs:{id:"stream-是否支持「阻塞式」拉取消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-是否支持「阻塞式」拉取消息"}},[s._v("#")]),s._v(" Stream 是否支持「阻塞式」拉取消息？")]),s._v(" "),a("p",[s._v("可以的，在读取消息时，只需要增加 BLOCK 参数即可。")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// BLOCK 0 表示阻塞等待，不设置超时时间")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XREAD COUNT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" BLOCK "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" STREAMS queue "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1618469127777")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这时，消费者就会阻塞等待，直到生产者发布新的消息才会返回。")]),s._v(" "),a("h3",{attrs:{id:"stream-是否支持发布-订阅模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-是否支持发布-订阅模式"}},[s._v("#")]),s._v(" Stream 是否支持发布 / 订阅模式？")]),s._v(" "),a("p",[s._v("也没问题，Stream 通过以下命令完成发布订阅：")]),s._v(" "),a("ul",[a("li",[s._v("XGROUP：创建消费者组")]),s._v(" "),a("li",[s._v("XREADGROUP：在指定消费组下，开启消费者拉取消息")])]),s._v(" "),a("p",[s._v("下面我们来看具体如何做？")]),s._v(" "),a("p",[s._v("首先，生产者依旧发布 2 条消息：")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XADD queue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" name zhangsan\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618470740565-0"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XADD queue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" name lisi\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618470743793-0"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("之后，我们想要开启 2 组消费者处理同一批数据，就需要创建 2 个消费者组：")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建消费者组1，0-0表示从头拉取消息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XGROUP CREATE queue group1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nOK\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建消费者组2，0-0表示从头拉取消息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XGROUP CREATE queue group2 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nOK\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("消费者组创建好之后，我们可以给每个「消费者组」下面挂一个「消费者」，让它们分别处理同一批数据。")]),s._v(" "),a("p",[s._v("第一个消费组开始消费：")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// group1的consumer开始消费，>表示拉取最新数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XREADGROUP GROUP group1 consumer COUNT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" STREAMS queue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue"')]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618470740565-0"')]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhangsan"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618470743793-0"')]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lisi"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("同样地，第二个消费组开始消费：")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// group2的consumer开始消费，>表示拉取最新数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XREADGROUP GROUP group2 consumer COUNT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" STREAMS queue "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue"')]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618470740565-0"')]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhangsan"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618470743793-0"')]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lisi"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("我们可以看到，这 2 组消费者，都可以获取同一批数据进行处理了。")]),s._v(" "),a("p",[s._v("这样一来，就达到了多组消费者「订阅」消费的目的。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/vicxsl/img/raw/master/img/1633939014644/image-20211011155654240.png",alt:"image-20211011155654240"}})]),s._v(" "),a("h3",{attrs:{id:"消息处理时异常-stream-能否保证消息不丢失-重新消费"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息处理时异常-stream-能否保证消息不丢失-重新消费"}},[s._v("#")]),s._v(" 消息处理时异常，Stream 能否保证消息不丢失，重新消费？")]),s._v(" "),a("p",[s._v("除了上面拉取消息时用到了消息 ID，这里为了保证重新消费，也要用到这个消息 ID。")]),s._v(" "),a("p",[s._v("当一组消费者处理完消息后，需要执行 XACK 命令告知 Redis，这时 Redis 就会把这条消息标记为「处理完成」。"),a("code",[s._v("消息确认机制")])]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// group1下的 1618472043089-0 消息已处理完成")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XACK queue group1 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1618472043089")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://gitee.com/vicxsl/img/raw/master/img/1633939080955/image-20211011155800557.png",alt:"image-20211011155800557"}})]),s._v(" "),a("p",[s._v("如果消费者异常宕机，肯定不会发送 XACK，那么 Redis 就会依旧保留这条消息。")]),s._v(" "),a("p",[s._v("待这组消费者重新上线后，Redis 就会把之前没有处理成功的数据，重新发给这个消费者。这样一来，即使消费者异常，也不会丢失数据了。")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消费者重新上线，0-0表示重新拉取未ACK的消息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XREADGROUP GROUP group1 consumer1 COUNT "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" STREAMS queue "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 之前没消费成功的数据，依旧可以重新消费")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"queue"')]),s._v("\n   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618472043089-0"')]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"zhangsan"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618472045158-0"')]),s._v("\n         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name"')]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lisi"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("h3",{attrs:{id:"stream-会写入到-rdb-和-aof-做持久化吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stream-会写入到-rdb-和-aof-做持久化吗"}},[s._v("#")]),s._v(" Stream 会写入到 RDB 和 AOF 做持久化吗？")]),s._v(" "),a("p",[s._v("Stream 是新增的数据类型，它与其它数据类型一样，每个写操作都会写入到 RDB 和 AOF 中。")]),s._v(" "),a("p",[s._v("我们只需要配置好持久化策略，这样的话，就算 Redis 宕机重启，Stream 中的数据也可以从 RDB 或 AOF 中恢复回来。")]),s._v(" "),a("h3",{attrs:{id:"消息堆积时-stream-是怎么处理的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息堆积时-stream-是怎么处理的"}},[s._v("#")]),s._v(" 消息堆积时，Stream 是怎么处理的？")]),s._v(" "),a("p",[s._v("其实，当消息队列发生消息堆积时，一般只有 2 个解决方案：")]),s._v(" "),a("ol",[a("li",[s._v("生产者限流：避免消费者处理不及时，导致持续积压")]),s._v(" "),a("li",[s._v("丢弃消息：中间件丢弃旧消息，只保留固定长度的新消息")])]),s._v(" "),a("p",[s._v("而 Redis 在实现 Stream 时，采用了第 2 个方案。")]),s._v(" "),a("p",[s._v("在发布消息时，你可以指定队列的最大长度，防止队列积压导致内存爆炸。")]),s._v(" "),a("div",{staticClass:"language-clike line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-clike"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 队列长度最大10000")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" XADD queue MAXLEN "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" name zhangsan\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1618473015018-0"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("当队列长度超过上限后，旧消息会被删除，只保留固定长度的新消息。")]),s._v(" "),a("p",[s._v("这么来看，Stream 在消息积压时，如果指定了最大长度，还是有可能丢失消息的。")]),s._v(" "),a("blockquote",[a("p",[s._v("除了以上介绍到的命令，Stream 还支持查看消息长度（XLEN）、查看消费者状态（XINFO）等命令，使用也比较简单，你可以查询官方文档了解一下，这里就不过多介绍了。")])]),s._v(" "),a("p",[s._v("好了，通过以上介绍，我们可以看到，Redis 的 Stream 几乎覆盖到了消息队列的各种场景，是不是觉得很完美？")]),s._v(" "),a("p",[a("strong",[s._v("既然它的功能这么强大，这是不是意味着，Redis 真的可以作为专业的消息队列中间件来使用呢？")])]),s._v(" "),a("p",[s._v("但是还「差一点」，就算 Redis 能做到以上这些，也只是「趋近于」专业的消息队列。")]),s._v(" "),a("p",[s._v("原因在于 Redis 本身的一些问题，如果把其定位成消息队列，还是有些欠缺的。")]),s._v(" "),a("p",[s._v("到这里，就不得不把 Redis 与专业的队列中间件做对比了。")]),s._v(" "),a("p",[s._v("下面我们就来看一下，Redis 在作队列时，到底还有哪些欠缺？")]),s._v(" "),a("h2",{attrs:{id:"redis-与专业的-mq-对比"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-与专业的-mq-对比"}},[s._v("#")]),s._v(" Redis 与专业的 MQ 对比")]),s._v(" "),a("p",[s._v("一个专业的消息队列，必须要做到两点：")]),s._v(" "),a("blockquote",[a("p",[s._v("1、消息不丢")]),s._v(" "),a("p",[s._v("2、消息可堆积")])]),s._v(" "),a("p",[s._v("前面我们讨论的重点，很大篇幅是围绕第一点展开的。这里我们换个角度，从一个消息队列的「使用模型」来分析一下，怎么做才能保证数据不丢？")]),s._v(" "),a("p",[s._v("使用一个消息队列，其实就分为三大块："),a("strong",[s._v("生产者、队列中间件、消费者")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/vicxsl/img/raw/master/img/1633939239742/image-20211011160039337.png",alt:"image-20211011160039337"}})]),s._v(" "),a("p",[s._v("消息是否会发生丢失，在于以下 3 个环节：")]),s._v(" "),a("blockquote",[a("p",[s._v("1、生产者会不会丢消息？")]),s._v(" "),a("p",[s._v("2、消费者会不会丢消息？")]),s._v(" "),a("p",[s._v("3、队列中间件会不会丢消息？")])]),s._v(" "),a("h3",{attrs:{id:"生产者会不会丢消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生产者会不会丢消息"}},[s._v("#")]),s._v(" 生产者会不会丢消息？")]),s._v(" "),a("p",[s._v("当生产者在发布消息时，可能发生以下异常情况：")]),s._v(" "),a("ol",[a("li",[s._v("消息没发出去：网络故障或其它问题导致发布失败，中间件直接返回失败")]),s._v(" "),a("li",[s._v("不确定是否发布成功：网络问题导致发布超时，可能数据已发送成功，但读取响应结果超时了")])]),s._v(" "),a("p",[s._v("如果是情况 1，消息根本没发出去，那么重新发一次就好了。")]),s._v(" "),a("p",[s._v("如果是情况 2，生产者没办法知道消息到底有没有发成功？所以，为了避免消息丢失，它也只能继续重试，直到发布成功为止。")]),s._v(" "),a("blockquote",[a("p",[s._v("生产者一般会设定一个最大重试次数，超过上限依旧失败，需要记录日志报警处理。")])]),s._v(" "),a("p",[s._v("也就是说，生产者为了避免消息丢失，只能采用失败重试的方式来处理。")]),s._v(" "),a("p",[s._v("但发现没有？这也意味着消息可能会重复发送。")]),s._v(" "),a("p",[s._v("是的，在使用消息队列时，要保证消息不丢，宁可重发，也不能丢弃。")]),s._v(" "),a("p",[s._v("那消费者这边，就需要多做一些逻辑了。")]),s._v(" "),a("p",[s._v("对于敏感业务，当消费者收到重复数据数据时，要"),a("strong",[s._v("设计幂等逻辑")]),s._v("，保证业务的正确性。")]),s._v(" "),a("p",[s._v("从这个角度来看，生产者会不会丢消息，取决于生产者对于异常情况的处理是否合理。")]),s._v(" "),a("p",[s._v("所以，无论是 Redis 还是专业的队列中间件，生产者在这一点上都是可以保证消息不丢的。")]),s._v(" "),a("h3",{attrs:{id:"消费者会不会丢消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消费者会不会丢消息"}},[s._v("#")]),s._v(" 消费者会不会丢消息？")]),s._v(" "),a("p",[s._v("这种情况就是我们前面提到的，消费者拿到消息后，还没处理完成，就异常宕机了，那消费者还能否重新消费失败的消息？")]),s._v(" "),a("p",[s._v("要解决这个问题，消费者在处理完消息后，必须**「告知」**队列中间件，队列中间件才会把标记已处理，否则仍旧把这些数据发给消费者。"),a("code",[s._v("消费确认机制")])]),s._v(" "),a("p",[s._v("这种方案需要消费者和中间件互相配合，才能保证消费者这一侧的消息不丢。")]),s._v(" "),a("p",[s._v("无论是 Redis 的 Stream，还是专业的 MQ，例如 RabbitMQ、Kafka，其实都是这么做的。")]),s._v(" "),a("p",[s._v("所以，从这个角度来看，Redis 也是合格的。")]),s._v(" "),a("h3",{attrs:{id:"队列中间件会不会丢消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#队列中间件会不会丢消息"}},[s._v("#")]),s._v(" 队列中间件会不会丢消息？")]),s._v(" "),a("p",[s._v("前面 2 个问题都比较好处理，只要客户端和服务端配合好，就能保证生产端、消费端都不丢消息。")]),s._v(" "),a("p",[s._v("但是，如果队列中间件本身就不可靠呢？")]),s._v(" "),a("p",[s._v("毕竟生产者和消费这都依赖它，如果它不可靠，那么生产者和消费者无论怎么做，都无法保证数据不丢。")]),s._v(" "),a("p",[s._v("在这个方面，Redis 其实没有达到要求。")]),s._v(" "),a("p",[s._v("Redis 在以下 2 个场景下，都会导致数据丢失。")]),s._v(" "),a("ol",[a("li",[s._v("AOF 持久化配置为每秒写盘，但这个写盘过程是异步的，Redis 宕机时会存在数据丢失的可能")]),s._v(" "),a("li",[s._v("主从复制也是异步的，主从切换时，也存在丢失数据的可能（从库还未同步完成主库发来的数据，就被提成主库）")]),s._v(" "),a("li",[s._v("基于以上原因我们可以看到，"),a("strong",[s._v("Redis 本身的无法保证严格的数据完整性")]),s._v("。")])]),s._v(" "),a("p",[s._v("所以，如果把 Redis 当做消息队列，在这方面是有可能导致数据丢失的。")]),s._v(" "),a("p",[s._v("再来看那些专业的消息队列中间件是如何解决这个问题的？")]),s._v(" "),a("p",[s._v("像 RabbitMQ 或 Kafka 这类专业的队列中间件，一般是集群部署，生产者在发布消息时，队列中间件通常会写「多个节点」，以此保证消息的完整性。这样一来，即便其中一个节点挂了，也能保证集群的数据不丢失。")]),s._v(" "),a("p",[s._v("也正因为如此，RabbitMQ、Kafka在设计时也更复杂。毕竟，它们是专门针对队列场景设计的。")]),s._v(" "),a("p",[s._v("但 Redis 的定位则不同，它的定位更多是当作缓存来用，它们两者在这个方面肯定是存在差异的。")]),s._v(" "),a("p",[s._v("最后，我们来看消息积压怎么办？")]),s._v(" "),a("h3",{attrs:{id:"消息积压怎么办"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息积压怎么办"}},[s._v("#")]),s._v(" 消息积压怎么办？")]),s._v(" "),a("p",[s._v("因为 Redis 的数据都存储在内存中，这就意味着一旦发生消息积压，则会导致 Redis 的内存持续增长，如果超过机器内存上限，就会面临被 OOM 的风险。")]),s._v(" "),a("p",[s._v("所以，Redis 的 Stream 提供了可以指定队列最大长度的功能，就是为了避免这种情况发生。")]),s._v(" "),a("p",[s._v("但 Kafka、RabbitMQ 这类消息队列就不一样了，它们的数据都存储在磁盘上，磁盘的成本要比内存小得多，当消息积压时无非就是多用一些磁盘空间，对比内存会更加「坦然」。")]),s._v(" "),a("p",[s._v("综上，我们可以看到，把 Redis 当作队列来使用时，始终面临的 2 个问题：")]),s._v(" "),a("p",[s._v("1、Redis 本身可能会丢数据")]),s._v(" "),a("p",[s._v("2、面对消息积压，Redis 内存资源紧张")]),s._v(" "),a("p",[s._v("到这里，Redis 是否可以用作队列，我想答案比较清晰了。")]),s._v(" "),a("p",[s._v("如果你的业务场景足够简单，对于数据丢失不敏感，而且消息积压概率比较小的情况下，把 Redis 当作队列是完全可以的。")]),s._v(" "),a("p",[s._v("而且，Redis 相比于 Kafka、RabbitMQ，部署和运维也更加轻量。")]),s._v(" "),a("p",[s._v("如果你的业务场景对于数据丢失非常敏感，而且写入量非常大，消息积压时会占用很多的机器资源，那么我建议你使用专业的消息队列中间件。")]),s._v(" "),a("h1",{attrs:{id:"写在最后"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#写在最后"}},[s._v("#")]),s._v(" "),a("strong",[s._v("写在最后")])]),s._v(" "),a("p",[s._v("好了，总结一下。这篇文章我们从「Redis 能否用作队列」这个角度出发，介绍了 List、Pub/Sub、Stream 在做队列的使用方式，以及它们各自的优劣。")]),s._v(" "),a("p",[s._v("之后又把 Redis 和专业的消息队列中间件做对比，发现 Redis 的不足之处。")]),s._v(" "),a("p",[s._v("最后，我们得出 Redis 做队列的合适场景。")]),s._v(" "),a("p",[s._v("下面这个表格总结了它们各自的优缺点。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/vicxsl/img/raw/master/img/1633940251122/image-20211011161730705.png",alt:"image-20211011161730705"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);