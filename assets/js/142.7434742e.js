(window.webpackJsonp=window.webpackJsonp||[]).push([[142],{671:function(a,t,r){"use strict";r.r(t);var s=r(16),_=Object(s.a)({},(function(){var a=this,t=a.$createElement,r=a._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"技术面试知识点整理【目录】"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#技术面试知识点整理【目录】"}},[a._v("#")]),a._v(" 技术面试知识点整理【目录】")]),a._v(" "),r("blockquote",[r("p",[r("strong",[a._v("说明")]),a._v("：")]),a._v(" "),r("p",[r("strong",[a._v("1. 本文较长共整合27个专题，GitHub用户如果访问的比较慢的话，可以点击下面的链接进群下载本地PDF文件，或者继续在GitHub在线阅读")])]),a._v(" "),r("p",[r("strong",[a._v("2. "),r("a",{attrs:{href:"https://jq.qq.com/?_wv=1027&k=5Op2CWT",target:"_blank",rel:"noopener noreferrer"}},[a._v("点击此处进群免费获取PDF版本"),r("OutboundLink")],1)])]),a._v(" "),r("p",[r("strong",[a._v("3. 目前还只同步部分内容至GitHub，后续会慢慢同步上来，可放心"),r("code",[a._v("Ctrl+D")])])])]),a._v(" "),r("hr"),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E6%A0%A1%E6%8B%9B%E7%9C%9F%E9%A2%98%E9%A2%98%E8%A7%A3"}},[a._v("一、校招真题题解")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E5%89%8D%E8%A8%80"}},[a._v("前言")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#1-%E5%B0%8F%E7%B1%B3-%E5%B0%8F%E7%B1%B3git"}},[a._v("1. 小米-小米Git")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%B0%8F%E7%B1%B3-%E6%87%82%E4%BA%8C%E8%BF%9B%E5%88%B6"}},[a._v("2. 小米-懂二进制")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%B0%8F%E7%B1%B3-%E4%B8%AD%E5%9B%BD%E7%89%9B%E5%B8%82"}},[a._v("3. 小米-中国牛市")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%BE%AE%E8%BD%AF-lucky-string"}},[a._v("4. 微软-LUCKY STRING")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%BE%AE%E8%BD%AF-numeric-keypad"}},[a._v("5. 微软-Numeric Keypad")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%BE%AE%E8%BD%AF-spring-outing"}},[a._v("6. 微软-Spring Outing")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E5%8D%8E%E4%B8%BA-%E6%9C%80%E9%AB%98%E5%88%86%E6%98%AF%E5%A4%9A%E5%B0%91"}},[a._v("7. 华为-最高分是多少")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E5%8D%8E%E4%B8%BA-%E7%AE%80%E5%8D%95%E9%94%99%E8%AF%AF%E8%AE%B0%E5%BD%95"}},[a._v("8. 华为-简单错误记录")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E5%8D%8E%E4%B8%BA-%E6%89%91%E5%85%8B%E7%89%8C%E5%A4%A7%E5%B0%8F"}},[a._v("9. 华为-扑克牌大小")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-%E5%8E%BB%E5%93%AA%E5%84%BF-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE"}},[a._v("10. 去哪儿-二分查找")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-%E5%8E%BB%E5%93%AA%E5%84%BF-%E9%A6%96%E4%B8%AA%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6"}},[a._v("11. 去哪儿-首个重复字符")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#12-%E5%8E%BB%E5%93%AA%E5%84%BF-%E5%AF%BB%E6%89%BEcoder"}},[a._v("12. 去哪儿-寻找Coder")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#13-%E7%BE%8E%E5%9B%A2-%E6%9C%80%E5%A4%A7%E5%B7%AE%E5%80%BC"}},[a._v("13. 美团-最大差值")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#14-%E7%BE%8E%E5%9B%A2-%E6%A3%8B%E5%AD%90%E7%BF%BB%E8%BD%AC"}},[a._v("14. 美团-棋子翻转")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#15-%E7%BE%8E%E5%9B%A2-%E6%8B%9C%E8%AE%BF"}},[a._v("15. 美团-拜访")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#16-%E7%BE%8E%E5%9B%A2-%E7%9B%B4%E6%96%B9%E5%9B%BE%E5%86%85%E6%9C%80%E5%A4%A7%E7%9F%A9%E5%BD%A2"}},[a._v("16. 美团-直方图内最大矩形")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#17-%E7%BE%8E%E5%9B%A2-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%AE%A1%E6%95%B0"}},[a._v("17. 美团-字符串计数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#18-%E7%BE%8E%E5%9B%A2-%E5%B9%B3%E5%9D%87%E5%B9%B4%E9%BE%84"}},[a._v("18. 美团-平均年龄")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#19-%E7%99%BE%E5%BA%A6-%E7%BD%AA%E7%8A%AF%E8%BD%AC%E7%A7%BB"}},[a._v("19. 百度-罪犯转移")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#20-%E7%99%BE%E5%BA%A6-%E8%A3%81%E5%87%8F%E7%BD%91%E6%A0%BC%E7%BA%B8"}},[a._v("20. 百度-裁减网格纸")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#21-%E7%99%BE%E5%BA%A6-%E9%92%93%E9%B1%BC%E6%AF%94%E8%B5%9B"}},[a._v("21. 百度-钓鱼比赛")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#22-%E7%99%BE%E5%BA%A6-%E8%98%91%E8%8F%87%E9%98%B5"}},[a._v("22. 百度-蘑菇阵")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C"}},[a._v("二、计算机网络")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E6%A6%82%E8%BF%B0"}},[a._v("（一）、概述")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%BD%91%E7%BB%9C%E7%9A%84%E7%BD%91%E7%BB%9C"}},[a._v("1. 网络的网络")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-isp"}},[a._v("2. ISP")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E4%BA%92%E8%81%94%E7%BD%91%E7%9A%84%E7%BB%84%E6%88%90"}},[a._v("3. 互联网的组成")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E4%B8%BB%E6%9C%BA%E4%B9%8B%E9%97%B4%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F"}},[a._v("4. 主机之间的通信方式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2%E4%B8%8E%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2"}},[a._v("5. 电路交换与分组交换")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2"}},[a._v("⑴. 电路交换")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2"}},[a._v("⑵. 报文交换")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2"}},[a._v("⑶. 分组交换")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E6%97%B6%E5%BB%B6"}},[a._v("6. 时延")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%8F%91%E9%80%81%E6%97%B6%E5%BB%B6"}},[a._v("⑴. 发送时延")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BC%A0%E6%92%AD%E6%97%B6%E5%BB%B6"}},[a._v("⑵. 传播时延")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A4%84%E7%90%86%E6%97%B6%E5%BB%B6"}},[a._v("⑶. 处理时延")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%8E%92%E9%98%9F%E6%97%B6%E5%BB%B6"}},[a._v("⑷. 排队时延")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84"}},[a._v("7. 计算机网络体系结构*")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%B8%83%E5%B1%82%E5%8D%8F%E8%AE%AE"}},[a._v("⑴. 七层协议")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BA%94%E5%B1%82%E5%8D%8F%E8%AE%AE"}},[a._v("⑵. 五层协议")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%95%B0%E6%8D%AE%E5%9C%A8%E5%90%84%E5%B1%82%E4%B9%8B%E9%97%B4%E7%9A%84%E4%BC%A0%E9%80%92%E8%BF%87%E7%A8%8B"}},[a._v("⑶. 数据在各层之间的传递过程")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-tcpip-%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84"}},[a._v("⑷. TCP/IP 体系结构")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E7%89%A9%E7%90%86%E5%B1%82"}},[a._v("（二）、物理层")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F"}},[a._v("1. 通信方式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%B8%A6%E9%80%9A%E8%B0%83%E5%88%B6"}},[a._v("2. 带通调制")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E4%BF%A1%E9%81%93%E5%A4%8D%E7%94%A8%E6%8A%80%E6%9C%AF"}},[a._v("3. 信道复用技术")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E9%A2%91%E5%88%86%E5%A4%8D%E7%94%A8%E6%97%B6%E5%88%86%E5%A4%8D%E7%94%A8"}},[a._v("⑴. 频分复用、时分复用")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BB%9F%E8%AE%A1%E6%97%B6%E5%88%86%E5%A4%8D%E7%94%A8"}},[a._v("⑵. 统计时分复用")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%B3%A2%E5%88%86%E5%A4%8D%E7%94%A8"}},[a._v("⑶. 波分复用")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%A0%81%E5%88%86%E5%A4%8D%E7%94%A8"}},[a._v("⑷. 码分复用")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82"}},[a._v("（三）、数据链路层")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E4%BF%A1%E9%81%93%E5%88%86%E7%B1%BB"}},[a._v("1. 信道分类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E4%B8%89%E4%B8%AA%E5%9F%BA%E6%9C%AC%E9%97%AE%E9%A2%98"}},[a._v("2. 三个基本问题")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%B0%81%E8%A3%85%E6%88%90%E5%B8%A7"}},[a._v("⑴. 封装成帧")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%80%8F%E6%98%8E%E4%BC%A0%E8%BE%93"}},[a._v("⑵. 透明传输")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%B7%AE%E9%94%99%E6%A3%80%E6%B5%8B"}},[a._v("⑶. 差错检测")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%B1%80%E5%9F%9F%E7%BD%91"}},[a._v("3. 局域网")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-ppp-%E5%8D%8F%E8%AE%AE"}},[a._v("4. PPP 协议")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-csmacd-%E5%8D%8F%E8%AE%AE"}},[a._v("5. CSMA/CD 协议*")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E6%89%A9%E5%B1%95%E5%B1%80%E5%9F%9F%E7%BD%91"}},[a._v("6. 扩展局域网*")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%9C%A8%E7%89%A9%E7%90%86%E5%B1%82%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%B1%95"}},[a._v("⑴. 在物理层进行扩展")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%9C%A8%E9%93%BE%E8%B7%AF%E5%B1%82%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%B1%95"}},[a._v("⑵. 在链路层进行扩展")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%99%9A%E6%8B%9F%E5%B1%80%E5%9F%9F%E7%BD%91"}},[a._v("⑶. 虚拟局域网")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-mac-%E5%B1%82"}},[a._v("7. MAC 层*")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E7%BD%91%E7%BB%9C%E5%B1%82"}},[a._v("（四）、网络层")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%BD%91%E9%99%85%E5%8D%8F%E8%AE%AE-ip-%E6%A6%82%E8%BF%B0"}},[a._v("1. 网际协议 IP 概述")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-ip-%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%A0%BC%E5%BC%8F"}},[a._v("2. IP 数据报格式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-ip-%E5%9C%B0%E5%9D%80%E7%BC%96%E5%9D%80%E6%96%B9%E5%BC%8F"}},[a._v("3. IP 地址编址方式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%88%86%E7%B1%BB"}},[a._v("⑴. 分类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86"}},[a._v("⑵. 子网划分")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%97%A0%E5%88%86%E7%B1%BB"}},[a._v("⑶. 无分类")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-ip-%E5%9C%B0%E5%9D%80%E5%92%8C-mac-%E5%9C%B0%E5%9D%80"}},[a._v("4. IP 地址和 MAC 地址")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%9C%B0%E5%9D%80%E8%A7%A3%E6%9E%90%E5%8D%8F%E8%AE%AE-arp"}},[a._v("5. 地址解析协议 ARP")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E8%B7%AF%E7%94%B1%E5%99%A8%E7%9A%84%E7%BB%93%E6%9E%84"}},[a._v("6. 路由器的结构")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E8%B7%AF%E7%94%B1%E5%99%A8%E5%88%86%E7%BB%84%E8%BD%AC%E5%8F%91%E6%B5%81%E7%A8%8B"}},[a._v("7. 路由器分组转发流程")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9%E5%8D%8F%E8%AE%AE"}},[a._v("8. 路由选择协议")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%86%85%E9%83%A8%E7%BD%91%E5%85%B3%E5%8D%8F%E8%AE%AE-rip"}},[a._v("⑴. 内部网关协议 RIP")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%86%85%E9%83%A8%E7%BD%91%E5%85%B3%E5%8D%8F%E8%AE%AE-ospf"}},[a._v("⑵. 内部网关协议 OSPF")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A4%96%E9%83%A8%E7%BD%91%E5%85%B3%E5%8D%8F%E8%AE%AE-bgp"}},[a._v("⑶. 外部网关协议 BGP")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E7%BD%91%E9%99%85%E6%8E%A7%E5%88%B6%E6%8A%A5%E6%96%87%E5%8D%8F%E8%AE%AE-icmp"}},[a._v("9. 网际控制报文协议 ICMP")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-%E5%88%86%E7%BB%84%E7%BD%91%E9%97%B4%E6%8E%A2%E6%B5%8B-ping"}},[a._v("10. 分组网间探测 PING")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-%E8%99%9A%E6%8B%9F%E4%B8%93%E7%94%A8%E7%BD%91-vpn"}},[a._v("11. 虚拟专用网 VPN")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#12-%E7%BD%91%E7%BB%9C%E5%9C%B0%E5%9D%80%E8%BD%AC%E6%8D%A2-nat"}},[a._v("12. 网络地址转换 NAT")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E4%BC%A0%E8%BE%93%E5%B1%82"}},[a._v("（五）、传输层")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-udp-%E5%92%8C-tcp-%E7%9A%84%E7%89%B9%E7%82%B9"}},[a._v("1. UDP 和 TCP 的特点")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-udp-%E9%A6%96%E9%83%A8%E6%A0%BC%E5%BC%8F"}},[a._v("2. UDP 首部格式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-tcp-%E9%A6%96%E9%83%A8%E6%A0%BC%E5%BC%8F"}},[a._v("3. TCP 首部格式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-tcp-%E7%9A%84%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B"}},[a._v("4. TCP 的三次握手")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-tcp-%E7%9A%84%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B"}},[a._v("5. TCP 的四次挥手")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-tcp-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3"}},[a._v("6. TCP 滑动窗口")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-tcp-%E5%8F%AF%E9%9D%A0%E4%BC%A0%E8%BE%93"}},[a._v("7. TCP 可靠传输")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-tcp-%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6"}},[a._v("8. TCP 流量控制")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-tcp-%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6"}},[a._v("9. TCP 拥塞控制")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-%E6%85%A2%E5%BC%80%E5%A7%8B%E4%B8%8E%E6%8B%A5%E5%A1%9E%E9%81%BF%E5%85%8D"}},[a._v("10. 慢开始与拥塞避免")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-%E5%BF%AB%E9%87%8D%E4%BC%A0%E4%B8%8E%E5%BF%AB%E6%81%A2%E5%A4%8D"}},[a._v("11. 快重传与快恢复")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E5%BA%94%E7%94%A8%E5%B1%82"}},[a._v("（六）、应用层")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%9F%9F%E5%90%8D%E7%B3%BB%E7%BB%9F-dns"}},[a._v("1. 域名系统 DNS")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%B1%82%E6%AC%A1%E7%BB%93%E6%9E%84"}},[a._v("⑴. 层次结构")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%A7%A3%E6%9E%90%E8%BF%87%E7%A8%8B"}},[a._v("⑵. 解析过程")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93%E5%8D%8F%E8%AE%AE-ftp"}},[a._v("2. 文件传输协议 FTP")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E8%BF%9C%E7%A8%8B%E7%BB%88%E7%AB%AF%E5%8D%8F%E8%AE%AE-telnet"}},[a._v("3. 远程终端协议 TELNET")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E7%94%B5%E5%AD%90%E9%82%AE%E4%BB%B6%E5%8D%8F%E8%AE%AE"}},[a._v("4. 电子邮件协议")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-pop3"}},[a._v("⑴. POP3")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-imap"}},[a._v("⑵. IMAP")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-smtp"}},[a._v("⑶. SMTP")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%8A%A8%E6%80%81%E4%B8%BB%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%8D%8F%E8%AE%AE-dhcp"}},[a._v("5. 动态主机配置协议 DHCP")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E7%82%B9%E5%AF%B9%E7%82%B9%E4%BC%A0%E8%BE%93-p2p"}},[a._v("6. 点对点传输 P2P")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-web-%E9%A1%B5%E9%9D%A2%E8%AF%B7%E6%B1%82%E8%BF%87%E7%A8%8B"}},[a._v("7. Web 页面请求过程")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-dhcp-%E9%85%8D%E7%BD%AE%E4%B8%BB%E6%9C%BA%E4%BF%A1%E6%81%AF"}},[a._v("⑴. DHCP 配置主机信息")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-arp-%E8%A7%A3%E6%9E%90-mac-%E5%9C%B0%E5%9D%80"}},[a._v("⑵. ARP 解析 MAC 地址")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-dns-%E8%A7%A3%E6%9E%90%E5%9F%9F%E5%90%8D"}},[a._v("⑶. DNS 解析域名")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-http-%E8%AF%B7%E6%B1%82%E9%A1%B5%E9%9D%A2"}},[a._v("⑷. HTTP 请求页面")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E5%B8%B8%E7%94%A8%E7%AB%AF%E5%8F%A3"}},[a._v("8. 常用端口")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89http"}},[a._v("三、HTTP")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5"}},[a._v("（一）、基本概念")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-web-%E5%9F%BA%E7%A1%80"}},[a._v("1. Web 基础")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-url"}},[a._v("2. URL")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87"}},[a._v("3. 请求和响应报文")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87"}},[a._v("⑴. 请求报文")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87"}},[a._v("⑵. 响应报文")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8Chttp%E6%96%B9%E6%B3%95"}},[a._v("（二）、HTTP方法")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-get"}},[a._v("1. GET")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-post"}},[a._v("2. POST")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-head"}},[a._v("3. HEAD")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-put"}},[a._v("4. PUT")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-patch"}},[a._v("5. PATCH")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-delete"}},[a._v("6. DELETE")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-options"}},[a._v("7. OPTIONS")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-connect"}},[a._v("8. CONNECT")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-trace"}},[a._v("9. TRACE")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89http%E7%8A%B6%E6%80%81%E7%A0%81"}},[a._v("（三）、HTTP状态码")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-2xx-%E6%88%90%E5%8A%9F"}},[a._v("1. 2XX 成功")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-3xx-%E9%87%8D%E5%AE%9A%E5%90%91"}},[a._v("2. 3XX 重定向")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-4xx-%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%94%99%E8%AF%AF"}},[a._v("3. 4XX 客户端错误")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-5xx-%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%94%99%E8%AF%AF"}},[a._v("4. 5XX 服务器错误")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9Bhttp%E9%A6%96%E9%83%BD"}},[a._v("（四）、HTTP首都")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E9%80%9A%E7%94%A8%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5"}},[a._v("1. 通用首部字段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%AF%B7%E6%B1%82%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5"}},[a._v("2. 请求首部字段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%93%8D%E5%BA%94%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5"}},[a._v("3. 响应首部字段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%AE%9E%E4%BD%93%E9%A6%96%E9%83%A8%E5%AD%97%E6%AE%B5"}},[a._v("4. 实体首部字段")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E5%85%B7%E4%BD%93%E5%BA%94%E7%94%A8"}},[a._v("（五）、具体应用")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-cookie"}},[a._v("1. Cookie")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B"}},[a._v("⑴. 创建过程")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-set-cookie"}},[a._v("⑵. Set-Cookie")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-session-%E5%92%8C-cookie-%E5%8C%BA%E5%88%AB"}},[a._v("⑶. Session 和 Cookie 区别")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%A6%81%E7%94%A8-cookie-%E7%9A%84%E6%83%85%E5%86%B5"}},[a._v("⑷. 浏览器禁用 Cookie 的情况")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BD%BF%E7%94%A8-cookie-%E5%AE%9E%E7%8E%B0%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E5%AF%86%E7%A0%81%E7%9A%84%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99"}},[a._v("⑸. 使用 Cookie 实现用户名和密码的自动填写")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%BC%93%E5%AD%98"}},[a._v("2. 缓存")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%BC%98%E7%82%B9"}},[a._v("⑴. 优点")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95"}},[a._v("⑵. 实现方法")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-cache-control-%E5%AD%97%E6%AE%B5"}},[a._v("⑶. Cache-Control 字段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-no-cache-%E6%8C%87%E4%BB%A4"}},[a._v("⑷. no-cache 指令")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-no-store-%E6%8C%87%E4%BB%A4"}},[a._v("⑸. no-store 指令")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-max-age-%E6%8C%87%E4%BB%A4"}},[a._v("⑹. max-age 指令")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%8C%81%E4%B9%85%E8%BF%9E%E6%8E%A5"}},[a._v("3. 持久连接")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E7%BC%96%E7%A0%81"}},[a._v("4. 编码")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%88%86%E5%9D%97%E4%BC%A0%E8%BE%93"}},[a._v("5. 分块传输")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%A4%9A%E9%83%A8%E5%88%86%E5%AF%B9%E8%B1%A1%E9%9B%86%E5%90%88"}},[a._v("6. 多部分对象集合")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E8%8C%83%E5%9B%B4%E8%AF%B7%E6%B1%82"}},[a._v("7. 范围请求")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E5%86%85%E5%AE%B9%E5%8D%8F%E5%95%86"}},[a._v("8. 内容协商")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E8%99%9A%E6%8B%9F%E4%B8%BB%E6%9C%BA"}},[a._v("9. 虚拟主机")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-%E9%80%9A%E4%BF%A1%E6%95%B0%E6%8D%AE%E8%BD%AC%E5%8F%91"}},[a._v("10. 通信数据转发")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%BB%A3%E7%90%86"}},[a._v("⑴. 代理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BD%91%E5%85%B3"}},[a._v("⑵. 网关")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%9A%A7%E9%81%93"}},[a._v("⑶. 隧道")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%ADhtpps"}},[a._v("（六）、HTPPs")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%8A%A0%E5%AF%86"}},[a._v("1. 加密")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%AF%B9%E7%A7%B0%E5%AF%86%E9%92%A5"}},[a._v("⑴. 对称密钥")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%85%AC%E5%BC%80%E5%AF%86%E9%92%A5"}},[a._v("⑵. 公开密钥")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-https-%E9%87%87%E7%94%A8%E7%9A%84%E5%8A%A0%E5%AF%86%E6%96%B9%E5%BC%8F"}},[a._v("⑶. HTTPs 采用的加密方式")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%AE%A4%E8%AF%81"}},[a._v("2. 认证")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%AE%8C%E6%95%B4%E6%80%A7"}},[a._v("3. 完整性")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83web%E6%94%BB%E5%87%BB%E6%8A%80%E6%9C%AF"}},[a._v("（七）、Web攻击技术")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%94%BB%E5%87%BB%E6%A8%A1%E5%BC%8F"}},[a._v("1. 攻击模式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%B8%BB%E5%8A%A8%E6%94%BB%E5%87%BB"}},[a._v("⑴. 主动攻击")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%A2%AB%E5%8A%A8%E6%94%BB%E5%87%BB"}},[a._v("⑵. 被动攻击")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB"}},[a._v("2. 跨站脚本攻击")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%A6%82%E5%BF%B5"}},[a._v("⑴. 概念")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8D%B1%E5%AE%B3"}},[a._v("⑵. 危害")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%98%B2%E8%8C%83%E6%89%8B%E6%AE%B5"}},[a._v("⑶. 防范手段")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-sql-%E6%B3%A8%E5%85%A5%E6%94%BB%E5%87%BB"}},[a._v("3. SQL 注入攻击")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%A6%82%E5%BF%B5-1"}},[a._v("⑴. 概念")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%94%BB%E5%87%BB%E5%8E%9F%E7%90%86"}},[a._v("⑵. 攻击原理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8D%B1%E5%AE%B3-1"}},[a._v("⑶. 危害")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%98%B2%E8%8C%83%E6%89%8B%E6%AE%B5-1"}},[a._v("⑷. 防范手段")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E8%B7%A8%E7%AB%99%E7%82%B9%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0"}},[a._v("4. 跨站点请求伪造")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%A6%82%E5%BF%B5-2"}},[a._v("⑴. 概念")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%98%B2%E8%8C%83%E6%89%8B%E6%AE%B5-2"}},[a._v("⑵. 防范手段")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%94%BB%E5%87%BB"}},[a._v("5. 拒绝服务攻击")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%A6%82%E5%BF%B5-3"}},[a._v("⑴. 概念")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AB%E5%90%84%E7%89%88%E6%9C%AC%E6%AF%94%E8%BE%83"}},[a._v("（八）、各版本比较")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-http10-%E4%B8%8E-http11-%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a._v("1. HTTP/1.0 与 HTTP/1.1 的区别")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-http11-%E4%B8%8E-http20-%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a._v("2. HTTP/1.1 与 HTTP/2.0 的区别")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%A4%9A%E8%B7%AF%E5%A4%8D%E7%94%A8"}},[a._v("⑴. 多路复用")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%A6%96%E9%83%A8%E5%8E%8B%E7%BC%A9"}},[a._v("⑵. 首部压缩")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%8E%A8%E9%80%81"}},[a._v("⑶. 服务端推送")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BA%8C%E8%BF%9B%E5%88%B6%E6%A0%BC%E5%BC%8F"}},[a._v("⑷. 二进制格式")])])])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F"}},[a._v("四、操作系统")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E6%A6%82%E8%BF%B0-1"}},[a._v("（一）、概述")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E6%9C%AC%E7%89%B9%E5%BE%81"}},[a._v("1. 操作系统基本特征")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%B9%B6%E5%8F%91"}},[a._v("⑴. 并发")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%85%B1%E4%BA%AB"}},[a._v("⑵. 共享")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%99%9A%E6%8B%9F"}},[a._v("⑶. 虚拟")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%BC%82%E6%AD%A5"}},[a._v("⑷. 异步")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%9F%BA%E6%9C%AC%E5%8A%9F%E8%83%BD"}},[a._v("2. 操作系统基本功能")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86"}},[a._v("⑴. 进程管理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86"}},[a._v("⑵. 内存管理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%96%87%E4%BB%B6%E7%AE%A1%E7%90%86"}},[a._v("⑶. 文件管理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86"}},[a._v("⑷. 设备管理")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%B3%BB%E7%BB%9F%E8%B0%83%E7%94%A8"}},[a._v("3. 系统调用")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%A4%A7%E5%86%85%E6%A0%B8%E5%92%8C%E5%BE%AE%E5%86%85%E6%A0%B8"}},[a._v("4. 大内核和微内核")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%A4%A7%E5%86%85%E6%A0%B8"}},[a._v("⑴. 大内核")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%BE%AE%E5%86%85%E6%A0%B8"}},[a._v("⑵. 微内核")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E4%B8%AD%E6%96%AD%E5%88%86%E7%B1%BB"}},[a._v("5. 中断分类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%A4%96%E4%B8%AD%E6%96%AD"}},[a._v("6. 外中断")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E5%BC%82%E5%B8%B8"}},[a._v("7. 异常")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E9%99%B7%E5%85%A5"}},[a._v("8. 陷入")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86"}},[a._v("（二）、进程管理")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E8%BF%9B%E7%A8%8B%E4%B8%8E%E7%BA%BF%E7%A8%8B"}},[a._v("1. 进程与线程")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E8%BF%9B%E7%A8%8B"}},[a._v("⑴. 进程")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BA%BF%E7%A8%8B"}},[a._v("⑵. 线程")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8C%BA%E5%88%AB"}},[a._v("⑶. 区别")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81%E7%9A%84%E5%88%87%E6%8D%A2"}},[a._v("2. 进程状态的切换")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95"}},[a._v("3. 调度算法")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%89%B9%E5%A4%84%E7%90%86%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E8%B0%83%E5%BA%A6"}},[a._v("⑴. 批处理系统中的调度")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%85%88%E6%9D%A5%E5%85%88%E6%9C%8D%E5%8A%A1"}},[a._v("①. 先来先服务")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%9F%AD%E4%BD%9C%E4%B8%9A%E4%BC%98%E5%85%88"}},[a._v("②. 短作业优先")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%80%E7%9F%AD%E5%89%A9%E4%BD%99%E6%97%B6%E9%97%B4%E4%BC%98%E5%85%88"}},[a._v("③. 最短剩余时间优先")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BA%A4%E4%BA%92%E5%BC%8F%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E8%B0%83%E5%BA%A6"}},[a._v("⑵. 交互式系统中的调度")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%BC%98%E5%85%88%E7%BA%A7%E8%B0%83%E5%BA%A6"}},[a._v("①. 优先级调度")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%97%B6%E9%97%B4%E7%89%87%E8%BD%AE%E8%BD%AC"}},[a._v("②. 时间片轮转")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A4%9A%E7%BA%A7%E5%8F%8D%E9%A6%88%E9%98%9F%E5%88%97"}},[a._v("③. 多级反馈队列")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AE%9E%E6%97%B6%E7%B3%BB%E7%BB%9F%E4%B8%AD%E7%9A%84%E8%B0%83%E5%BA%A6"}},[a._v("⑶. 实时系统中的调度")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5"}},[a._v("4. 进程同步")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%B8%B4%E7%95%8C%E5%8C%BA"}},[a._v("⑴. 临界区")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%90%8C%E6%AD%A5%E4%B8%8E%E4%BA%92%E6%96%A5"}},[a._v("⑵. 同步与互斥")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BF%A1%E5%8F%B7%E9%87%8F"}},[a._v("⑶. 信号量")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%AE%A1%E7%A8%8B"}},[a._v("⑷. 管程")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E7%BB%8F%E5%85%B8%E5%90%8C%E6%AD%A5%E9%97%AE%E9%A2%98"}},[a._v("5. 经典同步问题")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E8%AF%BB%E8%80%85-%E5%86%99%E8%80%85%E9%97%AE%E9%A2%98"}},[a._v("⑴. 读者-写者问题")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%93%B2%E5%AD%A6%E5%AE%B6%E8%BF%9B%E9%A4%90%E9%97%AE%E9%A2%98"}},[a._v("⑵. 哲学家进餐问题")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1"}},[a._v("6. 进程通信")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E8%BF%9B%E7%A8%8B%E5%90%8C%E6%AD%A5%E4%B8%8E%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a._v("⑴. 进程同步与进程通信的区别")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%BF%9B%E7%A8%8B%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F"}},[a._v("⑵. 进程通信方式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92"}},[a._v("①. 消息传递")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98"}},[a._v("②. 共享内存")])])])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E6%AD%BB%E9%94%81"}},[a._v("（三）、死锁")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%AD%BB%E9%94%81%E7%9A%84%E5%BF%85%E8%A6%81%E6%9D%A1%E4%BB%B6"}},[a._v("1. 死锁的必要条件")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%AD%BB%E9%94%81%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95"}},[a._v("2. 死锁的处理方法")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E9%B8%B5%E9%B8%9F%E7%AD%96%E7%95%A5"}},[a._v("⑴. 鸵鸟策略")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%AD%BB%E9%94%81%E6%A3%80%E6%B5%8B%E4%B8%8E%E6%AD%BB%E9%94%81%E6%81%A2%E5%A4%8D"}},[a._v("⑵. 死锁检测与死锁恢复")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%AD%BB%E9%94%81%E9%A2%84%E9%98%B2"}},[a._v("⑶. 死锁预防")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%AD%BB%E9%94%81%E9%81%BF%E5%85%8D"}},[a._v("⑷. 死锁避免")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86"}},[a._v("（四）、内存管理")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98"}},[a._v("1. 虚拟内存")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%88%86%E9%A1%B5%E4%B8%8E%E5%88%86%E6%AE%B5"}},[a._v("2. 分页与分段")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%88%86%E9%A1%B5"}},[a._v("⑴. 分页")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%86%E6%AE%B5"}},[a._v("⑵. 分段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%AE%B5%E9%A1%B5%E5%BC%8F"}},[a._v("⑶. 段页式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%86%E9%A1%B5%E4%B8%8E%E5%88%86%E6%AE%B5%E5%8C%BA%E5%88%AB"}},[a._v("⑷. 分页与分段区别")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%88%86%E9%A1%B5%E7%B3%BB%E7%BB%9F%E5%9C%B0%E5%9D%80%E6%98%A0%E5%B0%84"}},[a._v("3. 分页系统地址映射")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E9%A1%B5%E9%9D%A2%E7%BD%AE%E6%8D%A2%E7%AE%97%E6%B3%95"}},[a._v("4. 页面置换算法")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%9C%80%E4%BD%B3"}},[a._v("⑴. 最佳")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%85%88%E8%BF%9B%E5%85%88%E5%87%BA"}},[a._v("⑵. 先进先出")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%80%E8%BF%91%E6%9C%80%E4%B9%85%E6%9C%AA%E4%BD%BF%E7%94%A8"}},[a._v("⑶. 最近最久未使用")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%97%B6%E9%92%9F"}},[a._v("⑷. 时钟")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86"}},[a._v("（五）、设备管理")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%A3%81%E7%9B%98%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95"}},[a._v("1. 磁盘调度算法")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%85%88%E6%9D%A5%E5%85%88%E6%9C%8D%E5%8A%A1-1"}},[a._v("⑴. 先来先服务")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%80%E7%9F%AD%E5%AF%BB%E9%81%93%E6%97%B6%E9%97%B4%E4%BC%98%E5%85%88"}},[a._v("⑵. 最短寻道时间优先")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95"}},[a._v("⑶. 扫描算法")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%BE%AA%E7%8E%AF%E6%89%AB%E6%8F%8F%E7%AE%97%E6%B3%95"}},[a._v("⑷. 循环扫描算法")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E9%93%BE%E6%8E%A5"}},[a._v("（六）、链接")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%BC%96%E8%AF%91%E7%B3%BB%E7%BB%9F"}},[a._v("1. 编译系统")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%9B%AE%E6%A0%87%E6%96%87%E4%BB%B6"}},[a._v("2. 目标文件")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E9%9D%99%E6%80%81%E9%93%BE%E6%8E%A5"}},[a._v("3. 静态链接")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%8A%A8%E6%80%81%E9%93%BE%E6%8E%A5"}},[a._v("4. 动态链接")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94linux"}},[a._v("五、Linux")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C%E4%BB%A5%E5%8F%8A%E6%A6%82%E5%BF%B5"}},[a._v("（一）、常用操作以及概念")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%B1%82%E5%8A%A9"}},[a._v("1. 求助")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-help"}},[a._v("⑴. help")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-man"}},[a._v("⑵. man")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-info"}},[a._v("⑶. info")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%85%B3%E6%9C%BA"}},[a._v("2. 关机")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-sync"}},[a._v("⑴. sync")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-shutdown"}},[a._v("⑵. shutdown")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%85%B6%E5%AE%83%E5%85%B3%E6%9C%BA%E6%8C%87%E4%BB%A4"}},[a._v("⑶. 其它关机指令")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-path"}},[a._v("3. PATH")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E8%BF%90%E8%A1%8C%E7%AD%89%E7%BA%A7"}},[a._v("4. 运行等级")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-sudo"}},[a._v("5. sudo")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-gnu"}},[a._v("6. GNU")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E5%8C%85%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7"}},[a._v("7. 包管理工具")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E5%8F%91%E8%A1%8C%E7%89%88"}},[a._v("8. 发行版")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-vim-%E4%B8%89%E4%B8%AA%E6%A8%A1%E5%BC%8F"}},[a._v("9. VIM 三个模式")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%88%86%E5%8C%BA"}},[a._v("（二）、分区")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%A3%81%E7%9B%98%E7%9A%84%E6%96%87%E4%BB%B6%E5%90%8D"}},[a._v("1. 磁盘的文件名")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%88%86%E5%8C%BA%E8%A1%A8"}},[a._v("2. 分区表")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-mbr"}},[a._v("⑴. MBR")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-gpt"}},[a._v("⑵. GPT")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%BC%80%E6%9C%BA%E6%A3%80%E6%B5%8B%E7%A8%8B%E5%BA%8F"}},[a._v("3. 开机检测程序")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-bios"}},[a._v("⑴. BIOS")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-uefi"}},[a._v("⑵. UEFI")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%8C%82%E8%BD%BD"}},[a._v("4. 挂载")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E6%96%87%E4%BB%B6"}},[a._v("（三）、文件")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E6%A6%82%E5%BF%B5"}},[a._v("1. 文件权限概念")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7%E4%BB%A5%E5%8F%8A%E6%9D%83%E9%99%90%E7%9A%84%E4%BF%AE%E6%94%B9"}},[a._v("2. 文件属性以及权限的修改")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E6%89%80%E5%B1%9E%E7%BE%A4%E7%BB%84"}},[a._v("⑴. 修改文件所属群组")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BF%AE%E6%94%B9%E6%96%87%E4%BB%B6%E6%8B%A5%E6%9C%89%E8%80%85"}},[a._v("⑵. 修改文件拥有者")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BF%AE%E6%94%B9%E6%9D%83%E9%99%90"}},[a._v("⑶. 修改权限")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%9B%AE%E5%BD%95%E7%9A%84%E6%9D%83%E9%99%90"}},[a._v("3. 目录的权限")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%96%87%E4%BB%B6%E9%BB%98%E8%AE%A4%E6%9D%83%E9%99%90"}},[a._v("4. 文件默认权限")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E7%9B%AE%E5%BD%95%E9%85%8D%E7%BD%AE"}},[a._v("5. 目录配置")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E6%96%87%E4%BB%B6%E6%97%B6%E9%97%B4"}},[a._v("6. 文件时间")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E6%96%87%E4%BB%B6%E4%B8%8E%E7%9B%AE%E5%BD%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C"}},[a._v("7. 文件与目录的基本操作")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-ls"}},[a._v("⑴. ls")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-cp"}},[a._v("⑵. cp")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-rm"}},[a._v("⑶. rm")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-mv"}},[a._v("⑷. mv")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E8%8E%B7%E5%8F%96%E6%96%87%E4%BB%B6%E5%86%85%E5%AE%B9"}},[a._v("8. 获取文件内容")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-cat"}},[a._v("⑴. cat")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-tac"}},[a._v("⑵. tac")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-more"}},[a._v("⑶. more")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-less"}},[a._v("⑷. less")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-head"}},[a._v("⑸. head")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-tail"}},[a._v("⑹. tail")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-od"}},[a._v("⑺. od")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-touch"}},[a._v("⑻. touch")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E6%8C%87%E4%BB%A4%E4%B8%8E%E6%96%87%E4%BB%B6%E6%90%9C%E7%B4%A2"}},[a._v("9. 指令与文件搜索")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-which"}},[a._v("⑴. which")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-whereis"}},[a._v("⑵. whereis")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-locate"}},[a._v("⑶. locate")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-find"}},[a._v("⑷. find")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E7%A3%81%E7%9B%98%E4%B8%8E%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F"}},[a._v("（四）、磁盘与文件系统")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E7%BB%84%E6%88%90"}},[a._v("1. 文件系统的组成")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-inode"}},[a._v("2. inode")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%9B%AE%E5%BD%95%E7%9A%84-inode-%E4%B8%8E-block"}},[a._v("3. 目录的 inode 与 block")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AE%9E%E4%BD%93%E9%93%BE%E6%8E%A5%E4%B8%8E%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5"}},[a._v(". 实体链接与符号链接")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%AE%9E%E4%BD%93%E9%93%BE%E6%8E%A5"}},[a._v("⑴. 实体链接")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%AC%A6%E5%8F%B7%E9%93%BE%E6%8E%A5"}},[a._v("⑵. 符号链接")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E5%8E%8B%E7%BC%A9%E4%B8%8E%E6%89%93%E5%8C%85"}},[a._v("（五）、压缩与打包")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%8E%8B%E7%BC%A9"}},[a._v("1. 压缩")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-gzip"}},[a._v("⑴. gzip")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-bzip2"}},[a._v("⑵. bzip2")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-xz"}},[a._v("⑶. xz")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%89%93%E5%8C%85"}},[a._v("2. 打包")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%ADbash"}},[a._v("（六）、Bash")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%89%B9%E6%80%A7"}},[a._v("1. 特性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%8F%98%E9%87%8F%E6%93%8D%E4%BD%9C"}},[a._v("2. 变量操作")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%8C%87%E4%BB%A4%E6%90%9C%E7%B4%A2%E9%A1%BA%E5%BA%8F"}},[a._v("3. 指令搜索顺序")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%95%B0%E6%8D%AE%E6%B5%81%E9%87%8D%E5%AE%9A%E5%90%91"}},[a._v("4. 数据流重定向")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83%E7%AE%A1%E7%BA%BF%E6%8C%87%E4%BB%A4"}},[a._v("（七）、管线指令")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%8F%90%E5%8F%96%E6%8C%87%E4%BB%A4"}},[a._v("1. 提取指令")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%8E%92%E5%BA%8F%E6%8C%87%E4%BB%A4"}},[a._v("2. 排序指令")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%8F%8C%E5%90%91%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91"}},[a._v("3. 双向输出重定向")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%AD%97%E7%AC%A6%E8%BD%AC%E6%8D%A2%E6%8C%87%E4%BB%A4"}},[a._v("4. 字符转换指令")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%88%86%E5%8C%BA%E6%8C%87%E4%BB%A4"}},[a._v("5. 分区指令")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AB%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[a._v("（八）、正则表达式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-grep"}},[a._v("1. grep")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-printf"}},[a._v("2. printf")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-awk"}},[a._v("3. awk")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B9%9D%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86"}},[a._v("（九）、进程管理")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B"}},[a._v("1. 查看进程")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-ps"}},[a._v("⑴. ps")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-top"}},[a._v("⑵. top")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-pstree"}},[a._v("⑶. pstree")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-netstat"}},[a._v("⑷. netstat")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81"}},[a._v("2. 进程状态")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-sigchild"}},[a._v("3. SIGCHILD")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%AD%A4%E5%84%BF%E8%BF%9B%E7%A8%8B%E5%92%8C%E5%83%B5%E6%AD%BB%E8%BF%9B%E7%A8%8B"}},[a._v("4. 孤儿进程和僵死进程")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%AD%A4%E5%84%BF%E8%BF%9B%E7%A8%8B"}},[a._v("⑴. 孤儿进程")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%83%B5%E6%AD%BB%E8%BF%9B%E7%A8%8B"}},[a._v("⑵. 僵死进程")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81io%E5%A4%8D%E7%94%A8"}},[a._v("（十）、I/O复用")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%A6%82%E5%BF%B5%E7%90%86%E8%A7%A3"}},[a._v("1. 概念理解")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-io-%E6%A8%A1%E5%9E%8B"}},[a._v("2. I/O 模型")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%90%8C%E6%AD%A5-%E9%98%BB%E5%A1%9E"}},[a._v("⑴. 同步-阻塞")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%90%8C%E6%AD%A5-%E9%9D%9E%E9%98%BB%E5%A1%9E"}},[a._v("⑵. 同步-非阻塞")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%BC%82%E6%AD%A5-%E9%98%BB%E5%A1%9E"}},[a._v("⑶. 异步-阻塞")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%BC%82%E6%AD%A5-%E9%9D%9E%E9%98%BB%E5%A1%9E"}},[a._v("⑷. 异步-非阻塞")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-select-poll-epoll"}},[a._v("3. select poll epoll")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-select"}},[a._v("⑴. select")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-poll"}},[a._v("⑵. poll")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-epoll"}},[a._v("⑶. epoll")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-select-%E5%92%8C-poll-%E6%AF%94%E8%BE%83"}},[a._v("4. select 和 poll 比较")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%8A%9F%E8%83%BD"}},[a._v("⑴. 功能")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%80%9F%E5%BA%A6"}},[a._v("⑵. 速度")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8F%AF%E7%A7%BB%E6%A4%8D%E6%80%A7"}},[a._v("⑶. 可移植性")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-eopll-%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F"}},[a._v("5. eopll 工作模式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-lt-%E6%A8%A1%E5%BC%8F"}},[a._v("⑴. LT 模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-et-%E6%A8%A1%E5%BC%8F"}},[a._v("⑵. ET 模式")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-select-poll-epoll-%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF"}},[a._v("6. select poll epoll 应用场景")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-select-%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF"}},[a._v("⑴. select 应用场景")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-poll-%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF"}},[a._v("⑵. poll 应用场景")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-epoll-%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF"}},[a._v("⑶. epoll 应用场景")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%80%A7%E8%83%BD%E5%AF%B9%E6%AF%94"}},[a._v("⑷. 性能对比")])])])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E7%AE%97%E6%B3%95"}},[a._v("六、算法")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E7%AE%97%E6%B3%95%E5%88%86%E6%9E%90"}},[a._v("（一）、算法分析")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%95%B0%E5%AD%A6%E6%A8%A1%E5%9E%8B"}},[a._v("1. 数学模型")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E8%BF%91%E4%BC%BC"}},[a._v("⑴. 近似")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A2%9E%E9%95%BF%E6%95%B0%E9%87%8F%E7%BA%A7"}},[a._v("⑵. 增长数量级")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%86%85%E5%BE%AA%E7%8E%AF"}},[a._v("⑶. 内循环")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%88%90%E6%9C%AC%E6%A8%A1%E5%9E%8B"}},[a._v("⑷. 成本模型")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-threesum"}},[a._v("2. ThreeSum")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%80%8D%E7%8E%87%E5%AE%9E%E9%AA%8C"}},[a._v("3. 倍率实验")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9"}},[a._v("4. 注意事项")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%A4%A7%E5%B8%B8%E6%95%B0"}},[a._v("⑴. 大常数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BC%93%E5%AD%98"}},[a._v("⑵. 缓存")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AF%B9%E6%9C%80%E5%9D%8F%E6%83%85%E5%86%B5%E4%B8%8B%E7%9A%84%E6%80%A7%E8%83%BD%E7%9A%84%E4%BF%9D%E8%AF%81"}},[a._v("⑶. 对最坏情况下的性能的保证")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%9A%8F%E6%9C%BA%E5%8C%96%E7%AE%97%E6%B3%95"}},[a._v("⑷. 随机化算法")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%9D%87%E6%91%8A%E5%88%86%E6%9E%90"}},[a._v("⑸. 均摊分析")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97"}},[a._v("（二）、栈和队列")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%A0%88"}},[a._v("1. 栈")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E9%98%9F%E5%88%97"}},[a._v("2. 队列")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89union-find"}},[a._v("（三）、union-find")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-quick-find"}},[a._v("1. quick-find")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-quick-union"}},[a._v("2. quick-union")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%8A%A0%E6%9D%83-quick-union"}},[a._v("3. 加权 quick-union")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E8%B7%AF%E5%BE%84%E5%8E%8B%E7%BC%A9%E7%9A%84%E5%8A%A0%E6%9D%83-quick-union"}},[a._v("4. 路径压缩的加权 quick-union")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%90%84%E7%A7%8D-union-find-%E7%AE%97%E6%B3%95%E7%9A%84%E6%AF%94%E8%BE%83"}},[a._v("5. 各种 union-find 算法的比较")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E6%8E%92%E5%BA%8F"}},[a._v("（四）、排序")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F"}},[a._v("1. 选择排序")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F"}},[a._v("2. 插入排序")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F"}},[a._v("3. 希尔排序")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F"}},[a._v("4. 归并排序")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%BD%92%E5%B9%B6%E6%96%B9%E6%B3%95"}},[a._v("⑴. 归并方法")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F"}},[a._v("⑵. 自顶向下归并排序")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%87%AA%E5%BA%95%E5%90%91%E4%B8%8A%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F"}},[a._v("⑶. 自底向上归并排序")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F"}},[a._v("5. 快速排序")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%9F%BA%E6%9C%AC%E7%AE%97%E6%B3%95"}},[a._v("⑴. 基本算法")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%87%E5%88%86"}},[a._v("⑵. 切分")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90"}},[a._v("⑶. 性能分析")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%AE%97%E6%B3%95%E6%94%B9%E8%BF%9B"}},[a._v("⑷. 算法改进")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97"}},[a._v("6. 优先队列")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%A0%86"}},[a._v("⑴. 堆")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%B8%8A%E6%B5%AE%E5%92%8C%E4%B8%8B%E6%B2%89"}},[a._v("⑵. 上浮和下沉")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%8F%92%E5%85%A5%E5%85%83%E7%B4%A0"}},[a._v("⑶. 插入元素")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%A0%E9%99%A4%E6%9C%80%E5%A4%A7%E5%85%83%E7%B4%A0"}},[a._v("⑷. 删除最大元素")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A0%86%E6%8E%92%E5%BA%8F"}},[a._v("⑸. 堆排序")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%86%E6%9E%90"}},[a._v("⑹. 分析")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E5%BA%94%E7%94%A8"}},[a._v("7. 应用")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E6%AF%94%E8%BE%83"}},[a._v("⑴. 排序算法的比较")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-java-%E7%9A%84%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0"}},[a._v("⑵. Java 的排序算法实现")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%9F%BA%E4%BA%8E%E5%88%87%E5%88%86%E7%9A%84%E5%BF%AB%E9%80%9F%E9%80%89%E6%8B%A9%E7%AE%97%E6%B3%95"}},[a._v("⑶. 基于切分的快速选择算法")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E6%9F%A5%E6%89%BE"}},[a._v("（五）、查找")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%AC%A6%E5%8F%B7%E8%A1%A8"}},[a._v("1. 符号表")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%97%A0%E5%BA%8F%E7%AC%A6%E5%8F%B7%E8%A1%A8"}},[a._v("⑴. 无序符号表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%89%E5%BA%8F%E7%AC%A6%E5%8F%B7%E8%A1%A8"}},[a._v("⑵. 有序符号表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%E5%AE%9E%E7%8E%B0%E6%9C%89%E5%BA%8F%E7%AC%A6%E5%8F%B7%E8%A1%A8"}},[a._v("⑶. 二分查找实现有序符号表")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91"}},[a._v("2. 二叉查找树")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-get"}},[a._v("⑴. get()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-put"}},[a._v("⑵. put()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%86%E6%9E%90-1"}},[a._v("⑶. 分析")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-floor"}},[a._v("⑷. floor()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-rank"}},[a._v("⑸. rank()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-min"}},[a._v("⑹. min()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-deletemin"}},[a._v("⑺. deleteMin()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-delete"}},[a._v("⑻. delete()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-keys"}},[a._v("⑼. keys()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90-1"}},[a._v("⑽. 性能分析")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-2-3-%E6%9F%A5%E6%89%BE%E6%A0%91"}},[a._v("3. 2-3 查找树")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%8F%92%E5%85%A5%E6%93%8D%E4%BD%9C"}},[a._v("⑴. 插入操作")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%80%A7%E8%B4%A8"}},[a._v("⑵. 性质")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%BA%A2%E9%BB%91%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91"}},[a._v("3. 红黑二叉查找树")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%B7%A6%E6%97%8B%E8%BD%AC"}},[a._v("⑴. 左旋转")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8F%B3%E6%97%8B%E8%BD%AC"}},[a._v("⑵. 右旋转")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%A2%9C%E8%89%B2%E8%BD%AC%E6%8D%A2"}},[a._v("⑶. 颜色转换")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%8F%92%E5%85%A5"}},[a._v("⑷. 插入")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%A0%E9%99%A4%E6%9C%80%E5%B0%8F%E9%94%AE"}},[a._v("⑸. 删除最小键")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%86%E6%9E%90-2"}},[a._v("⑹. 分析")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%95%A3%E5%88%97%E8%A1%A8"}},[a._v("4. 散列表")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B0"}},[a._v("⑴. 散列函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%9F%BA%E4%BA%8E%E6%8B%89%E9%93%BE%E6%B3%95%E7%9A%84%E6%95%A3%E5%88%97%E8%A1%A8"}},[a._v("⑵. 基于拉链法的散列表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%9F%BA%E4%BA%8E%E7%BA%BF%E6%80%A7%E6%8E%A2%E6%B5%8B%E6%B3%95%E7%9A%84%E6%95%A3%E5%88%97%E8%A1%A8"}},[a._v("⑶. 基于线性探测法的散列表")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%BA%94%E7%94%A8"}},[a._v("5. 应用")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%90%84%E7%A7%8D%E7%AC%A6%E5%8F%B7%E8%A1%A8%E5%AE%9E%E7%8E%B0%E7%9A%84%E6%AF%94%E8%BE%83"}},[a._v("⑴. 各种符号表实现的比较")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-java-%E7%9A%84%E7%AC%A6%E5%8F%B7%E8%A1%A8%E5%AE%9E%E7%8E%B0"}},[a._v("⑵. Java 的符号表实现")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%9B%86%E5%90%88%E7%B1%BB%E5%9E%8B"}},[a._v("⑶. 集合类型")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%A8%80%E7%96%8F%E5%90%91%E9%87%8F%E4%B9%98%E6%B3%95"}},[a._v("⑷. 稀疏向量乘法")])])])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83%E5%89%91%E6%8C%87-offer-%E9%A2%98%E8%A7%A3"}},[a._v("七、剑指 Offer 题解")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%89%8D%E8%A8%80"}},[a._v("1. 前言")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%AE%9E%E7%8E%B0-singleton"}},[a._v("2. 实现 Singleton")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97"}},[a._v("3. 数组中重复的数字")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE"}},[a._v("4. 二维数组中的查找")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC"}},[a._v("5. 替换空格")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8"}},[a._v("6. 从尾到头打印链表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E9%87%8D%E5%BB%BA%E4%BA%8C%E5%8F%89%E6%A0%91"}},[a._v("7. 重建二叉树")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E7%BB%93%E7%82%B9"}},[a._v("8. 二叉树的下一个结点")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97"}},[a._v("9. 用两个栈实现队列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#101-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97"}},[a._v("10.1 斐波那契数列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#102-%E8%B7%B3%E5%8F%B0%E9%98%B6"}},[a._v("10.2 跳台阶")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#103-%E5%8F%98%E6%80%81%E8%B7%B3%E5%8F%B0%E9%98%B6"}},[a._v("10.3 变态跳台阶")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#104-%E7%9F%A9%E5%BD%A2%E8%A6%86%E7%9B%96"}},[a._v("10.4 矩形覆盖")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97"}},[a._v("11. 旋转数组的最小数字")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#12-%E7%9F%A9%E9%98%B5%E4%B8%AD%E7%9A%84%E8%B7%AF%E5%BE%84"}},[a._v("12. 矩阵中的路径")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#13-%E6%9C%BA%E5%99%A8%E4%BA%BA%E7%9A%84%E8%BF%90%E5%8A%A8%E8%8C%83%E5%9B%B4"}},[a._v("13. 机器人的运动范围")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#14-%E5%89%AA%E7%BB%B3%E5%AD%90"}},[a._v("14. 剪绳子")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#15-%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD-1-%E7%9A%84%E4%B8%AA%E6%95%B0"}},[a._v("15. 二进制中 1 的个数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#16-%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E6%96%B9"}},[a._v("16. 数值的整数次方")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#17-%E6%89%93%E5%8D%B0%E4%BB%8E-1-%E5%88%B0%E6%9C%80%E5%A4%A7%E7%9A%84-n-%E4%BD%8D%E6%95%B0"}},[a._v("17. 打印从 1 到最大的 n 位数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#181-%E5%9C%A8-o1-%E6%97%B6%E9%97%B4%E5%86%85%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E8%8A%82%E7%82%B9"}},[a._v("18.1 在 O(1) 时间内删除链表节点")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#182-%E5%88%A0%E9%99%A4%E9%93%BE%E8%A1%A8%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E7%BB%93%E7%82%B9"}},[a._v("18.2 删除链表中重复的结点")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#19-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D"}},[a._v("19. 正则表达式匹配")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#20-%E8%A1%A8%E7%A4%BA%E6%95%B0%E5%80%BC%E7%9A%84%E5%AD%97%E7%AC%A6%E4%B8%B2"}},[a._v("20. 表示数值的字符串")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#21-%E8%B0%83%E6%95%B4%E6%95%B0%E7%BB%84%E9%A1%BA%E5%BA%8F%E4%BD%BF%E5%A5%87%E6%95%B0%E4%BD%8D%E4%BA%8E%E5%81%B6%E6%95%B0%E5%89%8D%E9%9D%A2"}},[a._v("21. 调整数组顺序使奇数位于偶数前面")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#22-%E9%93%BE%E8%A1%A8%E4%B8%AD%E5%80%92%E6%95%B0%E7%AC%AC-k-%E4%B8%AA%E7%BB%93%E7%82%B9"}},[a._v("22. 链表中倒数第 K 个结点")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#23-%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%8E%AF%E7%9A%84%E5%85%A5%E5%8F%A3%E7%BB%93%E7%82%B9"}},[a._v("23. 链表中环的入口结点")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#24-%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8"}},[a._v("24. 反转链表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#25-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%8E%92%E5%BA%8F%E7%9A%84%E9%93%BE%E8%A1%A8"}},[a._v("25. 合并两个排序的链表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#26-%E6%A0%91%E7%9A%84%E5%AD%90%E7%BB%93%E6%9E%84"}},[a._v("26. 树的子结构")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#27-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E9%95%9C%E5%83%8F"}},[a._v("27. 二叉树的镜像")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#28-%E5%AF%B9%E7%A7%B0%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91"}},[a._v("28. 对称的二叉树")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#29-%E9%A1%BA%E6%97%B6%E9%92%88%E6%89%93%E5%8D%B0%E7%9F%A9%E9%98%B5"}},[a._v("29. 顺时针打印矩阵")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#30-%E5%8C%85%E5%90%AB-min-%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88"}},[a._v("30. 包含 min 函数的栈")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#31-%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97"}},[a._v("31. 栈的压入、弹出序列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#321-%E4%BB%8E%E4%B8%8A%E5%BE%80%E4%B8%8B%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91"}},[a._v("32.1 从上往下打印二叉树")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#322-%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%A0%91%E6%89%93%E5%8D%B0%E6%88%90%E5%A4%9A%E8%A1%8C"}},[a._v("32.2 把二叉树打印成多行")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#323-%E6%8C%89%E4%B9%8B%E5%AD%97%E5%BD%A2%E9%A1%BA%E5%BA%8F%E6%89%93%E5%8D%B0%E4%BA%8C%E5%8F%89%E6%A0%91"}},[a._v("32.3 按之字形顺序打印二叉树")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#33-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86%E5%BA%8F%E5%88%97"}},[a._v("33. 二叉搜索树的后序遍历序列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#34-%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%92%8C%E4%B8%BA%E6%9F%90%E4%B8%80%E5%80%BC%E7%9A%84%E8%B7%AF%E5%BE%84"}},[a._v("34. 二叉树中和为某一值的路径")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#35-%E5%A4%8D%E6%9D%82%E9%93%BE%E8%A1%A8%E7%9A%84%E5%A4%8D%E5%88%B6"}},[a._v("35. 复杂链表的复制")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#36-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E4%B8%8E%E5%8F%8C%E5%90%91%E9%93%BE%E8%A1%A8"}},[a._v("36. 二叉搜索树与双向链表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#37-%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%A0%91"}},[a._v("37. 序列化二叉树")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#38-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9A%84%E6%8E%92%E5%88%97"}},[a._v("38. 字符串的排列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#39-%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E6%AC%A1%E6%95%B0%E8%B6%85%E8%BF%87%E4%B8%80%E5%8D%8A%E7%9A%84%E6%95%B0%E5%AD%97"}},[a._v("39. 数组中出现次数超过一半的数字")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#40-%E6%9C%80%E5%B0%8F%E7%9A%84-k-%E4%B8%AA%E6%95%B0"}},[a._v("40. 最小的 K 个数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#411-%E6%95%B0%E6%8D%AE%E6%B5%81%E4%B8%AD%E7%9A%84%E4%B8%AD%E4%BD%8D%E6%95%B0"}},[a._v("41.1 数据流中的中位数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#412-%E5%AD%97%E7%AC%A6%E6%B5%81%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%97%E7%AC%A6"}},[a._v("41.2 字符流中第一个不重复的字符")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#42-%E8%BF%9E%E7%BB%AD%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C"}},[a._v("42. 连续子数组的最大和")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#43-%E4%BB%8E-1-%E5%88%B0-n-%E6%95%B4%E6%95%B0%E4%B8%AD-1-%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0"}},[a._v("43. 从 1 到 n 整数中 1 出现的次数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#44-%E6%95%B0%E5%AD%97%E5%BA%8F%E5%88%97%E4%B8%AD%E7%9A%84%E6%9F%90%E4%B8%80%E4%BD%8D%E6%95%B0%E5%AD%97"}},[a._v("44. 数字序列中的某一位数字")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#45-%E6%8A%8A%E6%95%B0%E7%BB%84%E6%8E%92%E6%88%90%E6%9C%80%E5%B0%8F%E7%9A%84%E6%95%B0"}},[a._v("45. 把数组排成最小的数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#46-%E6%8A%8A%E6%95%B0%E5%AD%97%E7%BF%BB%E8%AF%91%E6%88%90%E5%AD%97%E7%AC%A6%E4%B8%B2"}},[a._v("46. 把数字翻译成字符串")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#47-%E7%A4%BC%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E4%BB%B7%E5%80%BC"}},[a._v("47. 礼物的最大价值")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#48-%E6%9C%80%E9%95%BF%E4%B8%8D%E5%90%AB%E9%87%8D%E5%A4%8D%E5%AD%97%E7%AC%A6%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2"}},[a._v("48. 最长不含重复字符的子字符串")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#49-%E4%B8%91%E6%95%B0"}},[a._v("49. 丑数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#50-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E5%AD%97%E7%AC%A6%E4%BD%8D%E7%BD%AE"}},[a._v("50. 第一个只出现一次的字符位置")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#51-%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E9%80%86%E5%BA%8F%E5%AF%B9"}},[a._v("51. 数组中的逆序对")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#52-%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E7%BB%93%E7%82%B9"}},[a._v("52. 两个链表的第一个公共结点")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#53-%E6%95%B0%E5%AD%97%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0"}},[a._v("53 数字在排序数组中出现的次数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#54-%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91%E7%9A%84%E7%AC%AC-k-%E4%B8%AA%E7%BB%93%E7%82%B9"}},[a._v("54. 二叉搜索树的第 K 个结点")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#551-%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E6%B7%B1%E5%BA%A6"}},[a._v("55.1 二叉树的深度")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#552-%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91"}},[a._v("55.2 平衡二叉树")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#56-%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97"}},[a._v("56. 数组中只出现一次的数字")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#571-%E5%92%8C%E4%B8%BA-s-%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97"}},[a._v("57.1 和为 S 的两个数字")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#572-%E5%92%8C%E4%B8%BA-s-%E7%9A%84%E8%BF%9E%E7%BB%AD%E6%AD%A3%E6%95%B0%E5%BA%8F%E5%88%97"}},[a._v("57.2 和为 S 的连续正数序列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#581-%E7%BF%BB%E8%BD%AC%E5%8D%95%E8%AF%8D%E9%A1%BA%E5%BA%8F%E5%88%97"}},[a._v("58.1 翻转单词顺序列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#582-%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2"}},[a._v("58.2 左旋转字符串")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#59-%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC"}},[a._v("59. 滑动窗口的最大值")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#60-n-%E4%B8%AA%E9%AA%B0%E5%AD%90%E7%9A%84%E7%82%B9%E6%95%B0"}},[a._v("60. n 个骰子的点数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#61-%E6%89%91%E5%85%8B%E7%89%8C%E9%A1%BA%E5%AD%90"}},[a._v("61. 扑克牌顺子")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#62-%E5%9C%86%E5%9C%88%E4%B8%AD%E6%9C%80%E5%90%8E%E5%89%A9%E4%B8%8B%E7%9A%84%E6%95%B0"}},[a._v("62. 圆圈中最后剩下的数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#63-%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%A9%E6%B6%A6"}},[a._v("63. 股票的最大利润")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#64-%E6%B1%82-123n"}},[a._v("64. 求 1 2 3 … n")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#65-%E4%B8%8D%E7%94%A8%E5%8A%A0%E5%87%8F%E4%B9%98%E9%99%A4%E5%81%9A%E5%8A%A0%E6%B3%95"}},[a._v("65. 不用加减乘除做加法")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#66-%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84"}},[a._v("66. 构建乘积数组")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#67-%E6%8A%8A%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%88%90%E6%95%B4%E6%95%B0"}},[a._v("67. 把字符串转换成整数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#68-%E6%A0%91%E4%B8%AD%E4%B8%A4%E4%B8%AA%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E4%BD%8E%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88"}},[a._v("68. 树中两个节点的最低公共祖先")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%ABleetcode-%E9%A2%98%E8%A7%A3"}},[a._v("八、Leetcode 题解")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E7%AE%97%E6%B3%95%E6%80%9D%E6%83%B3"}},[a._v("（一）、算法思想")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE"}},[a._v("1. 二分查找")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%B4%AA%E5%BF%83%E6%80%9D%E6%83%B3"}},[a._v("2. 贪心思想")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%8F%8C%E6%8C%87%E9%92%88"}},[a._v("3. 双指针")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%8E%92%E5%BA%8F"}},[a._v("4. 排序")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%BF%AB%E9%80%9F%E9%80%89%E6%8B%A9"}},[a._v("⑴. 快速选择")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A0%86%E6%8E%92%E5%BA%8F-1"}},[a._v("⑵. 堆排序")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%A1%B6%E6%8E%92%E5%BA%8F"}},[a._v("⑶. 桶排序")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E6%90%9C%E7%B4%A2"}},[a._v("5. 搜索")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-bfs"}},[a._v("⑴. BFS")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-dfs"}},[a._v("⑵. DFS")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-backtracking"}},[a._v("⑶. Backtracking")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%88%86%E6%B2%BB"}},[a._v("6. 分治")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92"}},[a._v("7. 动态规划")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%95%B0%E5%88%97"}},[a._v("⑴. 斐波那契数列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%80%E9%95%BF%E9%80%92%E5%A2%9E%E5%AD%90%E5%BA%8F%E5%88%97"}},[a._v("⑵. 最长递增子序列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%AD%90%E7%B3%BB%E5%88%97"}},[a._v("⑶. 最长公共子系列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-0-1-%E8%83%8C%E5%8C%85"}},[a._v("⑷. 0-1 背包")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%95%B0%E7%BB%84%E5%8C%BA%E9%97%B4"}},[a._v("⑸. 数组区间")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%BC%96%E8%BE%91"}},[a._v("⑹. 字符串编辑")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%86%E5%89%B2%E6%95%B4%E6%95%B0"}},[a._v("⑺. 分割整数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%9F%A9%E9%98%B5%E8%B7%AF%E5%BE%84"}},[a._v("⑻. 矩阵路径")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%85%B6%E5%AE%83%E9%97%AE%E9%A2%98"}},[a._v("⑼. 其它问题")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E6%95%B0%E5%AD%A6"}},[a._v("8. 数学")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E7%B4%A0%E6%95%B0"}},[a._v("⑴. 素数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0"}},[a._v("⑵. 最大公约数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2"}},[a._v("⑶. 进制转换")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%98%B6%E4%B9%98"}},[a._v("⑷. 阶乘")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%8A%A0%E6%B3%95%E5%87%8F%E6%B3%95"}},[a._v("⑸. 字符串加法减法")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%9B%B8%E9%81%87%E9%97%AE%E9%A2%98"}},[a._v("⑹. 相遇问题")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A4%9A%E6%95%B0%E6%8A%95%E7%A5%A8%E9%97%AE%E9%A2%98"}},[a._v("⑺. 多数投票问题")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%85%B6%E5%AE%83"}},[a._v("⑻. 其它")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84"}},[a._v("（二）、数据结构")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97"}},[a._v("1. 栈和队列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%93%88%E5%B8%8C%E8%A1%A8"}},[a._v("2. 哈希表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%AD%97%E7%AC%A6%E4%B8%B2"}},[a._v("3. 字符串")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%95%B0%E7%BB%84%E4%B8%8E%E7%9F%A9%E9%98%B5"}},[a._v("4. 数组与矩阵")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-1-n-%E5%88%86%E5%B8%83"}},[a._v("⑴. 1-n 分布")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%89%E5%BA%8F%E7%9F%A9%E9%98%B5"}},[a._v("⑵. 有序矩阵")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E9%93%BE%E8%A1%A8"}},[a._v("5. 链表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E6%A0%91"}},[a._v("6. 树")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E9%80%92%E5%BD%92"}},[a._v("⑴. 递归")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%B1%82%E6%AC%A1%E9%81%8D%E5%8E%86"}},[a._v("⑵. 层次遍历")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%89%8D%E4%B8%AD%E5%90%8E%E5%BA%8F%E9%81%8D%E5%8E%86"}},[a._v("⑶. 前中后序遍历")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-bst"}},[a._v("⑷. BST")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-trie"}},[a._v("⑸. Trie")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E5%9B%BE"}},[a._v("7. 图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E4%BD%8D%E8%BF%90%E7%AE%97"}},[a._v("8. 位运算")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B9%9D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F"}},[a._v("九、设计模式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E5%89%8D%E8%A8%80"}},[a._v("（一）、前言")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%A6%82%E5%BF%B5"}},[a._v("（二）、设计模式概念")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F"}},[a._v("（三）、单例模式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%84%8F%E5%9B%BE"}},[a._v("1. 意图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%B1%BB%E5%9B%BE"}},[a._v("2. 类图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF"}},[a._v("3. 使用场景")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-jdk-%E7%9A%84%E4%BD%BF%E7%94%A8"}},[a._v("4. JDK 的使用")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%AE%9E%E7%8E%B0"}},[a._v("5. 实现")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%87%92%E6%B1%89%E5%BC%8F-%E7%BA%BF%E7%A8%8B%E4%B8%8D%E5%AE%89%E5%85%A8"}},[a._v("⑴. 懒汉式-线程不安全")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%87%92%E6%B1%89%E5%BC%8F-%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8"}},[a._v("⑵. 懒汉式-线程安全")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%A5%BF%E6%B1%89%E5%BC%8F-%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8"}},[a._v("⑶. 饿汉式-线程安全")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8F%8C%E9%87%8D%E6%A0%A1%E9%AA%8C%E9%94%81-%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8"}},[a._v("⑷. 双重校验锁-线程安全")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82"}},[a._v("（四）、简单工厂")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%84%8F%E5%9B%BE-1"}},[a._v("1. 意图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%B1%BB%E5%9B%BE-1"}},[a._v("2. 类图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%AE%9E%E7%8E%B0"}},[a._v("3. 实现")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F"}},[a._v("（五）、工厂方法模式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%84%8F%E5%9B%BE-2"}},[a._v("1. 意图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%B1%BB%E5%9B%BE-2"}},[a._v("2. 类图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%AE%9E%E7%8E%B0-1"}},[a._v("3. 实现")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F"}},[a._v("（六）、抽象工厂模式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%84%8F%E5%9B%BE-3"}},[a._v("1. 意图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%B1%BB%E5%9B%BE-3"}},[a._v("2. 类图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0"}},[a._v("3. 代码实现")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3"}},[a._v("十、面向对象思想")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E8%AE%BE%E8%AE%A1%E5%8E%9F%E5%88%99"}},[a._v("（一）、设计原则")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-solid"}},[a._v("1. S.O.L.I.D")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%8D%95%E4%B8%80%E8%B4%A3%E4%BB%BB%E5%8E%9F%E5%88%99"}},[a._v("⑴. 单一责任原则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%BC%80%E6%94%BE%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99"}},[a._v("⑵. 开放封闭原则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%87%8C%E6%B0%8F%E6%9B%BF%E6%8D%A2%E5%8E%9F%E5%88%99"}},[a._v("⑶. 里氏替换原则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%8E%A5%E5%8F%A3%E5%88%86%E7%A6%BB%E5%8E%9F%E5%88%99"}},[a._v("⑷. 接口分离原则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BE%9D%E8%B5%96%E5%80%92%E7%BD%AE%E5%8E%9F%E5%88%99"}},[a._v("⑸. 依赖倒置原则")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%85%B6%E4%BB%96%E5%B8%B8%E8%A7%81%E5%8E%9F%E5%88%99"}},[a._v("2. 其他常见原则")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E8%BF%AA%E7%B1%B3%E7%89%B9%E6%B3%95%E5%88%99"}},[a._v("⑴. 迪米特法则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%90%88%E6%88%90%E5%A4%8D%E7%94%A8%E5%8E%9F%E5%88%99"}},[a._v("⑵. 合成复用原则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%85%B1%E5%90%8C%E5%B0%81%E9%97%AD%E5%8E%9F%E5%88%99"}},[a._v("⑶. 共同封闭原则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%A8%B3%E5%AE%9A%E6%8A%BD%E8%B1%A1%E5%8E%9F%E5%88%99"}},[a._v("⑷. 稳定抽象原则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%A8%B3%E5%AE%9A%E4%BE%9D%E8%B5%96%E5%8E%9F%E5%88%99"}},[a._v("⑸. 稳定依赖原则")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7"}},[a._v("（二）、三大特性")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%B0%81%E8%A3%85"}},[a._v("1. 封装")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%BB%A7%E6%89%BF"}},[a._v("2. 继承")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%A4%9A%E6%80%81"}},[a._v("3. 多态")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89uml"}},[a._v("（三）、UML")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%B1%BB%E5%9B%BE"}},[a._v("1. 类图")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E7%BB%A7%E6%89%BF%E7%9B%B8%E5%85%B3"}},[a._v("⑴. 继承相关")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%B3%9B%E5%8C%96%E5%85%B3%E7%B3%BB-generalize"}},[a._v("⑵. 泛化关系 (Generalize)")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AE%9E%E7%8E%B0%E5%85%B3%E7%B3%BB-realize"}},[a._v("⑶. 实现关系 (Realize)")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%95%B4%E4%BD%93%E5%92%8C%E9%83%A8%E5%88%86"}},[a._v("⑷. 整体和部分")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%81%9A%E5%90%88%E5%85%B3%E7%B3%BB-aggregation"}},[a._v("⑸. 聚合关系 (Aggregation)")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BB%84%E5%90%88%E5%85%B3%E7%B3%BB-composition"}},[a._v("⑹. 组合关系 (Composition)")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%9B%B8%E4%BA%92%E8%81%94%E7%B3%BB"}},[a._v("⑺. 相互联系")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%85%B3%E8%81%94%E5%85%B3%E7%B3%BB-association"}},[a._v("⑻. 关联关系 (Association)")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB-dependency"}},[a._v("⑼. 依赖关系 (Dependency)")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%97%B6%E5%BA%8F%E5%9B%BE"}},[a._v("2. 时序图")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%AE%9A%E4%B9%89"}},[a._v("⑴. 定义")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%B5%A4%E5%A3%81%E4%B9%8B%E6%88%98%E6%97%B6%E5%BA%8F%E5%9B%BE"}},[a._v("⑵. 赤壁之战时序图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%B4%BB%E5%8A%A8%E5%9B%BE%E6%97%B6%E5%BA%8F%E5%9B%BE%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB"}},[a._v("⑶. 活动图、时序图之间的关系")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%B1%BB%E5%9B%BE%E4%B8%8E%E6%97%B6%E5%BA%8F%E5%9B%BE%E7%9A%84%E5%85%B3%E7%B3%BB"}},[a._v("⑷. 类图与时序图的关系")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%97%B6%E5%BA%8F%E5%9B%BE%E7%9A%84%E7%BB%84%E6%88%90"}},[a._v("⑸. 时序图的组成")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AF%B9%E8%B1%A1"}},[a._v("⑹. 对象")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%94%9F%E5%91%BD%E7%BA%BF"}},[a._v("⑺. 生命线")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%B6%88%E6%81%AF"}},[a._v("⑻. 消息")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%BF%80%E6%B4%BB"}},[a._v("⑼. 激活")])])])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%B8%80%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E5%8E%9F%E7%90%86"}},[a._v("十一、数据库系统原理")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E4%BA%8B%E5%8A%A1"}},[a._v("（一）、事务")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%A6%82%E5%BF%B5"}},[a._v("1. 概念")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%9B%9B%E5%A4%A7%E7%89%B9%E6%80%A7"}},[a._v("2. 四大特性")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%B9%B6%E5%8F%91%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98"}},[a._v("（二）、并发一致性问题")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E9%97%AE%E9%A2%98"}},[a._v("1. 问题")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%B8%A2%E5%A4%B1%E4%BF%AE%E6%94%B9"}},[a._v("⑴. 丢失修改")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%AF%BB%E8%84%8F%E6%95%B0%E6%8D%AE"}},[a._v("⑵. 读脏数据")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%B8%8D%E5%8F%AF%E9%87%8D%E5%A4%8D%E8%AF%BB"}},[a._v("⑶. 不可重复读")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%B9%BB%E5%BD%B1%E8%AF%BB"}},[a._v("⑷. 幻影读")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95"}},[a._v("2. 解决方法")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E5%B0%81%E9%94%81"}},[a._v("（三）、封锁")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%B0%81%E9%94%81%E7%B2%92%E5%BA%A6"}},[a._v("1. 封锁粒度")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%B0%81%E9%94%81%E7%B1%BB%E5%9E%8B"}},[a._v("2. 封锁类型")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%8E%92%E5%AE%83%E9%94%81%E4%B8%8E%E5%85%B1%E4%BA%AB%E9%94%81"}},[a._v("⑴. 排它锁与共享锁")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%84%8F%E5%90%91%E9%94%81"}},[a._v("⑵. 意向锁")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE"}},[a._v("3. 封锁协议")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%B8%89%E7%BA%A7%E5%B0%81%E9%94%81%E5%8D%8F%E8%AE%AE"}},[a._v("⑴. 三级封锁协议")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%B8%A4%E6%AE%B5%E9%94%81%E5%8D%8F%E8%AE%AE"}},[a._v("⑵. 两段锁协议")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB"}},[a._v("（四）、隔离级别")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E5%A4%9A%E7%89%88%E6%9C%AC%E5%B9%B6%E5%8F%91%E6%8E%A7%E5%88%B6"}},[a._v("（五）、多版本并发控制")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%89%88%E6%9C%AC%E5%8F%B7"}},[a._v("1. 版本号")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-undo-%E6%97%A5%E5%BF%97"}},[a._v("2. Undo 日志")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%AE%9E%E7%8E%B0%E8%BF%87%E7%A8%8B"}},[a._v("3. 实现过程")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-select-1"}},[a._v("⑴. SELECT")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-insert"}},[a._v("⑵. INSERT")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-delete-1"}},[a._v("⑶. DELETE")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-update"}},[a._v("⑷. UPDATE")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%BF%AB%E7%85%A7%E8%AF%BB%E4%B8%8E%E5%BD%93%E5%89%8D%E8%AF%BB"}},[a._v("4. 快照读与当前读")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%ADnext-key-locks"}},[a._v("（六）、Next-Key Locks")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-record-locks"}},[a._v("1. Record Locks")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-grap-locks"}},[a._v("2. Grap Locks")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-next-key-locks"}},[a._v("3. Next-Key Locks")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E7%90%86%E8%AE%BA"}},[a._v("（七）、关系数据库设计理论")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%87%BD%E6%95%B0%E4%BE%9D%E8%B5%96"}},[a._v("1. 函数依赖")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%BC%82%E5%B8%B8"}},[a._v("2. 异常")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E8%8C%83%E5%BC%8F"}},[a._v("3. 范式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E7%AC%AC%E4%B8%80%E8%8C%83%E5%BC%8F-1nf"}},[a._v("⑴. 第一范式 (1NF)")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%AC%AC%E4%BA%8C%E8%8C%83%E5%BC%8F-2nf"}},[a._v("⑵. 第二范式 (2NF)")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%AC%AC%E4%B8%89%E8%8C%83%E5%BC%8F-3nf"}},[a._v("⑶. 第三范式 (3NF)")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-bc-%E8%8C%83%E5%BC%8Fbcnf"}},[a._v("⑷. BC 范式（BCNF）")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AB%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%BF%B0"}},[a._v("（八）、数据库系统概述")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%9F%BA%E6%9C%AC%E6%9C%AF%E8%AF%AD"}},[a._v("1. 基本术语")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B"}},[a._v("⑴. 数据模型")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%B3%BB%E7%BB%9F"}},[a._v("⑵. 数据库系统")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E4%B8%89%E5%B1%82%E6%A8%A1%E5%BC%8F%E5%92%8C%E4%B8%A4%E5%B1%82%E6%98%A0%E5%83%8F"}},[a._v("2. 数据库的三层模式和两层映像")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%A4%96%E6%A8%A1%E5%BC%8F"}},[a._v("⑴. 外模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%A8%A1%E5%BC%8F"}},[a._v("⑵. 模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%86%85%E6%A8%A1%E5%BC%8F"}},[a._v("⑶. 内模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A4%96%E6%A8%A1%E5%BC%8F%E6%A8%A1%E5%BC%8F%E6%98%A0%E5%83%8F"}},[a._v("⑷. 外模式/模式映像")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%A8%A1%E5%BC%8F%E5%86%85%E6%A8%A1%E5%BC%8F%E6%98%A0%E5%83%8F"}},[a._v("⑸. 模式/内模式映像")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B9%9D%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BB%BA%E6%A8%A1"}},[a._v("（九）、关系数据库建模")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-er-%E5%9B%BE"}},[a._v("1. ER 图")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%AE%9E%E4%BD%93%E7%9A%84%E4%B8%89%E7%A7%8D%E8%81%94%E7%B3%BB"}},[a._v("⑴. 实体的三种联系")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%A1%A8%E7%A4%BA%E5%87%BA%E7%8E%B0%E5%A4%9A%E6%AC%A1%E7%9A%84%E5%85%B3%E7%B3%BB"}},[a._v("⑵. 表示出现多次的关系")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%81%94%E7%B3%BB%E7%9A%84%E5%A4%9A%E5%90%91%E6%80%A7"}},[a._v("⑶. 联系的多向性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%A1%A8%E7%A4%BA%E5%AD%90%E7%B1%BB"}},[a._v("⑷. 表示子类")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E7%BA%A6%E6%9D%9F"}},[a._v("（十）、约束")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E9%94%AE%E7%A0%81"}},[a._v("1. 键码")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%8D%95%E5%80%BC%E7%BA%A6%E6%9D%9F"}},[a._v("2. 单值约束")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%BC%95%E7%94%A8%E5%AE%8C%E6%95%B4%E6%80%A7%E7%BA%A6%E6%9D%9F"}},[a._v("3. 引用完整性约束")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%9F%9F%E7%BA%A6%E6%9D%9F"}},[a._v("4. 域约束")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E4%B8%80%E8%88%AC%E7%BA%A6%E6%9D%9F"}},[a._v("5. 一般约束")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%BA%8Csql"}},[a._v("十二、SQL")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E5%9F%BA%E7%A1%80"}},[a._v("（一）、基础")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%88%9B%E5%BB%BA%E8%A1%A8"}},[a._v("（二）、创建表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E4%BF%AE%E6%94%B9%E8%A1%A8"}},[a._v("（三）、修改表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E6%8F%92%E5%85%A5"}},[a._v("（四）、插入")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E6%9B%B4%E6%96%B0"}},[a._v("（五）、更新")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E5%88%A0%E9%99%A4"}},[a._v("（六）、删除")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83%E6%9F%A5%E8%AF%A2"}},[a._v("（七）、查询")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-distinct"}},[a._v("1. DISTINCT")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-limit"}},[a._v("2. LIMIT")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AB%E6%8E%92%E5%BA%8F"}},[a._v("（八）、排序")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B9%9D%E8%BF%87%E6%BB%A4"}},[a._v("（九）、过滤")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E9%80%9A%E9%85%8D%E7%AC%A6"}},[a._v("（十）、通配符")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%B8%80%E8%AE%A1%E7%AE%97%E5%AD%97%E6%AE%B5"}},[a._v("（十一）、计算字段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%BA%8C%E5%87%BD%E6%95%B0"}},[a._v("（十二）、函数")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86"}},[a._v("1. 文本处理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%97%A5%E6%9C%9F%E5%92%8C%E6%97%B6%E9%97%B4%E5%A4%84%E7%90%86"}},[a._v("2. 日期和时间处理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%95%B0%E5%80%BC%E5%A4%84%E7%90%86"}},[a._v("3. 数值处理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%B1%87%E6%80%BB"}},[a._v("4. 汇总")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%B8%89%E5%88%86%E7%BB%84"}},[a._v("（十三）、分组")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E5%9B%9B%E5%AD%90%E6%9F%A5%E8%AF%A2"}},[a._v("（十四）、子查询")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%BA%94%E8%BF%9E%E6%8E%A5"}},[a._v("（十五）、连接")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%86%85%E8%BF%9E%E6%8E%A5"}},[a._v("1. 内连接")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%87%AA%E8%BF%9E%E6%8E%A5"}},[a._v("2. 自连接")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E8%87%AA%E7%84%B6%E8%BF%9E%E6%8E%A5"}},[a._v("3. 自然连接")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%A4%96%E8%BF%9E%E6%8E%A5"}},[a._v("4. 外连接")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E5%85%AD%E7%BB%84%E5%90%88%E6%9F%A5%E8%AF%A2"}},[a._v("（十六）、组合查询")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%B8%83%E8%A7%86%E5%9B%BE"}},[a._v("（十七）、视图")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E5%85%AB%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B"}},[a._v("（十八）、存储过程")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E4%BD%BF%E7%94%A8%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E7%9A%84%E5%A5%BD%E5%A4%84"}},[a._v("1. 使用存储过程的好处")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%88%9B%E5%BB%BA%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B"}},[a._v("2. 创建存储过程")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%B9%9D%E6%B8%B8%E6%A0%87"}},[a._v("（十九）、游标")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E8%A7%A6%E5%8F%91%E5%99%A8"}},[a._v("（二十）、触发器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E4%B8%80%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86"}},[a._v("（二十一）、事务处理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E4%BA%8C%E5%AD%97%E7%AC%A6%E9%9B%86"}},[a._v("（二十二）、字符集")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E4%B8%89%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86"}},[a._v("（二十三）、权限管理")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%88%9B%E5%BB%BA%E8%B4%A6%E6%88%B7"}},[a._v("1. 创建账户")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E4%BF%AE%E6%94%B9%E8%B4%A6%E6%88%B7%E5%90%8D"}},[a._v("2. 修改账户名")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%88%A0%E9%99%A4%E8%B4%A6%E6%88%B7"}},[a._v("3. 删除账户")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%9F%A5%E7%9C%8B%E6%9D%83%E9%99%90"}},[a._v("4. 查看权限")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E6%8E%88%E4%BA%88%E6%9D%83%E9%99%90"}},[a._v("5. 授予权限")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%88%A0%E9%99%A4%E6%9D%83%E9%99%90"}},[a._v("6. 删除权限")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E6%9B%B4%E6%94%B9%E5%AF%86%E7%A0%81"}},[a._v("7. 更改密码")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%B8%89mysql"}},[a._v("十三、MySQL")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E5%82%A8%E5%AD%98%E5%BC%95%E6%93%8E"}},[a._v("（一）、储存引擎")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-innodb"}},[a._v("1. InnoDB")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-myisam"}},[a._v("2. MyISAM")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%AF%94%E8%BE%83"}},[a._v("3. 比较")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"}},[a._v("（二）、数据类型")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%95%B4%E5%9E%8B"}},[a._v("1. 整型")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%B5%AE%E7%82%B9%E6%95%B0"}},[a._v("2. 浮点数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%AD%97%E7%AC%A6%E4%B8%B2-1"}},[a._v("3. 字符串")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%97%B6%E9%97%B4%E5%92%8C%E6%97%A5%E6%9C%9F"}},[a._v("4. 时间和日期")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-datatime"}},[a._v("⑴. DATATIME")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-timestamp"}},[a._v("⑵. TIMESTAMP")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E7%B4%A2%E5%BC%95"}},[a._v("（三）、索引")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%B4%A2%E5%BC%95%E5%88%86%E7%B1%BB"}},[a._v("1. 索引分类")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-btree-%E7%B4%A2%E5%BC%95"}},[a._v("⑴. B Tree 索引")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%93%88%E5%B8%8C%E7%B4%A2%E5%BC%95"}},[a._v("⑵. 哈希索引")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%A9%BA%E9%97%B4%E7%B4%A2%E5%BC%95r-tree"}},[a._v("⑶. 空间索引（R-Tree）")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%85%A8%E6%96%87%E7%B4%A2%E5%BC%95"}},[a._v("⑷. 全文索引")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%B4%A2%E5%BC%95%E7%9A%84%E4%BC%98%E7%82%B9"}},[a._v("2. 索引的优点")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%B4%A2%E5%BC%95%E4%BC%98%E5%8C%96"}},[a._v("3. 索引优化")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E7%8B%AC%E7%AB%8B%E7%9A%84%E5%88%97"}},[a._v("⑴. 独立的列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%89%8D%E7%BC%80%E7%B4%A2%E5%BC%95"}},[a._v("⑵. 前缀索引")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A4%9A%E5%88%97%E7%B4%A2%E5%BC%95"}},[a._v("⑶. 多列索引")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%B4%A2%E5%BC%95%E5%88%97%E7%9A%84%E9%A1%BA%E5%BA%8F"}},[a._v("⑷. 索引列的顺序")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%81%9A%E7%B0%87%E7%B4%A2%E5%BC%95"}},[a._v("⑸. 聚簇索引")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%A6%86%E7%9B%96%E7%B4%A2%E5%BC%95"}},[a._v("⑹. 覆盖索引")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-b-tree-%E5%92%8C-btree-%E5%8E%9F%E7%90%86"}},[a._v("4. B-Tree 和 B Tree 原理")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-b-tree"}},[a._v("⑴. B-Tree")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-btree"}},[a._v("⑵. B Tree")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%B8%A6%E6%9C%89%E9%A1%BA%E5%BA%8F%E8%AE%BF%E9%97%AE%E6%8C%87%E9%92%88%E7%9A%84-btree"}},[a._v("⑶. 带有顺序访问指针的 B Tree")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%BF%E7%94%A8-b-tree-%E5%92%8C-btree"}},[a._v("⑷. 为什么使用 B-Tree 和 B Tree")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E6%9F%A5%E8%AF%A2%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96"}},[a._v("（四）、查询性能优化")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-explain"}},[a._v("1. Explain")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%87%8F%E5%B0%91%E8%BF%94%E5%9B%9E%E7%9A%84%E5%88%97"}},[a._v("2. 减少返回的列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%87%8F%E5%B0%91%E8%BF%94%E5%9B%9E%E7%9A%84%E8%A1%8C"}},[a._v("3. 减少返回的行")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%8B%86%E5%88%86%E5%A4%A7%E7%9A%84-delete-%E6%88%96-insert-%E8%AF%AD%E5%8F%A5"}},[a._v("4. 拆分大的 DELETE 或 INSERT 语句")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E5%88%87%E5%88%86"}},[a._v("（五）、切分")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%9E%82%E7%9B%B4%E5%88%87%E5%88%86"}},[a._v("1. 垂直切分")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%B0%B4%E5%B9%B3%E5%88%87%E5%88%86"}},[a._v("2. 水平切分")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%88%87%E5%88%86%E7%9A%84%E9%80%89%E6%8B%A9"}},[a._v("3. 切分的选择")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98"}},[a._v("4. 存在的问题")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98"}},[a._v("⑴. 事务问题")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%B7%A8%E5%BA%93%E8%B7%A8%E8%A1%A8%E8%BF%9E%E6%8E%A5%E9%97%AE%E9%A2%98"}},[a._v("⑵. 跨库跨表连接问题")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%A2%9D%E5%A4%96%E7%9A%84%E6%95%B0%E6%8D%AE%E7%AE%A1%E7%90%86%E8%B4%9F%E6%8B%85%E5%92%8C%E6%95%B0%E6%8D%AE%E8%BF%90%E7%AE%97%E5%8E%8B%E5%8A%9B"}},[a._v("⑶. 额外的数据管理负担和数据运算压力")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E6%95%B0%E6%8D%AE%E8%BD%AC%E7%A7%BB%E5%92%8C%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D"}},[a._v("（六）、数据转移和故障恢复")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%8F%90%E5%8D%87%E5%A4%87%E5%BA%93%E6%88%96%E5%88%87%E6%8D%A2%E8%A7%92%E8%89%B2"}},[a._v("1. 提升备库或切换角色")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%99%9A%E6%8B%9F-ip-%E5%9C%B0%E5%9D%80%E5%92%8C-ip-%E6%89%98%E7%AE%A1"}},[a._v("2. 虚拟 IP 地址和 IP 托管")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E4%B8%AD%E9%97%B4%E4%BB%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88"}},[a._v("3. 中间件解决方案")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%9C%A8%E5%BA%94%E7%94%A8%E4%B8%AD%E5%A4%84%E7%90%86%E6%95%85%E9%9A%9C%E8%BD%AC%E7%A7%BB"}},[a._v("4. 在应用中处理故障转移")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E5%9B%9Bredis"}},[a._v("十四、Redis")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80redis%E6%98%AF%E4%BB%80%E4%B9%88"}},[a._v("（一）、Redis是什么")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E4%BA%94%E7%A7%8D%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B"}},[a._v("（二）、五种基本类型")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-string"}},[a._v("1. STRING")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-list"}},[a._v("2. LIST")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-set"}},[a._v("3. SET")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-hash"}},[a._v("4. HASH")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-zset"}},[a._v("5. ZSET")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E9%94%AE%E7%9A%84%E8%BF%87%E6%9C%9F%E6%97%B6%E9%97%B4"}},[a._v("（三）、键的过期时间")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E5%8F%91%E5%B8%83%E4%B8%8E%E8%AE%A2%E9%98%85"}},[a._v("（四）、发布与订阅")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E4%BA%8B%E5%8A%A1"}},[a._v("（五）、事务")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E6%8C%81%E4%B9%85%E5%8C%96"}},[a._v("（六）、持久化")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%BF%AB%E7%85%A7%E6%8C%81%E4%B9%85%E5%8C%96"}},[a._v("1. 快照持久化")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-aof-%E6%8C%81%E4%B9%85%E5%8C%96"}},[a._v("2. AOF 持久化")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83%E5%A4%8D%E5%88%B6"}},[a._v("（七）、复制")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E4%BB%8E%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9E%E6%8E%A5%E4%B8%BB%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E8%BF%87%E7%A8%8B"}},[a._v("1. 从服务器连接主服务器的过程")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E4%B8%BB%E4%BB%8E%E9%93%BE"}},[a._v("2. 主从链")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AB%E5%A4%84%E7%90%86%E6%95%85%E9%9A%9C"}},[a._v("（八）、处理故障")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B9%9D%E5%88%86%E7%89%87"}},[a._v("（九）、分片")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%88%86%E7%89%87"}},[a._v("1. 客户端分片")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E4%BB%A3%E7%90%86%E5%88%86%E7%89%87"}},[a._v("2. 代理分片")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%88%86%E7%89%87"}},[a._v("3. 服务器分片")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%BA%8B%E4%BB%B6"}},[a._v("（十）、事件")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E4%BA%8B%E4%BB%B6%E7%B1%BB%E5%9E%8B"}},[a._v("1. 事件类型")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%96%87%E4%BB%B6%E4%BA%8B%E4%BB%B6"}},[a._v("⑴. 文件事件")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%97%B6%E9%97%B4%E4%BA%8B%E4%BB%B6"}},[a._v("⑵. 时间事件")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E4%BA%8B%E4%BB%B6%E7%9A%84%E8%B0%83%E5%BA%A6%E4%B8%8E%E6%89%A7%E8%A1%8C"}},[a._v("2. 事件的调度与执行")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%B8%80redis-%E4%B8%8E-memcached-%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a._v("（十一）、Redis 与 Memcached 的区别")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B"}},[a._v("1. 数据类型")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%95%B0%E6%8D%AE%E6%8C%81%E4%B9%85%E5%8C%96"}},[a._v("2. 数据持久化")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%88%86%E5%B8%83%E5%BC%8F"}},[a._v("3. 分布式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%E6%9C%BA%E5%88%B6"}},[a._v("4. 内存管理机制")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%BA%8Credis-%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF"}},[a._v("（十二）、Redis 适用场景")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%BC%93%E5%AD%98"}},[a._v("1. 缓存")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%B6%88%E6%81%AF%E9%98%9F%E5%88%97"}},[a._v("2. 消息队列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E8%AE%A1%E6%95%B0%E5%99%A8"}},[a._v("3. 计数器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%A5%BD%E5%8F%8B%E5%85%B3%E7%B3%BB"}},[a._v("4. 好友关系")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%B8%89%E6%95%B0%E6%8D%AE%E6%B7%98%E6%B1%B0%E7%AD%96%E7%95%A5"}},[a._v("（十三）、数据淘汰策略")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E5%9B%9B%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%AE%BA%E5%9D%9B%E7%B3%BB%E7%BB%9F%E5%88%86%E6%9E%90"}},[a._v("（十四）、一个简单的论坛系统分析")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%96%87%E7%AB%A0%E4%BF%A1%E6%81%AF"}},[a._v("1. 文章信息")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%82%B9%E8%B5%9E%E5%8A%9F%E8%83%BD"}},[a._v("2. 点赞功能")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%AF%B9%E6%96%87%E7%AB%A0%E8%BF%9B%E8%A1%8C%E6%8E%92%E5%BA%8F"}},[a._v("3. 对文章进行排序")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%BA%94java-%E8%99%9A%E6%8B%9F%E6%9C%BA"}},[a._v("十五、Java 虚拟机")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA%E5%9F%9F"}},[a._v("（一）、运行时数据区域")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%A8%8B%E5%BA%8F%E8%AE%A1%E6%95%B0%E5%99%A8"}},[a._v("1. 程序计数器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-java-%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A0%88"}},[a._v("2. Java 虚拟机栈")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%9C%AC%E5%9C%B0%E6%96%B9%E6%B3%95%E6%A0%88"}},[a._v("3. 本地方法栈")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-java-%E5%A0%86"}},[a._v("4. Java 堆")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E6%96%B9%E6%B3%95%E5%8C%BA"}},[a._v("5. 方法区")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E8%BF%90%E8%A1%8C%E6%97%B6%E5%B8%B8%E9%87%8F%E6%B1%A0"}},[a._v("6. 运行时常量池")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E7%9B%B4%E6%8E%A5%E5%86%85%E5%AD%98"}},[a._v("7. 直接内存")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86"}},[a._v("（二）、垃圾收集")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E6%98%AF%E5%90%A6%E5%8F%AF%E5%9B%9E%E6%94%B6"}},[a._v("1. 判断一个对象是否可回收")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%BC%95%E7%94%A8%E8%AE%A1%E6%95%B0"}},[a._v("⑴. 引用计数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8F%AF%E8%BE%BE%E6%80%A7"}},[a._v("⑵. 可达性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%BC%95%E7%94%A8%E7%B1%BB%E5%9E%8B"}},[a._v("⑶. 引用类型")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%96%B9%E6%B3%95%E5%8C%BA%E7%9A%84%E5%9B%9E%E6%94%B6"}},[a._v("⑷. 方法区的回收")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-finalize"}},[a._v("⑸. finalize()")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E7%AE%97%E6%B3%95"}},[a._v("2. 垃圾收集算法")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%A0%87%E8%AE%B0---%E6%B8%85%E9%99%A4"}},[a._v("⑴. 标记 - 清除")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A4%8D%E5%88%B6"}},[a._v("⑵. 复制")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%A0%87%E8%AE%B0---%E6%95%B4%E7%90%86"}},[a._v("⑶. 标记 - 整理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%86%E4%BB%A3%E6%94%B6%E9%9B%86"}},[a._v("⑷. 分代收集")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8"}},[a._v("3. 垃圾收集器")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-serial-%E6%94%B6%E9%9B%86%E5%99%A8"}},[a._v("⑴. Serial 收集器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-parnew-%E6%94%B6%E9%9B%86%E5%99%A8"}},[a._v("⑵. ParNew 收集器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-parallel-scavenge-%E6%94%B6%E9%9B%86%E5%99%A8"}},[a._v("⑶. Parallel Scavenge 收集器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-serial-old-%E6%94%B6%E9%9B%86%E5%99%A8"}},[a._v("⑷. Serial Old 收集器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-parallel-old-%E6%94%B6%E9%9B%86%E5%99%A8"}},[a._v("⑸. Parallel Old 收集器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-cms-%E6%94%B6%E9%9B%86%E5%99%A8"}},[a._v("⑹. CMS 收集器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-g1-%E6%94%B6%E9%9B%86%E5%99%A8"}},[a._v("⑺. G1 收集器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%B8%83%E7%A7%8D%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8%E7%9A%84%E6%AF%94%E8%BE%83"}},[a._v("⑻. 七种垃圾收集器的比较")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D%E4%B8%8E%E5%9B%9E%E6%94%B6%E7%AD%96%E7%95%A5"}},[a._v("4. 内存分配与回收策略")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%BC%98%E5%85%88%E5%9C%A8-eden-%E5%88%86%E9%85%8D"}},[a._v("⑴. 优先在 Eden 分配")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%A4%A7%E5%AF%B9%E8%B1%A1%E7%9B%B4%E6%8E%A5%E8%BF%9B%E5%85%A5%E8%80%81%E5%B9%B4%E4%BB%A3"}},[a._v("⑵. 大对象直接进入老年代")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%95%BF%E6%9C%9F%E5%AD%98%E6%B4%BB%E7%9A%84%E5%AF%B9%E8%B1%A1%E8%BF%9B%E5%85%A5%E8%80%81%E5%B9%B4%E4%BB%A3"}},[a._v("⑶. 长期存活的对象进入老年代")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8A%A8%E6%80%81%E5%AF%B9%E8%B1%A1%E5%B9%B4%E9%BE%84%E5%88%A4%E5%AE%9A"}},[a._v("⑷. 动态对象年龄判定")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D%E6%8B%85%E4%BF%9D"}},[a._v("⑸. 空间分配担保")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-full-gc-%E7%9A%84%E8%A7%A6%E5%8F%91%E6%9D%A1%E4%BB%B6"}},[a._v("5. Full GC 的触发条件")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E8%B0%83%E7%94%A8-systemgc"}},[a._v("⑴. 调用 System.gc()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%80%81%E5%B9%B4%E4%BB%A3%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3"}},[a._v("⑵. 老年代空间不足")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%A9%BA%E9%97%B4%E5%88%86%E9%85%8D%E6%8B%85%E4%BF%9D%E5%A4%B1%E8%B4%A5"}},[a._v("⑶. 空间分配担保失败")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-jdk-17-%E5%8F%8A%E4%BB%A5%E5%89%8D%E7%9A%84%E6%B0%B8%E4%B9%85%E4%BB%A3%E7%A9%BA%E9%97%B4%E4%B8%8D%E8%B6%B3"}},[a._v("⑷. JDK 1.7 及以前的永久代空间不足")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-concurrent-mode-failure"}},[a._v("⑸. Concurrent Mode Failure")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E7%B1%BB%E5%8A%A0%E8%BD%BD%E6%9C%BA%E5%88%B6"}},[a._v("（三）、类加载机制")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%B1%BB%E7%9A%84%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F"}},[a._v("1. 类的生命周期")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%B1%BB%E5%88%9D%E5%A7%8B%E5%8C%96%E6%97%B6%E6%9C%BA"}},[a._v("2. 类初始化时机")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E8%BF%87%E7%A8%8B"}},[a._v("3. 类加载过程")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%8A%A0%E8%BD%BD"}},[a._v("⑴. 加载")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%AA%8C%E8%AF%81"}},[a._v("⑵. 验证")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%87%86%E5%A4%87"}},[a._v("⑶. 准备")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%A7%A3%E6%9E%90"}},[a._v("⑷. 解析")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%9D%E5%A7%8B%E5%8C%96"}},[a._v("⑸. 初始化")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8"}},[a._v("4. 类加载器")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E7%B1%BB%E4%B8%8E%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8"}},[a._v("⑴. 类与类加载器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8%E5%88%86%E7%B1%BB"}},[a._v("⑵. 类加载器分类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8F%8C%E4%BA%B2%E5%A7%94%E6%B4%BE%E6%A8%A1%E5%9E%8B"}},[a._v("⑶. 双亲委派模型")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9Bjvm%E5%8F%82%E6%95%B0"}},[a._v("（四）、JVM参数")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-gc-%E4%BC%98%E5%8C%96%E9%85%8D%E7%BD%AE"}},[a._v("1. GC 优化配置")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-gc-%E7%B1%BB%E5%9E%8B%E8%AE%BE%E7%BD%AE"}},[a._v("2. GC 类型设置")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E5%85%ADjava-%E5%B9%B6%E5%8F%91"}},[a._v("十六、Java 并发")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E4%BD%BF%E7%94%A8%E7%BA%BF%E7%A8%8B"}},[a._v("（一）、使用线程")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%AE%9E%E7%8E%B0-runnable-%E6%8E%A5%E5%8F%A3"}},[a._v("1. 实现 Runnable 接口")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%AE%9E%E7%8E%B0-callable-%E6%8E%A5%E5%8F%A3"}},[a._v("2. 实现 Callable 接口")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%BB%A7%E6%89%BF-thread-%E7%B1%BB"}},[a._v("3. 继承 Thread 类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%AE%9E%E7%8E%B0%E6%8E%A5%E5%8F%A3-vs-%E7%BB%A7%E6%89%BF-thread"}},[a._v("4. 实现接口 VS 继承 Thread")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%9F%BA%E7%A1%80%E7%BA%BF%E7%A8%8B%E6%9C%BA%E5%88%B6"}},[a._v("（二）、基础线程机制")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-sleep"}},[a._v("1. sleep()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-yield"}},[a._v("2. yield()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-join"}},[a._v("3. join()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-deamon"}},[a._v("4. deamon")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E7%BB%93%E6%9D%9F%E7%BA%BF%E7%A8%8B"}},[a._v("（三）、结束线程")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E9%98%BB%E5%A1%9E"}},[a._v("1. 阻塞")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E4%B8%AD%E6%96%AD"}},[a._v("2. 中断")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E7%BA%BF%E7%A8%8B%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8D%8F%E4%BD%9C"}},[a._v("（四）、线程之间的协作")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%90%8C%E6%AD%A5%E4%B8%8E%E9%80%9A%E4%BF%A1%E7%9A%84%E6%A6%82%E5%BF%B5%E7%90%86%E8%A7%A3"}},[a._v("1. 同步与通信的概念理解")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%BA%BF%E7%A8%8B%E5%90%8C%E6%AD%A5"}},[a._v("2. 线程同步")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-synchronized"}},[a._v("⑴. synchronized")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-reentrantlock"}},[a._v("⑵. ReentrantLock")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%BA%BF%E7%A8%8B%E9%80%9A%E4%BF%A1"}},[a._v("3. 线程通信")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-wait-notify-notifyall"}},[a._v("⑴. wait() notify() notifyAll()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-blockingqueue"}},[a._v("⑵. BlockingQueue")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E7%BA%BF%E7%A8%8B%E7%8A%B6%E6%80%81%E8%BD%AC%E6%8D%A2"}},[a._v("（五）、线程状态转换")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%ADexecutor"}},[a._v("（六）、Executor")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B"}},[a._v("（七）、内存模型")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E4%B8%BB%E5%86%85%E5%AD%98%E4%B8%8E%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AD%98"}},[a._v("1. 主内存与工作内存")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7"}},[a._v("2. 内存模型三大特性")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%8E%9F%E5%AD%90%E6%80%A7"}},[a._v("⑴. 原子性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8F%AF%E8%A7%81%E6%80%A7"}},[a._v("⑵. 可见性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%89%E5%BA%8F%E6%80%A7"}},[a._v("⑶. 有序性")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%85%88%E8%A1%8C%E5%8F%91%E7%94%9F%E5%8E%9F%E5%88%99"}},[a._v("3. 先行发生原则")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%8D%95%E4%B8%80%E7%BA%BF%E7%A8%8B%E5%8E%9F%E5%88%99"}},[a._v("⑴. 单一线程原则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%AE%A1%E7%A8%8B%E9%94%81%E5%AE%9A%E8%A7%84%E5%88%99"}},[a._v("⑵. 管程锁定规则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-volatile-%E5%8F%98%E9%87%8F%E8%A7%84%E5%88%99"}},[a._v("⑶. volatile 变量规则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BA%BF%E7%A8%8B%E5%90%AF%E5%8A%A8%E8%A7%84%E5%88%99"}},[a._v("⑷. 线程启动规则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BA%BF%E7%A8%8B%E5%8A%A0%E5%85%A5%E8%A7%84%E5%88%99"}},[a._v("⑸. 线程加入规则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BA%BF%E7%A8%8B%E4%B8%AD%E6%96%AD%E8%A7%84%E5%88%99"}},[a._v("⑹. 线程中断规则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AF%B9%E8%B1%A1%E7%BB%88%E7%BB%93%E8%A7%84%E5%88%99"}},[a._v("⑺. 对象终结规则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BC%A0%E9%80%92%E6%80%A7"}},[a._v("⑻. 传递性")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AB%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8"}},[a._v("（八）、线程安全")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E5%88%86%E7%B1%BB"}},[a._v("1. 线程安全分类")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%B8%8D%E5%8F%AF%E5%8F%98"}},[a._v("⑴. 不可变")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BB%9D%E5%AF%B9%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8"}},[a._v("⑵. 绝对线程安全")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%9B%B8%E5%AF%B9%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8"}},[a._v("⑶. 相对线程安全")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BA%BF%E7%A8%8B%E5%85%BC%E5%AE%B9"}},[a._v("⑷. 线程兼容")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BA%BF%E7%A8%8B%E5%AF%B9%E7%AB%8B"}},[a._v("⑸. 线程对立")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%B3%95"}},[a._v("2. 线程安全的实现方法")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%BA%92%E6%96%A5%E5%90%8C%E6%AD%A5"}},[a._v("⑴. 互斥同步")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%9D%9E%E9%98%BB%E5%A1%9E%E5%90%8C%E6%AD%A5"}},[a._v("⑵. 非阻塞同步")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%97%A0%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88"}},[a._v("⑶. 无同步方案")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E9%94%81%E4%BC%98%E5%8C%96"}},[a._v("3. 锁优化")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E8%87%AA%E6%97%8B%E9%94%81%E4%B8%8E%E8%87%AA%E9%80%82%E5%BA%94%E8%87%AA%E6%97%8B"}},[a._v("⑴. 自旋锁与自适应自旋")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%94%81%E6%B6%88%E9%99%A4"}},[a._v("⑵. 锁消除")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%94%81%E7%B2%97%E5%8C%96"}},[a._v("⑶. 锁粗化")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%94%81"}},[a._v("⑷. 轻量级锁")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%81%8F%E5%90%91%E9%94%81"}},[a._v("⑸. 偏向锁")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B9%9D%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%BC%80%E5%8F%91%E8%89%AF%E5%A5%BD%E7%9A%84%E5%AE%9E%E8%B7%B5"}},[a._v("（九）、多线程开发良好的实践")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%B8%83java-%E5%AE%B9%E5%99%A8"}},[a._v("十七、Java 容器")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E6%A6%82%E8%A7%88"}},[a._v("（一）、概览")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-collection"}},[a._v("1. Collection")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-set"}},[a._v("⑴. Set")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-list"}},[a._v("⑵. List")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-queue"}},[a._v("⑶. Queue")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-map"}},[a._v("2. Map")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%AE%B9%E5%99%A8%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F"}},[a._v("（二）、容器中的设计模式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E8%BF%AD%E4%BB%A3%E5%99%A8%E6%A8%A1%E5%BC%8F"}},[a._v("1. 迭代器模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E9%80%82%E9%85%8D%E5%99%A8%E6%A8%A1%E5%BC%8F"}},[a._v("2. 适配器模式")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E6%95%A3%E5%88%97"}},[a._v("（三）、散列")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90"}},[a._v("（四）、源码分析")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-arraylist"}},[a._v("1. ArrayList")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%A6%82%E8%A7%88"}},[a._v("⑴. 概览")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-fail-fast"}},[a._v("⑵. Fail-Fast")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%92%8C-vector-%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a._v("⑶. 和 Vector 的区别")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%92%8C-linkedlist-%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a._v("⑷. 和 LinkedList 的区别")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-vector"}},[a._v("2. Vector")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-linkedlist"}},[a._v("3. LinkedList")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-treemap"}},[a._v("4. TreeMap")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-hashmap"}},[a._v("5. HashMap")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84"}},[a._v("⑴. 存储结构")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%8B%89%E9%93%BE%E6%B3%95%E7%9A%84%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86"}},[a._v("⑵. 拉链法的工作原理")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%93%BE%E8%A1%A8%E8%BD%AC%E7%BA%A2%E9%BB%91%E6%A0%91"}},[a._v("⑶. 链表转红黑树")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%89%A9%E5%AE%B9"}},[a._v("⑷. 扩容")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%A1%AE%E5%AE%9A%E6%A1%B6%E4%B8%8B%E6%A0%87"}},[a._v("⑸. 确定桶下标")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%89%A9%E5%AE%B9-%E9%87%8D%E6%96%B0%E8%AE%A1%E7%AE%97%E6%A1%B6%E4%B8%8B%E6%A0%87"}},[a._v("⑹. 扩容-重新计算桶下标")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%89%A9%E5%AE%B9-%E8%AE%A1%E7%AE%97%E6%95%B0%E7%BB%84%E5%AE%B9%E9%87%8F"}},[a._v("⑺. 扩容-计算数组容量")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-null-%E5%80%BC"}},[a._v("⑻. null 值")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%B8%8E-hashtable-%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a._v("⑼. 与 HashTable 的区别")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-linkedhashmap"}},[a._v("6. LinkedHashMap")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-concurrenthashmap---jdk-17"}},[a._v("7. ConcurrentHashMap - JDK 1.7")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84-1"}},[a._v("⑴. 存储结构")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-hashentery-%E7%9A%84%E4%B8%8D%E5%8F%AF%E5%8F%98%E6%80%A7"}},[a._v("⑵. HashEntery 的不可变性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-volatile-%E5%8F%98%E9%87%8F"}},[a._v("⑶. Volatile 变量")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%B0%8F%E7%BB%93"}},[a._v("⑷. 小结")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-concurrenthashmap---jdk-18"}},[a._v("8. ConcurrentHashMap - JDK 1.8")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E5%85%ABjava-io"}},[a._v("十八、Java IO")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E6%A6%82%E8%A7%88-1"}},[a._v("（一）、概览")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E7%A3%81%E7%9B%98%E6%93%8D%E4%BD%9C"}},[a._v("（二）、磁盘操作")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E5%AD%97%E8%8A%82%E6%93%8D%E4%BD%9C"}},[a._v("（三）、字节操作")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E5%AD%97%E7%AC%A6%E6%93%8D%E4%BD%9C"}},[a._v("（四）、字符操作")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E5%AF%B9%E8%B1%A1%E6%93%8D%E4%BD%9C"}},[a._v("（五）、对象操作")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C"}},[a._v("（六）、网络操作")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-inetaddress"}},[a._v("1. InetAddress")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-url-1"}},[a._v("2. URL")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-sockets"}},[a._v("3. Sockets")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-datagram"}},[a._v("4. Datagram")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83nio"}},[a._v("（七）、NIO")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%B5%81%E4%B8%8E%E5%9D%97"}},[a._v("1. 流与块")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E9%80%9A%E9%81%93%E4%B8%8E%E7%BC%93%E5%86%B2%E5%8C%BA"}},[a._v("2. 通道与缓冲区")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E9%80%9A%E9%81%93"}},[a._v("⑴. 通道")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BC%93%E5%86%B2%E5%8C%BA"}},[a._v("⑵. 缓冲区")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%BC%93%E5%86%B2%E5%8C%BA%E7%8A%B6%E6%80%81%E5%8F%98%E9%87%8F"}},[a._v("3. 缓冲区状态变量")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%96%87%E4%BB%B6-nio-%E5%AE%9E%E4%BE%8B"}},[a._v("4. 文件 NIO 实例")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%A5%97%E6%8E%A5%E5%AD%97-nio-%E5%AE%9E%E4%BE%8B"}},[a._v("5. 套接字 NIO 实例")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-serversocketchannel"}},[a._v("⑴. ServerSocketChannel")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-selectors"}},[a._v("⑵. Selectors")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%B8%BB%E5%BE%AA%E7%8E%AF"}},[a._v("⑶. 主循环")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%9B%91%E5%90%AC%E6%96%B0%E8%BF%9E%E6%8E%A5"}},[a._v("⑷. 监听新连接")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%8E%A5%E5%8F%97%E6%96%B0%E7%9A%84%E8%BF%9E%E6%8E%A5"}},[a._v("⑸. 接受新的连接")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%88%A0%E9%99%A4%E5%A4%84%E7%90%86%E8%BF%87%E7%9A%84-selectionkey"}},[a._v("⑹. 删除处理过的 SelectionKey")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BC%A0%E5%85%A5%E7%9A%84-io"}},[a._v("⑺. 传入的 I/O")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%86%85%E5%AD%98%E6%98%A0%E5%B0%84%E6%96%87%E4%BB%B6"}},[a._v("6. 内存映射文件")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E5%AF%B9%E6%AF%94"}},[a._v("7. 对比")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E4%B9%9Djava-%E5%9F%BA%E7%A1%80"}},[a._v("十九、Java 基础")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E5%85%B3%E9%94%AE%E5%AD%97"}},[a._v("（一）、关键字")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-final"}},[a._v("1. final")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-static"}},[a._v("2. static")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8Cobject-%E9%80%9A%E7%94%A8%E6%96%B9%E6%B3%95"}},[a._v("（二）、Object 通用方法")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%A6%82%E8%A7%88"}},[a._v("1. 概览")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-clone"}},[a._v("2. clone()")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-equals"}},[a._v("3. equals()")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E7%BB%A7%E6%89%BF"}},[a._v("（三）、继承")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E8%AE%BF%E9%97%AE%E6%9D%83%E9%99%90"}},[a._v("1. 访问权限")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%8A%BD%E8%B1%A1%E7%B1%BB%E4%B8%8E%E6%8E%A5%E5%8F%A3"}},[a._v("2. 抽象类与接口")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-super"}},[a._v("3. super")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E9%87%8D%E8%BD%BD%E4%B8%8E%E9%87%8D%E5%86%99"}},[a._v("4. 重载与重写")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9Bstring"}},[a._v("（四）、String")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-string-stringbuffer-and-stringbuilder"}},[a._v("1. String, StringBuffer and StringBuilder")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-string-%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84%E5%8E%9F%E5%9B%A0"}},[a._v("2. String 不可变的原因")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-stringintern"}},[a._v("3. String.intern()")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E4%B8%8E%E8%BF%90%E7%AE%97"}},[a._v("（五）、基本类型与运算")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%8C%85%E8%A3%85%E7%B1%BB%E5%9E%8B"}},[a._v("1. 包装类型")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-switch"}},[a._v("2. switch")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E5%8F%8D%E5%B0%84"}},[a._v("（六）、反射")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83%E5%BC%82%E5%B8%B8"}},[a._v("（七）、异常")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AB%E6%B3%9B%E5%9E%8B"}},[a._v("（八）、泛型")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B9%9D%E6%B3%A8%E8%A7%A3"}},[a._v("（九）、注解")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E7%89%B9%E6%80%A7"}},[a._v("（十）、特性")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E4%B8%89%E5%A4%A7%E7%89%B9%E6%80%A7"}},[a._v("1. 面向对象三大特性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-java-%E5%90%84%E7%89%88%E6%9C%AC%E7%9A%84%E6%96%B0%E7%89%B9%E6%80%A7"}},[a._v("2. Java 各版本的新特性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-java-%E4%B8%8E-c-%E7%9A%84%E5%8C%BA%E5%88%AB"}},[a._v("3. Java 与 C   的区别")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-jre-or-jdk"}},[a._v("4. JRE or JDK")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81jdk-%E4%B8%AD%E7%9A%84%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F"}},[a._v("二十、JDK 中的设计模式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E5%88%9B%E5%BB%BA%E5%9E%8B"}},[a._v("（一）、创建型")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F"}},[a._v("1. 单例模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%AE%80%E5%8D%95%E5%B7%A5%E5%8E%82%E6%A8%A1%E5%BC%8F"}},[a._v("2. 简单工厂模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%A8%A1%E5%BC%8F"}},[a._v("3. 工厂方法模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82"}},[a._v("4. 抽象工厂")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E7%94%9F%E6%88%90%E5%99%A8%E6%A8%A1%E5%BC%8F"}},[a._v("5. 生成器模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%8E%9F%E5%9E%8B%E6%A8%A1%E5%BC%8F"}},[a._v("6. 原型模式")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E8%A1%8C%E4%B8%BA%E5%9E%8B"}},[a._v("（二）、行为型")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E8%B4%A3%E4%BB%BB%E9%93%BE"}},[a._v("1. 责任链")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%91%BD%E4%BB%A4%E6%A8%A1%E5%BC%8F"}},[a._v("2. 命令模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E8%A7%A3%E9%87%8A%E5%99%A8%E6%A8%A1%E5%BC%8F"}},[a._v("3. 解释器模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E8%BF%AD%E4%BB%A3%E5%99%A8"}},[a._v("4. 迭代器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%A8%A1%E5%BC%8F"}},[a._v("5. 中间人模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%A4%87%E5%BF%98%E5%BD%95%E6%A8%A1%E5%BC%8F"}},[a._v("6. 备忘录模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F"}},[a._v("7. 观察者模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F"}},[a._v("8. 策略模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E6%A8%A1%E6%9D%BF%E6%96%B9%E6%B3%95"}},[a._v("9. 模板方法")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-%E8%AE%BF%E9%97%AE%E8%80%85%E6%A8%A1%E5%BC%8F"}},[a._v("10. 访问者模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-%E7%A9%BA%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%BC%8F"}},[a._v("11. 空对象模式")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E7%BB%93%E6%9E%84%E5%9E%8B"}},[a._v("（三）、结构型")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E9%80%82%E9%85%8D%E5%99%A8"}},[a._v("1. 适配器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%A1%A5%E6%8E%A5%E6%A8%A1%E5%BC%8F"}},[a._v("2. 桥接模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%BB%84%E5%90%88%E6%A8%A1%E5%BC%8F"}},[a._v("3. 组合模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E8%A3%85%E9%A5%B0%E8%80%85%E6%A8%A1%E5%BC%8F"}},[a._v("4. 装饰者模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E8%9D%87%E9%87%8F%E6%A8%A1%E5%BC%8F"}},[a._v("5. 蝇量模式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86"}},[a._v("6. 动态代理")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E4%B8%80%E5%88%86%E5%B8%83%E5%BC%8F%E5%9F%BA%E7%A1%80"}},[a._v("二十一、分布式基础")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5-1"}},[a._v("（一）、基本概念")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%BC%82%E5%B8%B8"}},[a._v("1. 异常")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%AE%95%E6%9C%BA"}},[a._v("⑴. 服务器宕机")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%BD%91%E7%BB%9C%E5%BC%82%E5%B8%B8"}},[a._v("⑵. 网络异常")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%A3%81%E7%9B%98%E6%95%85%E9%9A%9C"}},[a._v("⑶. 磁盘故障")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%B6%85%E6%97%B6"}},[a._v("2. 超时")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E8%A1%A1%E9%87%8F%E6%8C%87%E6%A0%87"}},[a._v("3. 衡量指标")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%80%A7%E8%83%BD"}},[a._v("⑴. 性能")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8F%AF%E7%94%A8%E6%80%A7"}},[a._v("⑵. 可用性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%B8%80%E8%87%B4%E6%80%A7"}},[a._v("⑶. 一致性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8F%AF%E6%89%A9%E5%B1%95%E6%80%A7"}},[a._v("⑷. 可扩展性")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E6%95%B0%E6%8D%AE%E5%88%86%E5%B8%83"}},[a._v("（二）、数据分布")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%93%88%E5%B8%8C%E5%88%86%E5%B8%83"}},[a._v("1. 哈希分布")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E9%A1%BA%E5%BA%8F%E5%88%86%E5%B8%83"}},[a._v("2. 顺序分布")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1"}},[a._v("（三）、负载均衡")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E5%A4%8D%E5%88%B6"}},[a._v("（四）、复制")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%BC%BA%E5%90%8C%E6%AD%A5%E5%A4%8D%E5%88%B6%E5%8D%8F%E8%AE%AE"}},[a._v("1. 强同步复制协议")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%BC%82%E6%AD%A5%E5%A4%8D%E5%88%B6%E5%8D%8F%E8%AE%AE"}},[a._v("2. 异步复制协议")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94cap"}},[a._v("（五）、CAP")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%ADbase"}},[a._v("（六）、BASE")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%9F%BA%E6%9C%AC%E5%8F%AF%E7%94%A8"}},[a._v("1. 基本可用")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%BD%AF%E7%8A%B6%E6%80%81"}},[a._v("2. 软状态")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7"}},[a._v("3. 最终一致性")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83%E5%AE%B9%E9%94%99"}},[a._v("（七）、容错")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%95%85%E9%9A%9C%E6%A3%80%E6%B5%8B"}},[a._v("1. 故障检测")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%95%85%E9%9A%9C%E6%81%A2%E5%A4%8D"}},[a._v("2. 故障恢复")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%ABcdn-%E6%9E%B6%E6%9E%84"}},[a._v("（八）、CDN 架构")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E4%BA%8C%E4%B8%80%E8%87%B4%E6%80%A7%E5%8D%8F%E8%AE%AE"}},[a._v("二十二、一致性协议")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4%E5%8D%8F%E8%AE%AE"}},[a._v("（一）、两阶段提交协议")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E8%BF%90%E8%A1%8C%E8%BF%87%E7%A8%8B"}},[a._v("1. 运行过程")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%AD%98%E5%9C%A8%E7%9A%84%E9%97%AE%E9%A2%98"}},[a._v("2. 存在的问题")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8Cpaxos-%E5%8D%8F%E8%AE%AE"}},[a._v("（二）、Paxos 协议")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B"}},[a._v("1. 执行过程")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%BA%A6%E6%9D%9F%E6%9D%A1%E4%BB%B6"}},[a._v("2. 约束条件")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%AD%A3%E7%A1%AE%E6%80%A7"}},[a._v("⑴. 正确性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8F%AF%E7%BB%88%E6%AD%A2%E6%80%A7"}},[a._v("⑵. 可终止性")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89raft-%E5%8D%8F%E8%AE%AE"}},[a._v("（三）、Raft 协议")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%8D%95%E4%B8%AA-candidate-%E7%9A%84%E7%AB%9E%E9%80%89"}},[a._v("1. 单个 Candidate 的竞选")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%A4%9A%E4%B8%AA-candidate-%E7%AB%9E%E9%80%89"}},[a._v("2. 多个 Candidate 竞选")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%97%A5%E5%BF%97%E5%A4%8D%E5%88%B6"}},[a._v("3. 日志复制")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E6%8B%9C%E5%8D%A0%E5%BA%AD%E5%B0%86%E5%86%9B%E9%97%AE%E9%A2%98"}},[a._v("（四）、拜占庭将军问题")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E4%B8%89%E5%88%86%E5%B8%83%E5%BC%8F%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90"}},[a._v("二十三、分布式问题分析")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E8%B0%88%E8%B0%88%E4%B8%9A%E5%8A%A1%E4%B8%AD%E4%BD%BF%E7%94%A8%E5%88%86%E5%B8%83%E5%BC%8F%E7%9A%84%E5%9C%BA%E6%99%AF"}},[a._v("（一）、谈谈业务中使用分布式的场景")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1"}},[a._v("（二）、分布式事务")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E4%BA%A7%E7%94%9F%E5%8E%9F%E5%9B%A0"}},[a._v("1. 产生原因")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF"}},[a._v("2. 应用场景")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88"}},[a._v("3. 解决方案")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4%E5%8D%8F%E8%AE%AE"}},[a._v("⑴. 两阶段提交协议")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6"}},[a._v("⑵. 消息中间件")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86%E6%A8%A1%E5%9E%8B"}},[a._v("①. 消息处理模型")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%B6%88%E6%81%AF%E7%9A%84%E5%8F%AF%E9%9D%A0%E6%80%A7"}},[a._v("②. 消息的可靠性")])])])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E7%9A%84%E7%AE%97%E6%B3%95%E4%B8%8E%E5%AE%9E%E7%8E%B0"}},[a._v("（三）、负载均衡的算法与实现")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E7%AE%97%E6%B3%95"}},[a._v("1. 算法")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E8%BD%AE%E8%AF%A2round-robin"}},[a._v("⑴. 轮询（Round Robin）")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8A%A0%E6%9D%83%E8%BD%AE%E8%AF%A2weighted-round-robbin"}},[a._v("⑵. 加权轮询（Weighted Round Robbin）")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E6%9C%80%E5%B0%91%E8%BF%9E%E6%8E%A5least-connections"}},[a._v("⑶. 最少连接（least Connections）")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%8A%A0%E6%9D%83%E6%9C%80%E5%B0%8F%E8%BF%9E%E6%8E%A5weighted-leastconnection"}},[a._v("⑷. 加权最小连接（Weighted LeastConnection）")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E9%9A%8F%E6%9C%BA%E7%AE%97%E6%B3%95random"}},[a._v("⑸. 随机算法（Random）")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%AE%9E%E7%8E%B0"}},[a._v("2. 实现")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-http-%E9%87%8D%E5%AE%9A%E5%90%91"}},[a._v("⑴. HTTP 重定向")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-dns-%E9%87%8D%E5%AE%9A%E5%90%91"}},[a._v("⑵. DNS 重定向")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BF%AE%E6%94%B9-mac-%E5%9C%B0%E5%9D%80"}},[a._v("⑶. 修改 MAC 地址")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BF%AE%E6%94%B9-ip-%E5%9C%B0%E5%9D%80"}},[a._v("⑷. 修改 IP 地址")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E4%BB%A3%E7%90%86%E8%87%AA%E5%8A%A8%E9%85%8D%E7%BD%AE"}},[a._v("⑸. 代理自动配置")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81"}},[a._v("（四）、分布式锁")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF"}},[a._v("1. 使用场景")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F"}},[a._v("2. 实现方式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81"}},[a._v("⑴. 数据库分布式锁")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-redis-%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81"}},[a._v("⑵. Redis 分布式锁")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-zookeeper-%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81"}},[a._v("⑶. Zookeeper 分布式锁")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E5%88%86%E5%B8%83%E5%BC%8F-session"}},[a._v("（五）、分布式 Session")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-sticky-sessions"}},[a._v("1. Sticky Sessions")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-session-replication"}},[a._v("2. Session Replication")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-persistent-datastore"}},[a._v("3. Persistent DataStore")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-in-memory-datastore"}},[a._v("4. In-Memory DataStore")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E5%88%86%E5%BA%93%E4%B8%8E%E5%88%86%E8%A1%A8%E5%B8%A6%E6%9D%A5%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E5%9B%B0%E5%A2%83%E4%B8%8E%E5%BA%94%E5%AF%B9%E4%B9%8B%E7%AD%96"}},[a._v("（六）、分库与分表带来的分布式困境与应对之策")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98"}},[a._v("1. 事务问题")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%9F%A5%E8%AF%A2%E9%97%AE%E9%A2%98"}},[a._v("2. 查询问题")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-id-%E5%94%AF%E4%B8%80%E6%80%A7"}},[a._v("3. ID 唯一性")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E5%9B%9Bgit"}},[a._v("二十四、Git")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99"}},[a._v("1. 学习资料")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E9%9B%86%E4%B8%AD%E5%BC%8F%E4%B8%8E%E5%88%86%E5%B8%83%E5%BC%8F"}},[a._v("2. 集中式与分布式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-git-%E7%9A%84%E4%B8%AD%E5%BF%83%E6%9C%8D%E5%8A%A1%E5%99%A8"}},[a._v("3. Git 的中心服务器")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-git-%E5%B7%A5%E4%BD%9C%E6%B5%81"}},[a._v("4. Git 工作流")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%88%86%E6%94%AF%E5%AE%9E%E7%8E%B0"}},[a._v("5. 分支实现")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%86%B2%E7%AA%81"}},[a._v("6. 冲突")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-fast-forward"}},[a._v("7. Fast forward")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86%E7%AD%96%E7%95%A5"}},[a._v("8. 分支管理策略")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E5%82%A8%E8%97%8Fstashing"}},[a._v("9. 储藏（Stashing）")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-ssh-%E4%BC%A0%E8%BE%93%E8%AE%BE%E7%BD%AE"}},[a._v("10. SSH 传输设置")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-gitignore-%E6%96%87%E4%BB%B6"}},[a._v("11. .gitignore 文件")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#12-git-%E5%91%BD%E4%BB%A4%E4%B8%80%E8%A7%88"}},[a._v("12. Git 命令一览")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E4%BA%94%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[a._v("二十五、正则表达式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E6%A6%82%E8%BF%B0-2"}},[a._v("（一）、概述")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8C%B9%E9%85%8D%E5%8D%95%E4%B8%AA%E5%AD%97%E7%AC%A6"}},[a._v("（二）、匹配单个字符")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E5%8C%B9%E9%85%8D%E4%B8%80%E7%BB%84%E5%AD%97%E7%AC%A6"}},[a._v("（三）、匹配一组字符")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E4%BD%BF%E7%94%A8%E5%85%83%E5%AD%97%E7%AC%A6"}},[a._v("（四）、使用元字符")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%8C%B9%E9%85%8D%E7%A9%BA%E7%99%BD%E5%AD%97%E7%AC%A6"}},[a._v("1. 匹配空白字符")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%8C%B9%E9%85%8D%E7%89%B9%E5%AE%9A%E7%9A%84%E5%AD%97%E7%AC%A6%E7%B1%BB%E5%88%AB"}},[a._v("2. 匹配特定的字符类别")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#-%E6%95%B0%E5%AD%97%E5%85%83%E5%AD%97%E7%AC%A6"}},[a._v("⑴. 数字元字符")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E5%AD%97%E6%AF%8D%E6%95%B0%E5%AD%97%E5%85%83%E5%AD%97%E7%AC%A6"}},[a._v("⑵. 字母数字元字符")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#-%E7%A9%BA%E7%99%BD%E5%AD%97%E7%AC%A6%E5%85%83%E5%AD%97%E7%AC%A6"}},[a._v("⑶. 空白字符元字符")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E9%87%8D%E5%A4%8D%E5%8C%B9%E9%85%8D"}},[a._v("（五）、重复匹配")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E4%BD%8D%E7%BD%AE%E5%8C%B9%E9%85%8D"}},[a._v("（六）、位置匹配")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%8D%95%E8%AF%8D%E8%BE%B9%E7%95%8C"}},[a._v("1. 单词边界")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BE%B9%E7%95%8C"}},[a._v("2. 字符串边界")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83%E4%BD%BF%E7%94%A8%E5%AD%90%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[a._v("（七）、使用子表达式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AB%E5%9B%9E%E6%BA%AF%E5%BC%95%E7%94%A8"}},[a._v("（八）、回溯引用")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%9B%BF%E6%8D%A2"}},[a._v("1. 替换")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%A4%A7%E5%B0%8F%E5%86%99%E8%BD%AC%E6%8D%A2"}},[a._v("2. 大小写转换")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B9%9D%E5%89%8D%E5%90%8E%E6%9F%A5%E6%89%BE"}},[a._v("（九）、前后查找")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E5%B5%8C%E5%85%A5%E6%9D%A1%E4%BB%B6"}},[a._v("（十）、嵌入条件")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%9B%9E%E6%BA%AF%E5%BC%95%E7%94%A8%E6%9D%A1%E4%BB%B6"}},[a._v("1. 回溯引用条件")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%89%8D%E5%90%8E%E6%9F%A5%E6%89%BE%E6%9D%A1%E4%BB%B6"}},[a._v("2. 前后查找条件")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E5%85%AD%E9%87%8D%E6%9E%84"}},[a._v("二十六、重构")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%E4%B8%80%E7%AC%AC%E4%B8%80%E4%B8%AA%E6%A1%88%E4%BE%8B"}},[a._v("（一）、第一个案例")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E9%87%8D%E6%9E%84%E5%8E%9F%E5%88%99"}},[a._v("（二）、重构原则")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%AE%9A%E4%B9%89"}},[a._v("1. 定义")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E4%B8%BA%E4%BD%95%E9%87%8D%E6%9E%84"}},[a._v("2. 为何重构")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E4%B8%89%E6%AC%A1%E6%B3%95%E5%88%99"}},[a._v("3. 三次法则")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E9%97%B4%E6%8E%A5%E5%B1%82%E4%B8%8E%E9%87%8D%E6%9E%84"}},[a._v("4. 间接层与重构")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E4%BF%AE%E6%94%B9%E6%8E%A5%E5%8F%A3"}},[a._v("5. 修改接口")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E4%BD%95%E6%97%B6%E4%B8%8D%E8%AF%A5%E9%87%8D%E6%9E%84"}},[a._v("6. 何时不该重构")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E9%87%8D%E6%9E%84%E4%B8%8E%E8%AE%BE%E8%AE%A1"}},[a._v("7. 重构与设计")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E9%87%8D%E6%9E%84%E4%B8%8E%E6%80%A7%E8%83%BD"}},[a._v("8. 重构与性能")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%89%E4%BB%A3%E7%A0%81%E7%9A%84%E5%9D%8F%E5%91%B3%E9%81%93"}},[a._v("（三）、代码的坏味道")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E9%87%8D%E5%A4%8D%E4%BB%A3%E7%A0%81"}},[a._v("1. 重复代码")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E8%BF%87%E9%95%BF%E5%87%BD%E6%95%B0"}},[a._v("2. 过长函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E8%BF%87%E5%A4%A7%E7%9A%84%E7%B1%BB"}},[a._v("3. 过大的类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E8%BF%87%E9%95%BF%E7%9A%84%E5%8F%82%E6%95%B0%E5%88%97%E8%A1%A8"}},[a._v("4. 过长的参数列表")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%8F%91%E6%95%A3%E5%BC%8F%E5%8F%98%E5%8C%96"}},[a._v("5. 发散式变化")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E6%95%A3%E5%BC%B9%E5%BC%8F%E4%BF%AE%E6%94%B9"}},[a._v("6. 散弹式修改")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E4%BE%9D%E6%81%8B%E6%83%85%E7%BB%93"}},[a._v("7. 依恋情结")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E6%95%B0%E6%8D%AE%E6%B3%A5%E5%9B%A2"}},[a._v("8. 数据泥团")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E5%9F%BA%E6%9C%AC%E7%B1%BB%E5%9E%8B%E5%81%8F%E6%89%A7"}},[a._v("9. 基本类型偏执")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-switch-%E6%83%8A%E6%82%9A%E7%8E%B0%E8%BA%AB"}},[a._v("10. switch 惊悚现身")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-%E5%B9%B3%E8%A1%8C%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB"}},[a._v("11. 平行继承体系")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#12-%E5%86%97%E4%BD%99%E7%B1%BB"}},[a._v("12. 冗余类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#13-%E5%A4%B8%E5%A4%B8%E5%85%B6%E8%B0%88%E6%9C%AA%E6%9D%A5%E6%80%A7"}},[a._v("13. 夸夸其谈未来性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#14-%E4%BB%A4%E4%BA%BA%E8%BF%B7%E6%83%91%E7%9A%84%E6%9A%82%E6%97%B6%E5%AD%97%E6%AE%B5"}},[a._v("14. 令人迷惑的暂时字段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#15-%E8%BF%87%E5%BA%A6%E8%80%A6%E5%90%88%E7%9A%84%E6%B6%88%E6%81%AF%E9%93%BE"}},[a._v("15. 过度耦合的消息链")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#16-%E4%B8%AD%E9%97%B4%E4%BA%BA"}},[a._v("16. 中间人")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#17-%E7%8B%8E%E6%98%B5%E5%85%B3%E7%B3%BB"}},[a._v("17. 狎昵关系")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#18-%E5%BC%82%E6%9B%B2%E5%90%8C%E5%B7%A5%E7%9A%84%E7%B1%BB"}},[a._v("18. 异曲同工的类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#19-%E4%B8%8D%E5%AE%8C%E7%BE%8E%E7%9A%84%E7%B1%BB%E5%BA%93"}},[a._v("19. 不完美的类库")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#20-%E5%B9%BC%E7%A8%9A%E7%9A%84%E6%95%B0%E6%8D%AE%E7%B1%BB"}},[a._v("20. 幼稚的数据类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#21-%E8%A2%AB%E6%8B%92%E7%BB%9D%E7%9A%84%E9%A6%88%E8%B5%A0"}},[a._v("21. 被拒绝的馈赠")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#22-%E8%BF%87%E5%A4%9A%E7%9A%84%E6%B3%A8%E9%87%8A"}},[a._v("22. 过多的注释")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%9B%9B%E6%9E%84%E7%AD%91%E6%B5%8B%E8%AF%95%E4%BD%93%E7%B3%BB"}},[a._v("（四）、构筑测试体系")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%94%E9%87%8D%E6%96%B0%E7%BB%84%E7%BB%87%E5%87%BD%E6%95%B0"}},[a._v("（五）、重新组织函数")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%8F%90%E7%82%BC%E5%87%BD%E6%95%B0"}},[a._v("1. 提炼函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%86%85%E8%81%94%E5%87%BD%E6%95%B0"}},[a._v("2. 内联函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%86%85%E8%81%94%E4%B8%B4%E6%97%B6%E5%8F%98%E9%87%8F"}},[a._v("3. 内联临时变量")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E4%BB%A5%E6%9F%A5%E8%AF%A2%E5%8F%96%E4%BB%A3%E4%B8%B4%E6%97%B6%E5%8F%98%E9%87%8F"}},[a._v("4. 以查询取代临时变量")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%BC%95%E8%B5%B7%E8%A7%A3%E9%87%8A%E5%8F%98%E9%87%8F"}},[a._v("5. 引起解释变量")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%88%86%E8%A7%A3%E4%B8%B4%E6%97%B6%E5%8F%98%E9%87%8F"}},[a._v("6. 分解临时变量")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E7%A7%BB%E9%99%A4%E5%AF%B9%E5%8F%82%E6%95%B0%E7%9A%84%E8%B5%8B%E5%80%BC"}},[a._v("7. 移除对参数的赋值")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E4%BB%A5%E5%87%BD%E6%95%B0%E5%AF%B9%E8%B1%A1%E5%8F%96%E4%BB%A3%E5%87%BD%E6%95%B0"}},[a._v("8. 以函数对象取代函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E6%9B%BF%E6%8D%A2%E7%AE%97%E6%B3%95"}},[a._v("9. 替换算法")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AD%E5%9C%A8%E5%AF%B9%E8%B1%A1%E4%B9%8B%E9%97%B4%E6%90%AC%E7%A7%BB%E7%89%B9%E6%80%A7"}},[a._v("（六）、在对象之间搬移特性")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E6%90%AC%E7%A7%BB%E5%87%BD%E6%95%B0"}},[a._v("1. 搬移函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%90%AC%E7%A7%BB%E5%AD%97%E6%AE%B5"}},[a._v("2. 搬移字段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%8F%90%E7%82%BC%E7%B1%BB"}},[a._v("3. 提炼类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%B0%86%E7%B1%BB%E5%86%85%E8%81%94%E5%8C%96"}},[a._v("4. 将类内联化")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E9%9A%90%E8%97%8F%E5%A7%94%E6%89%98%E5%85%B3%E7%B3%BB"}},[a._v("5. 隐藏委托关系")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E7%A7%BB%E9%99%A4%E4%B8%AD%E9%97%B4%E4%BA%BA"}},[a._v("6. 移除中间人")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E5%BC%95%E5%85%A5%E5%A4%96%E5%8A%A0%E5%87%BD%E6%95%B0"}},[a._v("7. 引入外加函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E5%BC%95%E5%85%A5%E6%9C%AC%E5%9C%B0%E6%89%A9%E5%B1%95"}},[a._v("8. 引入本地扩展")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B8%83%E9%87%8D%E6%96%B0%E7%BB%84%E7%BB%87%E6%95%B0%E6%8D%AE"}},[a._v("（七）、重新组织数据")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E8%87%AA%E5%B0%81%E8%A3%85%E5%AD%97%E6%AE%B5"}},[a._v("1. 自封装字段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E4%BB%A5%E5%AF%B9%E8%B1%A1%E5%8F%96%E4%BB%A3%E6%95%B0%E6%8D%AE%E5%80%BC"}},[a._v("2. 以对象取代数据值")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%B0%86%E5%80%BC%E5%AF%B9%E8%B1%A1%E6%94%B9%E6%88%90%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1"}},[a._v("3. 将值对象改成引用对象")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%B0%86%E5%BC%95%E7%94%A8%E5%AF%B9%E8%B1%A1%E6%94%B9%E4%B8%BA%E5%80%BC%E5%AF%B9%E8%B1%A1"}},[a._v("4. 将引用对象改为值对象")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E4%BB%A5%E5%AF%B9%E8%B1%A1%E5%8F%96%E4%BB%A3%E6%95%B0%E7%BB%84"}},[a._v("5. 以对象取代数组")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E8%B5%8B%E5%80%BC%E8%A2%AB%E7%9B%91%E8%A7%86%E6%95%B0%E6%8D%AE"}},[a._v("6. 赋值被监视数据")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E5%B0%86%E5%8D%95%E5%90%91%E5%85%B3%E8%81%94%E6%94%B9%E4%B8%BA%E5%8F%8C%E5%90%91%E5%85%B3%E8%81%94"}},[a._v("7. 将单向关联改为双向关联")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E5%B0%86%E5%8F%8C%E5%90%91%E5%85%B3%E8%81%94%E6%94%B9%E4%B8%BA%E5%8D%95%E5%90%91%E5%85%B3%E8%81%94"}},[a._v("8. 将双向关联改为单向关联")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E4%BB%A5%E5%AD%97%E9%9D%A2%E5%B8%B8%E9%87%8F%E5%8F%96%E4%BB%A3%E9%AD%94%E6%B3%95%E6%95%B0"}},[a._v("9. 以字面常量取代魔法数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-%E5%B0%81%E8%A3%85%E5%AD%97%E6%AE%B5"}},[a._v("10. 封装字段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-%E5%B0%81%E8%A3%85%E9%9B%86%E5%90%88"}},[a._v("11. 封装集合")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#12-%E4%BB%A5%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%8F%96%E4%BB%A3%E8%AE%B0%E5%BD%95"}},[a._v("12. 以数据类取代记录")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#13-%E4%BB%A5%E7%B1%BB%E5%8F%96%E4%BB%A3%E7%B1%BB%E5%9E%8B%E7%A0%81"}},[a._v("13. 以类取代类型码")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#14-%E4%BB%A5%E5%AD%90%E7%B1%BB%E5%8F%96%E4%BB%A3%E7%B1%BB%E5%9E%8B%E7%A0%81"}},[a._v("14. 以子类取代类型码")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#15-%E4%BB%A5-statestrategy-%E5%8F%96%E4%BB%A3%E7%B1%BB%E5%9E%8B%E7%A0%81"}},[a._v("15. 以 State/Strategy 取代类型码")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#16-%E4%BB%A5%E5%AD%97%E6%AE%B5%E5%8F%96%E4%BB%A3%E5%AD%90%E7%B1%BB"}},[a._v("16. 以字段取代子类")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%85%AB%E7%AE%80%E5%8C%96%E6%9D%A1%E4%BB%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[a._v("（八）、简化条件表达式")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%88%86%E8%A7%A3%E6%9D%A1%E4%BB%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[a._v("1. 分解条件表达式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%90%88%E5%B9%B6%E6%9D%A1%E4%BB%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[a._v("2. 合并条件表达式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%90%88%E5%B9%B6%E9%87%8D%E5%A4%8D%E7%9A%84%E6%9D%A1%E4%BB%B6%E7%89%87%E6%AE%B5"}},[a._v("3. 合并重复的条件片段")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E7%A7%BB%E9%99%A4%E6%8E%A7%E5%88%B6%E6%A0%87%E8%AE%B0"}},[a._v("4. 移除控制标记")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E4%BB%A5%E5%8D%AB%E8%AF%AD%E5%8F%A5%E5%8F%96%E4%BB%A3%E5%B5%8C%E5%A5%97%E6%9D%A1%E4%BB%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[a._v("5. 以卫语句取代嵌套条件表达式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E4%BB%A5%E5%A4%9A%E6%80%81%E5%8F%96%E4%BB%A3%E6%9D%A1%E4%BB%B6%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[a._v("6. 以多态取代条件表达式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E5%BC%95%E5%85%A5-null-%E5%AF%B9%E8%B1%A1"}},[a._v("7. 引入 Null 对象")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E5%BC%95%E5%85%A5%E6%96%AD%E8%A8%80"}},[a._v("8. 引入断言")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%B9%9D%E7%AE%80%E5%8C%96%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8"}},[a._v("（九）、简化函数调用")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%87%BD%E6%95%B0%E6%94%B9%E5%90%8D"}},[a._v("1. 函数改名")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E6%B7%BB%E5%8A%A0%E5%8F%82%E6%95%B0"}},[a._v("2. 添加参数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E7%A7%BB%E9%99%A4%E5%8F%82%E6%95%B0"}},[a._v("3. 移除参数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%B0%86%E6%9F%A5%E8%AF%A2%E5%87%BD%E6%95%B0%E5%92%8C%E4%BF%AE%E6%94%B9%E5%87%BD%E6%95%B0%E5%88%86%E7%A6%BB"}},[a._v("4. 将查询函数和修改函数分离")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E4%BB%A4%E5%87%BD%E6%95%B0%E6%90%BA%E5%B8%A6%E5%8F%82%E6%95%B0"}},[a._v("5. 令函数携带参数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E4%BB%A5%E6%98%8E%E7%A1%AE%E5%87%BD%E6%95%B0%E5%8F%96%E4%BB%A3%E5%8F%82%E6%95%B0"}},[a._v("6. 以明确函数取代参数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E4%BF%9D%E6%8C%81%E5%AF%B9%E8%B1%A1%E5%AE%8C%E6%95%B4"}},[a._v("7. 保持对象完整")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E4%BB%A5%E5%87%BD%E6%95%B0%E5%8F%96%E4%BB%A3%E5%8F%82%E6%95%B0"}},[a._v("8. 以函数取代参数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E5%BC%95%E5%85%A5%E5%8F%82%E6%95%B0%E5%AF%B9%E8%B1%A1"}},[a._v("9. 引入参数对象")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-%E7%A7%BB%E9%99%A4%E8%AE%BE%E5%80%BC%E5%87%BD%E6%95%B0"}},[a._v("10. 移除设值函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-%E9%9A%90%E8%97%8F%E5%87%BD%E6%95%B0"}},[a._v("11. 隐藏函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#12-%E4%BB%A5%E5%B7%A5%E5%8E%82%E5%87%BD%E6%95%B0%E5%8F%96%E4%BB%A3%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0"}},[a._v("12. 以工厂函数取代构造函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#13-%E5%B0%81%E8%A3%85%E5%90%91%E4%B8%8B%E8%BD%AC%E5%9E%8B"}},[a._v("13. 封装向下转型")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#14-%E4%BB%A5%E5%BC%82%E5%B8%B8%E5%8F%96%E4%BB%A3%E9%94%99%E8%AF%AF%E7%A0%81"}},[a._v("14. 以异常取代错误码")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#15-%E4%BB%A5%E6%B5%8B%E8%AF%95%E5%8F%96%E4%BB%A3%E5%BC%82%E5%B8%B8"}},[a._v("15. 以测试取代异常")])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E5%8D%81%E5%A4%84%E7%90%86%E6%A6%82%E6%8B%AC%E5%85%B3%E7%B3%BB"}},[a._v("（十）、处理概括关系")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%AD%97%E6%AE%B5%E4%B8%8A%E7%A7%BB"}},[a._v("1. 字段上移")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E5%87%BD%E6%95%B0%E4%B8%8A%E7%A7%BB"}},[a._v("2. 函数上移")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0%E6%9C%AC%E4%BD%93%E4%B8%8A%E7%A7%BB"}},[a._v("3. 构造函数本体上移")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E5%87%BD%E6%95%B0%E4%B8%8B%E7%A7%BB"}},[a._v("4. 函数下移")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E5%AD%97%E6%AE%B5%E4%B8%8B%E7%A7%BB"}},[a._v("5. 字段下移")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E6%8F%90%E7%82%BC%E5%AD%90%E7%B1%BB"}},[a._v("6. 提炼子类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E6%8F%90%E7%82%BC%E8%B6%85%E7%B1%BB"}},[a._v("7. 提炼超类")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E6%8F%90%E7%82%BC%E6%8E%A5%E5%8F%A3"}},[a._v("8. 提炼接口")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E6%8A%98%E5%8F%A0%E7%BB%A7%E6%89%BF%E4%BD%93%E7%B3%BB"}},[a._v("9. 折叠继承体系")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-%E5%A1%91%E9%80%A0%E6%A8%A1%E6%9D%BF%E5%87%BD%E6%95%B0"}},[a._v("10. 塑造模板函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-%E4%BB%A5%E5%A7%94%E6%89%98%E5%8F%96%E4%BB%A3%E7%BB%A7%E6%89%BF"}},[a._v("11. 以委托取代继承")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#12-%E4%BB%A5%E7%BB%A7%E6%89%BF%E5%8F%96%E4%BB%A3%E5%A7%94%E6%89%98"}},[a._v("12. 以继承取代委托")])])])])])]),a._v(" "),r("li",[r("a",{attrs:{href:"#%E4%BA%8C%E5%8D%81%E4%B8%83%E4%BB%A3%E7%A0%81%E5%8F%AF%E8%AF%BB%E6%80%A7"}},[a._v("二十七、代码可读性")]),a._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#1-%E5%8F%AF%E8%AF%BB%E6%80%A7%E7%9A%84%E9%87%8D%E8%A6%81%E6%80%A7"}},[a._v("1. 可读性的重要性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#2-%E7%94%A8%E5%90%8D%E5%AD%97%E8%A1%A8%E8%BE%BE%E4%BB%A3%E7%A0%81%E5%90%AB%E4%B9%89"}},[a._v("2. 用名字表达代码含义")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#3-%E5%90%8D%E5%AD%97%E4%B8%8D%E8%83%BD%E5%B8%A6%E6%9D%A5%E6%AD%A7%E4%B9%89"}},[a._v("3. 名字不能带来歧义")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#4-%E8%89%AF%E5%A5%BD%E7%9A%84%E4%BB%A3%E7%A0%81%E9%A3%8E%E6%A0%BC"}},[a._v("4. 良好的代码风格")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#5-%E7%BC%96%E5%86%99%E6%B3%A8%E9%87%8A"}},[a._v("5. 编写注释")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#6-%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99%E6%B3%A8%E9%87%8A"}},[a._v("6. 如何编写注释")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#7-%E6%8F%90%E9%AB%98%E6%8E%A7%E5%88%B6%E6%B5%81%E7%9A%84%E5%8F%AF%E8%AF%BB%E6%80%A7"}},[a._v("7. 提高控制流的可读性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#8-%E6%8B%86%E5%88%86%E9%95%BF%E8%A1%A8%E8%BE%BE%E5%BC%8F"}},[a._v("8. 拆分长表达式")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#9-%E5%8F%98%E9%87%8F%E4%B8%8E%E5%8F%AF%E8%AF%BB%E6%80%A7"}},[a._v("9. 变量与可读性")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#10-%E6%8A%BD%E5%8F%96%E5%87%BD%E6%95%B0"}},[a._v("10. 抽取函数")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#11-%E4%B8%80%E6%AC%A1%E5%8F%AA%E5%81%9A%E4%B8%80%E4%BB%B6%E4%BA%8B"}},[a._v("11. 一次只做一件事")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#12-%E7%94%A8%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E8%A1%A8%E8%BF%B0%E4%BB%A3%E7%A0%81"}},[a._v("12. 用自然语言表述代码")])]),a._v(" "),r("li",[r("a",{attrs:{href:"#13-%E5%87%8F%E5%B0%91%E4%BB%A3%E7%A0%81%E9%87%8F"}},[a._v("13. 减少代码量")])])])])]),a._v(" "),r("hr"),a._v(" "),r("h1",{attrs:{id:"一、校招真题题解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、校招真题题解"}},[a._v("#")]),a._v(" 一、校招真题题解")]),a._v(" "),r("h2",{attrs:{id:"前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[a._v("#")]),a._v(" 前言")]),a._v(" "),r("p",[a._v("省略的代码：")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("import java.util.*;\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br")])]),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("public class Solution {\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br")])]),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("public class Main {\n    public static void main(String[] args) {\n        Scanner in = new Scanner(System.in);\n        while (in.hasNext()) {\n        }\n    }\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br")])]),r("h2",{attrs:{id:"小米-小米git"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小米-小米git"}},[a._v("#")]),a._v(" 小米-小米Git")]),a._v(" "),r("ul",[r("li",[a._v("重建多叉树")]),a._v(" "),r("li",[a._v("使用 LCA")])]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("private class TreeNode {\n    int id;\n    List<TreeNode> childs = new ArrayList<>();\n    TreeNode(int id) {\n        this.id = id;\n    }\n}\npublic int getSplitNode(String[] matrix, int indexA, int indexB) {\n    int n = matrix.length;\n    boolean[][] linked = new boolean[n][n]; // 重建邻接矩阵\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < n; j++) {\n            linked[i][j] = matrix[i].charAt(j) == '1';\n        }\n    }\n    TreeNode tree = constructTree(linked, 0);\n    TreeNode ancestor = LCA(tree, new TreeNode(indexA), new TreeNode(indexB));\n    return ancestor.id;\n}\nprivate TreeNode constructTree(boolean[][] linked, int root) {\n    TreeNode tree = new TreeNode(root);\n    for (int i = 0; i < linked[root].length; i++) {\n        if (linked[root][i]) {\n            linked[i][root] = false; //  因为题目给的邻接矩阵是双向的，在这里需要把它转为单向的\n            tree.childs.add(constructTree(links, i));\n        }\n    }\n    return tree;\n}\nprivate TreeNode LCA(TreeNode root, TreeNode p, TreeNode q) {\n    if (root == null || root.id == p.id || root.id == q.id) return root;\n    TreeNode ancestor = null;\n    int cnt = 0;\n    for (int i = 0; i < root.childs.size(); i++) {\n        TreeNode tmp = LCA(root.childs.get(i), p, q);\n        if (tmp != null) {\n            ancestor = tmp;\n            cnt++;\n        }\n    }\n    return cnt == 2 ? root : ancestor;\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br"),r("span",{staticClass:"line-number"},[a._v("23")]),r("br"),r("span",{staticClass:"line-number"},[a._v("24")]),r("br"),r("span",{staticClass:"line-number"},[a._v("25")]),r("br"),r("span",{staticClass:"line-number"},[a._v("26")]),r("br"),r("span",{staticClass:"line-number"},[a._v("27")]),r("br"),r("span",{staticClass:"line-number"},[a._v("28")]),r("br"),r("span",{staticClass:"line-number"},[a._v("29")]),r("br"),r("span",{staticClass:"line-number"},[a._v("30")]),r("br"),r("span",{staticClass:"line-number"},[a._v("31")]),r("br"),r("span",{staticClass:"line-number"},[a._v("32")]),r("br"),r("span",{staticClass:"line-number"},[a._v("33")]),r("br"),r("span",{staticClass:"line-number"},[a._v("34")]),r("br"),r("span",{staticClass:"line-number"},[a._v("35")]),r("br"),r("span",{staticClass:"line-number"},[a._v("36")]),r("br"),r("span",{staticClass:"line-number"},[a._v("37")]),r("br"),r("span",{staticClass:"line-number"},[a._v("38")]),r("br"),r("span",{staticClass:"line-number"},[a._v("39")]),r("br"),r("span",{staticClass:"line-number"},[a._v("40")]),r("br"),r("span",{staticClass:"line-number"},[a._v("41")]),r("br"),r("span",{staticClass:"line-number"},[a._v("42")]),r("br")])]),r("h2",{attrs:{id:"小米-懂二进制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小米-懂二进制"}},[a._v("#")]),a._v(" 小米-懂二进制")]),a._v(" "),r("p",[a._v("对两个数进行异或，结果的二进制表示为 1 的那一位就是两个数不同的位。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("public int countBitDiff(int m, int n) {\n    return Integer.bitCount(m ^ n);\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br")])]),r("h2",{attrs:{id:"小米-中国牛市"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#小米-中国牛市"}},[a._v("#")]),a._v(" 小米-中国牛市")]),a._v(" "),r("p",[a._v("背包问题，可以设一个大小为 2 的背包。")]),a._v(" "),r("p",[a._v("状态转移方程如下：")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("dp[i, j] = max(dp[i, j-1], prices[j] - prices[jj] + dp[i-1, jj]) { jj in range of [0, j-1] } = max(dp[i, j-1], prices[j] + max(dp[i-1, jj] - prices[jj]))\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br")])]),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("public int calculateMax(int[] prices) {\n    int n = prices.length;\n    int[][] dp = new int[3][n];\n    for (int i = 1; i <= 2; i++) {\n        int localMax = dp[i - 1][0] - prices[0];\n        for (int j = 1; j < n; j++) {\n            dp[i][j] = Math.max(dp[i][j - 1], prices[j] + localMax);\n            localMax = Math.max(localMax, dp[i - 1][j] - prices[j]);\n        }\n    }\n    return dp[2][n - 1];\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br")])]),r("h2",{attrs:{id:"微软-lucky-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#微软-lucky-string"}},[a._v("#")]),a._v(" 微软-LUCKY STRING")]),a._v(" "),r("ul",[r("li",[a._v("斐波那契数列可以预计算；")]),a._v(" "),r("li",[a._v("从头到尾遍历字符串的过程，每一轮循环都使用一个 Set 来保存从 i 到 j 出现的字符，并且 Set 保证了字符都不同，因此 Set 的大小就是不同字符的个数。")])]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("Set<Integer> fibSet = new HashSet<>(Arrays.asList(1, 2, 3, 5, 8, 13, 21, 34, 55, 89));\nScanner in = new Scanner(System.in);\nString str = in.nextLine();\nint n = str.length();\nSet<String> ret = new HashSet<>();\nfor (int i = 0; i < n; i++) {\n    Set<Character> set = new HashSet<>();\n    for (int j = i; j < n; j++) {\n        set.add(str.charAt(j));\n        int cnt = set.size();\n        if (fibSet.contains(cnt)) {\n            ret.add(str.substring(i, j + 1));\n        }\n    }\n}\nString[] arr = ret.toArray(new String[ret.size()]);\nArrays.sort(arr);\nfor (String s : arr) {\n    System.out.println(s);\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br")])]),r("h2",{attrs:{id:"微软-numeric-keypad"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#微软-numeric-keypad"}},[a._v("#")]),a._v(" 微软-Numeric Keypad")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("private static int[][] canReach = {\n        {1, 0, 0, 0, 0, 0, 0, 0, 0, 0}, // 0\n        {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}, // 1\n        {1, 0, 1, 1, 0, 1, 1, 0, 1, 1}, // 2\n        {0, 0, 0, 1, 0, 0, 1, 0, 0, 1}, // 3\n        {1, 0, 0, 0, 1, 1, 1, 1, 1, 1}, // 4\n        {1, 0, 0, 0, 0, 1, 1, 0, 1, 1}, // 5\n        {0, 0, 0, 0, 0, 0, 1, 0, 0, 1}, // 6\n        {1, 0, 0, 0, 0, 0, 0, 1, 1, 1}, // 7\n        {1, 0, 0, 0, 0, 0, 0, 0, 1, 1}, // 8\n        {0, 0, 0, 0, 0, 0, 0, 0, 0, 1}  // 9\n};\nprivate static boolean isLegal(char[] chars, int idx) {\n    if (idx >= chars.length || idx < 0) return true;\n    int cur = chars[idx] - '0';\n    int next = chars[idx + 1] - '0';\n    return canReach[cur][next] == 1;\n}\npublic static void main(String[] args) {\n    Scanner in = new Scanner(System.in);\n    int T = Integer.valueOf(in.nextLine());\n    for (int i = 0; i < T; i++) {\n        String line = in.nextLine();\n        char[] chars = line.toCharArray();\n        for (int j = 0; j < chars.length - 1; j++) {\n            while (!isLegal(chars, j)) {\n                if (--chars[j + 1] < '0') {\n                    chars[j--]--;\n                }\n                for (int k = j + 2; k < chars.length; k++) {\n                    chars[k] = '9';\n                }\n            }\n        }\n        System.out.println(new String(chars));\n    }\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br"),r("span",{staticClass:"line-number"},[a._v("23")]),r("br"),r("span",{staticClass:"line-number"},[a._v("24")]),r("br"),r("span",{staticClass:"line-number"},[a._v("25")]),r("br"),r("span",{staticClass:"line-number"},[a._v("26")]),r("br"),r("span",{staticClass:"line-number"},[a._v("27")]),r("br"),r("span",{staticClass:"line-number"},[a._v("28")]),r("br"),r("span",{staticClass:"line-number"},[a._v("29")]),r("br"),r("span",{staticClass:"line-number"},[a._v("30")]),r("br"),r("span",{staticClass:"line-number"},[a._v("31")]),r("br"),r("span",{staticClass:"line-number"},[a._v("32")]),r("br"),r("span",{staticClass:"line-number"},[a._v("33")]),r("br"),r("span",{staticClass:"line-number"},[a._v("34")]),r("br"),r("span",{staticClass:"line-number"},[a._v("35")]),r("br"),r("span",{staticClass:"line-number"},[a._v("36")]),r("br"),r("span",{staticClass:"line-number"},[a._v("37")]),r("br")])]),r("h2",{attrs:{id:"微软-spring-outing"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#微软-spring-outing"}},[a._v("#")]),a._v(" 微软-Spring Outing")]),a._v(" "),r("p",[a._v("下面以 N = 3，K = 4 来进行讨论。")]),a._v(" "),r("p",[a._v("初始时，令第 0 个地方成为待定地点，也就是呆在家里。")]),a._v(" "),r("p",[a._v("从第 4 个地点开始投票，每个人只需要比较第 4 个地方和第 0 个地方的优先级，里，如果超过半数的人选择了第 4 个地方，那么更新第 4 个地方成为待定地点。")]),a._v(" "),r("p",[a._v("从后往前不断重复以上步骤，不断更新待定地点，直到所有地方都已经投票。")]),a._v(" "),r("p",[a._v("上面的讨论中，先令第 0 个地点成为待定地点，是因为这样的话第 4 个地点就只需要和这个地点进行比较，而不用考虑其它情况。如果最开始先令第 1 个地点成为待定地点，那么在对第 2 个地点进行投票时，每个人不仅要考虑第 2 个地点与第 1 个地点的优先级，也要考虑与其后投票地点的优先级。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('int N = in.nextInt();\nint K = in.nextInt();\nint[][] votes = new int[N][K + 1];\nfor (int i = 0; i < N; i++) {\n    for (int j = 0; j < K + 1; j++) {\n        int place = in.nextInt();\n        votes[i][place] = j;\n    }\n}\nint ret = 0;\nfor (int place = K; place > 0; place--) {\n    int cnt = 0;\n    for (int i = 0; i < N; i++) {\n        if (votes[i][place] < votes[i][ret]) {\n            cnt++;\n        }\n    }\n    if (cnt > N / 2) {\n        ret = place;\n    }\n}\nSystem.out.println(ret == 0 ? "otaku" : ret);\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br")])]),r("h2",{attrs:{id:"华为-最高分是多少"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#华为-最高分是多少"}},[a._v("#")]),a._v(" 华为-最高分是多少")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('int N = in.nextInt();\nint M = in.nextInt();\nint[] scores = new int[N];\nfor (int i = 0; i < N; i++) {\n    scores[i] = in.nextInt();\n}\nfor (int i = 0; i < M; i++) {\n    String str = in.next();\n    if (str.equals("U")) {\n        int id = in.nextInt() - 1;\n        int newScore = in.nextInt();\n        scores[id] = newScore;\n    } else {\n        int idBegin = in.nextInt() - 1;\n        int idEnd = in.nextInt() - 1;\n        int ret = 0;\n        if (idBegin > idEnd) {\n            int t = idBegin;\n            idBegin = idEnd;\n            idEnd = t;\n        }\n        for (int j = idBegin; j <= idEnd; j++) {\n            ret = Math.max(ret, scores[j]);\n        }\n        System.out.println(ret);\n    }\n}\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br"),r("span",{staticClass:"line-number"},[a._v("23")]),r("br"),r("span",{staticClass:"line-number"},[a._v("24")]),r("br"),r("span",{staticClass:"line-number"},[a._v("25")]),r("br"),r("span",{staticClass:"line-number"},[a._v("26")]),r("br"),r("span",{staticClass:"line-number"},[a._v("27")]),r("br")])]),r("h2",{attrs:{id:"华为-简单错误记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#华为-简单错误记录"}},[a._v("#")]),a._v(" 华为-简单错误记录")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('HashMap<String, Integer> map = new LinkedHashMap<>();\nwhile (in.hasNextLine()) {\n    String s = in.nextLine();\n    String key = s.substring(s.lastIndexOf(\'\\\\\') + 1);\n    map.put(key, map.containsKey(key) ? map.get(key) + 1 : 1);\n}\nList<Map.Entry<String, Integer>> list = new LinkedList<>(map.entrySet());\nCollections.sort(list, (o1, o2) -> o2.getValue() - o1.getValue());\nfor (int i = 0; i < 8 && i < list.size(); i++) {\n    String[] token = list.get(i).getKey().split(" ");\n    String filename = token[0];\n    String line = token[1];\n    if (filename.length() > 16) filename = filename.substring(filename.length() - 16);\n    System.out.println(filename + " " + line + " " + list.get(i).getValue());\n}\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br")])]),r("h2",{attrs:{id:"华为-扑克牌大小"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#华为-扑克牌大小"}},[a._v("#")]),a._v(" 华为-扑克牌大小")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('public class Main {\n    private Map<String, Integer> map = new HashMap<>();\n    public Main() {\n        map.put("3", 0);\n        map.put("4", 1);\n        map.put("5", 2);\n        map.put("6", 3);\n        map.put("7", 4);\n        map.put("8", 5);\n        map.put("9", 6);\n        map.put("10", 7);\n        map.put("J", 8);\n        map.put("Q", 9);\n        map.put("K", 10);\n        map.put("A", 11);\n        map.put("2", 12);\n        map.put("joker", 13);\n        map.put("JOKER ", 14);\n    }\n    private String play(String s1, String s2) {\n        String[] token1 = s1.split(" ");\n        String[] token2 = s2.split(" ");\n        CardType type1 = computeCardType(token1);\n        CardType type2 = computeCardType(token2);\n        if (type1 == CardType.DoubleJoker) return s1;\n        if (type2 == CardType.DoubleJoker) return s2;\n        if (type1 == CardType.Bomb && type2 != CardType.Bomb) return s1;\n        if (type2 == CardType.Bomb && type1 != CardType.Bomb) return s2;\n        if (type1 != type2 || token1.length != token2.length) return "ERROR";\n        for (int i = 0; i < token1.length; i++) {\n            int val1 = map.get(token1[i]);\n            int val2 = map.get(token2[i]);\n            if (val1 != val2) return val1 > val2 ? s1 : s2;\n        }\n        return "ERROR";\n    }\n    private CardType computeCardType(String[] token) {\n        boolean hasjoker = false, hasJOKER = false;\n        for (int i = 0; i < token.length; i++) {\n            if (token[i].equals("joker")) hasjoker = true;\n            else if (token[i].equals("JOKER")) hasJOKER = true;\n        }\n        if (hasjoker && hasJOKER) return CardType.DoubleJoker;\n        int maxContinueLen = 1;\n        int curContinueLen = 1;\n        String curValue = token[0];\n        for (int i = 1; i < token.length; i++) {\n            if (token[i].equals(curValue)) curContinueLen++;\n            else {\n                curContinueLen = 1;\n                curValue = token[i];\n            }\n            maxContinueLen = Math.max(maxContinueLen, curContinueLen);\n        }\n        if (maxContinueLen == 4) return CardType.Bomb;\n        if (maxContinueLen == 3) return CardType.Triple;\n        if (maxContinueLen == 2) return CardType.Double;\n        boolean isStraight = true;\n        for (int i = 1; i < token.length; i++) {\n            if (map.get(token[i]) - map.get(token[i - 1]) != 1) {\n                isStraight = false;\n                break;\n            }\n        }\n        if (isStraight && token.length == 5) return CardType.Straight;\n        return CardType.Sigal;\n    }\n    private enum CardType {\n        DoubleJoker, Bomb, Sigal, Double, Triple, Straight;\n    }\n    public static void main(String[] args) {\n        Main main = new Main();\n        Scanner in = new Scanner(System.in);\n        while (in.hasNextLine()) {\n            String s = in.nextLine();\n            String[] token = s.split("-");\n            System.out.println(main.play(token[0], token[1]));\n        }\n    }\n}\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br"),r("span",{staticClass:"line-number"},[a._v("23")]),r("br"),r("span",{staticClass:"line-number"},[a._v("24")]),r("br"),r("span",{staticClass:"line-number"},[a._v("25")]),r("br"),r("span",{staticClass:"line-number"},[a._v("26")]),r("br"),r("span",{staticClass:"line-number"},[a._v("27")]),r("br"),r("span",{staticClass:"line-number"},[a._v("28")]),r("br"),r("span",{staticClass:"line-number"},[a._v("29")]),r("br"),r("span",{staticClass:"line-number"},[a._v("30")]),r("br"),r("span",{staticClass:"line-number"},[a._v("31")]),r("br"),r("span",{staticClass:"line-number"},[a._v("32")]),r("br"),r("span",{staticClass:"line-number"},[a._v("33")]),r("br"),r("span",{staticClass:"line-number"},[a._v("34")]),r("br"),r("span",{staticClass:"line-number"},[a._v("35")]),r("br"),r("span",{staticClass:"line-number"},[a._v("36")]),r("br"),r("span",{staticClass:"line-number"},[a._v("37")]),r("br"),r("span",{staticClass:"line-number"},[a._v("38")]),r("br"),r("span",{staticClass:"line-number"},[a._v("39")]),r("br"),r("span",{staticClass:"line-number"},[a._v("40")]),r("br"),r("span",{staticClass:"line-number"},[a._v("41")]),r("br"),r("span",{staticClass:"line-number"},[a._v("42")]),r("br"),r("span",{staticClass:"line-number"},[a._v("43")]),r("br"),r("span",{staticClass:"line-number"},[a._v("44")]),r("br"),r("span",{staticClass:"line-number"},[a._v("45")]),r("br"),r("span",{staticClass:"line-number"},[a._v("46")]),r("br"),r("span",{staticClass:"line-number"},[a._v("47")]),r("br"),r("span",{staticClass:"line-number"},[a._v("48")]),r("br"),r("span",{staticClass:"line-number"},[a._v("49")]),r("br"),r("span",{staticClass:"line-number"},[a._v("50")]),r("br"),r("span",{staticClass:"line-number"},[a._v("51")]),r("br"),r("span",{staticClass:"line-number"},[a._v("52")]),r("br"),r("span",{staticClass:"line-number"},[a._v("53")]),r("br"),r("span",{staticClass:"line-number"},[a._v("54")]),r("br"),r("span",{staticClass:"line-number"},[a._v("55")]),r("br"),r("span",{staticClass:"line-number"},[a._v("56")]),r("br"),r("span",{staticClass:"line-number"},[a._v("57")]),r("br"),r("span",{staticClass:"line-number"},[a._v("58")]),r("br"),r("span",{staticClass:"line-number"},[a._v("59")]),r("br"),r("span",{staticClass:"line-number"},[a._v("60")]),r("br"),r("span",{staticClass:"line-number"},[a._v("61")]),r("br"),r("span",{staticClass:"line-number"},[a._v("62")]),r("br"),r("span",{staticClass:"line-number"},[a._v("63")]),r("br"),r("span",{staticClass:"line-number"},[a._v("64")]),r("br"),r("span",{staticClass:"line-number"},[a._v("65")]),r("br"),r("span",{staticClass:"line-number"},[a._v("66")]),r("br"),r("span",{staticClass:"line-number"},[a._v("67")]),r("br"),r("span",{staticClass:"line-number"},[a._v("68")]),r("br"),r("span",{staticClass:"line-number"},[a._v("69")]),r("br"),r("span",{staticClass:"line-number"},[a._v("70")]),r("br"),r("span",{staticClass:"line-number"},[a._v("71")]),r("br"),r("span",{staticClass:"line-number"},[a._v("72")]),r("br"),r("span",{staticClass:"line-number"},[a._v("73")]),r("br"),r("span",{staticClass:"line-number"},[a._v("74")]),r("br"),r("span",{staticClass:"line-number"},[a._v("75")]),r("br"),r("span",{staticClass:"line-number"},[a._v("76")]),r("br"),r("span",{staticClass:"line-number"},[a._v("77")]),r("br"),r("span",{staticClass:"line-number"},[a._v("78")]),r("br"),r("span",{staticClass:"line-number"},[a._v("79")]),r("br"),r("span",{staticClass:"line-number"},[a._v("80")]),r("br")])]),r("h2",{attrs:{id:"去哪儿-二分查找"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#去哪儿-二分查找"}},[a._v("#")]),a._v(" 去哪儿-二分查找")]),a._v(" "),r("p",[a._v("对于有重复元素的有序数组，二分查找需要注意以下要点：")]),a._v(" "),r("ul",[r("li",[a._v("if (val <= A[m]) h = m;")]),a._v(" "),r("li",[a._v("因为 h 的赋值为 m 而不是 m - 1，因此 while 循环的条件也就为 l < h。（如果是 m - 1 循环条件为 l <= h）")])]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("public int getPos(int[] A, int n, int val) {\n    int l = 0, h = n - 1;\n    while (l < h) {\n        int m = l + (h - l) / 2;\n        if (val <= A[m]) h = m;\n        else l = m + 1;\n    }\n    return A[h] == val ? h : -1;\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br")])]),r("h2",{attrs:{id:"去哪儿-首个重复字符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#去哪儿-首个重复字符"}},[a._v("#")]),a._v(" 去哪儿-首个重复字符")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("public char findFirstRepeat(String A, int n) {\n    boolean[] hasAppear = new boolean[256];\n    for (int i = 0; i < n; i++) {\n        char c = A.charAt(i);\n        if(hasAppear[c]) return c;\n        hasAppear[c] = true;\n    }\n    return ' ';\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br")])]),r("h2",{attrs:{id:"去哪儿-寻找coder"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#去哪儿-寻找coder"}},[a._v("#")]),a._v(" 去哪儿-寻找Coder")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('public String[] findCoder(String[] A, int n) {\n    List<Pair<String, Integer>> list = new ArrayList<>();\n    for (String s : A) {\n        int cnt = 0;\n        String t = s.toLowerCase();\n        int idx = -1;\n        while (true) {\n            idx = t.indexOf("coder", idx + 1);\n            if (idx == -1) break;\n            cnt++;\n        }\n        if (cnt != 0) {\n            list.add(new Pair<>(s, cnt));\n        }\n    }\n    Collections.sort(list, (o1, o2) -> (o2.getValue() - o1.getValue()));\n    String[] ret = new String[list.size()];\n    for (int i = 0; i < list.size(); i++) {\n        ret[i] = list.get(i).getKey();\n    }\n    return ret;\n}\n// 牛客网无法导入 javafx.util.Pair，这里就自己实现一下 Pair 类\nprivate class Pair<T, K> {\n    T t;\n    K k;\n    Pair(T t, K k) {\n        this.t = t;\n        this.k = k;\n    }\n    T getKey() {\n        return t;\n    }\n    K getValue() {\n        return k;\n    }\n}\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br"),r("span",{staticClass:"line-number"},[a._v("23")]),r("br"),r("span",{staticClass:"line-number"},[a._v("24")]),r("br"),r("span",{staticClass:"line-number"},[a._v("25")]),r("br"),r("span",{staticClass:"line-number"},[a._v("26")]),r("br"),r("span",{staticClass:"line-number"},[a._v("27")]),r("br"),r("span",{staticClass:"line-number"},[a._v("28")]),r("br"),r("span",{staticClass:"line-number"},[a._v("29")]),r("br"),r("span",{staticClass:"line-number"},[a._v("30")]),r("br"),r("span",{staticClass:"line-number"},[a._v("31")]),r("br"),r("span",{staticClass:"line-number"},[a._v("32")]),r("br"),r("span",{staticClass:"line-number"},[a._v("33")]),r("br"),r("span",{staticClass:"line-number"},[a._v("34")]),r("br"),r("span",{staticClass:"line-number"},[a._v("35")]),r("br"),r("span",{staticClass:"line-number"},[a._v("36")]),r("br"),r("span",{staticClass:"line-number"},[a._v("37")]),r("br")])]),r("h2",{attrs:{id:"美团-最大差值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#美团-最大差值"}},[a._v("#")]),a._v(" 美团-最大差值")]),a._v(" "),r("p",[a._v("贪心策略。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("public int getDis(int[] A, int n) {\n    int max = 0;\n    int soFarMin = A[0];\n    for (int i = 1; i < n; i++) {\n        if(soFarMin > A[i]) soFarMin = A[i];\n        else max = Math.max(max, A[i]- soFarMin);\n    }\n    return max;\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br")])]),r("h2",{attrs:{id:"美团-棋子翻转"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#美团-棋子翻转"}},[a._v("#")]),a._v(" 美团-棋子翻转")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("public int[][] flipChess(int[][] A, int[][] f) {\n    int[][] direction = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};\n    for (int[] ff : f) {\n        for (int[] dd : direction) {\n            int r = ff[0] + dd[0] - 1, c = ff[1] + dd[1] - 1;\n            if(r < 0 || r > 3 || c < 0 || c > 3) continue;\n            A[r][c] ^= 1;\n        }\n    }\n    return A;\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br")])]),r("h2",{attrs:{id:"美团-拜访"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#美团-拜访"}},[a._v("#")]),a._v(" 美团-拜访")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('private Set<String> paths;\nprivate List<Integer> curPath;\npublic int countPath(int[][] map, int n, int m) {\n    paths = new HashSet<>();\n    curPath = new ArrayList<>();\n    for (int i = 0; i < n; i++) {\n        for (int j = 0; j < m; j++) {\n            if (map[i][j] == 1) {\n                map[i][j] = -1;\n                int[][] leftRightDirection = {{1, 0}, {-1, 0}};\n                int[][] topDownDirection = {{0, 1}, {0, -1}};\n                for (int[] lr : leftRightDirection) {\n                    for (int[] td : topDownDirection) {\n                        int[][] directions = {lr, td};\n                        backtracking(map, n, m, i, j, directions);\n                    }\n                }\n                return paths.size();\n            }\n        }\n    }\n    return 0;\n}\nprivate void backtracking(int[][] map, int n, int m, int r, int c, int[][] directions) {\n    if (map[r][c] == 2) {\n        String path = "";\n        for (int num : curPath) {\n            path += num;\n        }\n        paths.add(path);\n        return;\n    }\n    for (int i = 0; i < directions.length; i++) {\n        int nextR = r + directions[i][0];\n        int nextC = c + directions[i][1];\n        if (nextR < 0 || nextR >= n || nextC < 0 || nextC >= m || map[nextR][nextC] == -1) continue;\n        map[nextR][nextC] = map[nextR][nextC] == 2 ? 2 : -1;\n        curPath.add(nextR);\n        curPath.add(nextC);\n        backtracking(map, n, m, nextR, nextC, directions);\n        curPath.remove(curPath.size() - 1);\n        curPath.remove(curPath.size() - 1);\n        map[nextR][nextC] = map[nextR][nextC] == 2 ? 2 : 0;\n    }\n}\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br"),r("span",{staticClass:"line-number"},[a._v("23")]),r("br"),r("span",{staticClass:"line-number"},[a._v("24")]),r("br"),r("span",{staticClass:"line-number"},[a._v("25")]),r("br"),r("span",{staticClass:"line-number"},[a._v("26")]),r("br"),r("span",{staticClass:"line-number"},[a._v("27")]),r("br"),r("span",{staticClass:"line-number"},[a._v("28")]),r("br"),r("span",{staticClass:"line-number"},[a._v("29")]),r("br"),r("span",{staticClass:"line-number"},[a._v("30")]),r("br"),r("span",{staticClass:"line-number"},[a._v("31")]),r("br"),r("span",{staticClass:"line-number"},[a._v("32")]),r("br"),r("span",{staticClass:"line-number"},[a._v("33")]),r("br"),r("span",{staticClass:"line-number"},[a._v("34")]),r("br"),r("span",{staticClass:"line-number"},[a._v("35")]),r("br"),r("span",{staticClass:"line-number"},[a._v("36")]),r("br"),r("span",{staticClass:"line-number"},[a._v("37")]),r("br"),r("span",{staticClass:"line-number"},[a._v("38")]),r("br"),r("span",{staticClass:"line-number"},[a._v("39")]),r("br"),r("span",{staticClass:"line-number"},[a._v("40")]),r("br"),r("span",{staticClass:"line-number"},[a._v("41")]),r("br"),r("span",{staticClass:"line-number"},[a._v("42")]),r("br"),r("span",{staticClass:"line-number"},[a._v("43")]),r("br"),r("span",{staticClass:"line-number"},[a._v("44")]),r("br"),r("span",{staticClass:"line-number"},[a._v("45")]),r("br")])]),r("h2",{attrs:{id:"美团-直方图内最大矩形"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#美团-直方图内最大矩形"}},[a._v("#")]),a._v(" 美团-直方图内最大矩形")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("public int countArea(int[] A, int n) {\n    int max = 0;\n    for (int i = 0; i < n; i++) {\n        int min = A[i];\n        for (int j = i; j < n; j++) {\n            min = Math.min(min, A[j]);\n            max = Math.max(max, min * (j - i + 1));\n        }\n    }\n    return max;\n}\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br")])]),r("h2",{attrs:{id:"美团-字符串计数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#美团-字符串计数"}},[a._v("#")]),a._v(" 美团-字符串计数")]),a._v(" "),r("p",[a._v("字符串都是小写字符，可以把字符串当成是 26 进制。但是字典序的比较和普通的整数比较不同，是从左往右进行比较，例如 “ac” 和 “abc”，字典序的比较结果为 “ac” > “abc”，如果按照整数方法比较，因为 “abc” 是三位数，显然更大。")]),a._v(" "),r("p",[a._v("由于两个字符串的长度可能不想等，在 s1 空白部分和 s2 对应部分进行比较时，应该把 s1 的空白部分看成是 ‘a’ 字符进行填充的。")]),a._v(" "),r("p",[a._v("还有一点要注意的是，s1 到 s2 长度为 leni 的字符串个数只比较前面 i 个字符。例如 ‘aaa’ 和 ‘bbb’ ，长度为 2 的个数为 ‘aa’ 到 ‘bb’ 的字符串个数，不需要考虑后面部分的字符。")]),a._v(" "),r("p",[a._v("在统计个数时，从 len1 开始一直遍历到最大合法长度，每次循环都统计长度为 i 的子字符串个数。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("String s1 = in.next();\nString s2 = in.next();\nint len1 = in.nextInt();\nint len2 = in.nextInt();\nint len = Math.min(s2.length(), len2);\nint[] subtractArr = new int[len];\nfor (int i = 0; i < len; i++) {\n    char c1 = i < s1.length() ? s1.charAt(i) : 'a';\n    char c2 = s2.charAt(i);\n    subtractArr[i] = c2 - c1;\n}\nint ret = 0;\nfor (int i = len1; i <= len; i++) {\n    for (int j = 0; j < i; j++) {\n        ret += subtractArr[j] * Math.pow(26, i - j - 1);\n    }\n}\nSystem.out.println(ret - 1);\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br")])]),r("h2",{attrs:{id:"美团-平均年龄"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#美团-平均年龄"}},[a._v("#")]),a._v(" 美团-平均年龄")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("int W = in.nextInt();\ndouble Y = in.nextDouble();\ndouble x = in.nextDouble();\nint N = in.nextInt();\nwhile (N-- > 0) {\n    Y++; // 老员工每年年龄都要加 1\n    Y += (21 - Y) * x;\n}\nSystem.out.println((int) Math.ceil(Y));\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br")])]),r("h2",{attrs:{id:"百度-罪犯转移"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#百度-罪犯转移"}},[a._v("#")]),a._v(" 百度-罪犯转移")]),a._v(" "),r("p",[a._v("部分和问题，将每次求的部分和缓存起来。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("int n = in.nextInt();\nint t = in.nextInt();\nint c = in.nextInt();\nint[] values = new int[n];\nfor (int i = 0; i < n; i++) {\n    values[i] = in.nextInt();\n}\nint cnt = 0;\nint totalValue = 0;\nfor (int s = 0, e = c - 1; e < n; s++, e++) {\n    if (s == 0) {\n        for (int j = 0; j < c; j++) totalValue += values[j];\n    } else {\n        totalValue = totalValue - values[s - 1] + values[e];\n    }\n    if (totalValue <= t) cnt++;\n}\nSystem.out.println(cnt);\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br")])]),r("h2",{attrs:{id:"百度-裁减网格纸"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#百度-裁减网格纸"}},[a._v("#")]),a._v(" 百度-裁减网格纸")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v("int n = in.nextInt();\nint minX, minY, maxX, maxY;\nminX = minY = Integer.MAX_VALUE;\nmaxX = maxY = Integer.MIN_VALUE;\nfor (int i = 0; i < n; i++) {\n    int x = in.nextInt();\n    int y = in.nextInt();\n    minX = Math.min(minX, x);\n    minY = Math.min(minY, y);\n    maxX = Math.max(maxX, x);\n    maxY = Math.max(maxY, y);\n}\nSystem.out.println((int) Math.pow(Math.max(maxX - minX, maxY - minY), 2));\n")])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br")])]),r("h2",{attrs:{id:"百度-钓鱼比赛"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#百度-钓鱼比赛"}},[a._v("#")]),a._v(" 百度-钓鱼比赛")]),a._v(" "),r("p",[a._v("P ( 至少钓一条鱼 ) = 1 - P ( 一条也钓不到 )")]),a._v(" "),r("p",[a._v("坑：读取概率矩阵的时候，需要一行一行进行读取，而不能直接用 in.nextDouble()。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('public static void main(String[] args) {\n    Scanner in = new Scanner(System.in);\n    while (in.hasNext()) {\n        int n = in.nextInt();\n        int m = in.nextInt();\n        int x = in.nextInt();\n        int y = in.nextInt();\n        int t = in.nextInt();\n        in.nextLine(); // 坑\n        double pcc = 0.0;\n        double sum = 0.0;\n        for (int i = 1; i <= n; i++) {\n            String[] token = in.nextLine().split(" "); // 坑\n            for (int j = 1; j <= m; j++) {\n                double p = Double.parseDouble(token[j - 1]);\n                //  double p = in.nextDouble();\n                sum += p;\n                if (i == x && j == y) {\n                    pcc = p;\n                }\n            }\n        }\n        double pss = sum / (n * m);\n        pcc = computePOfIRT(pcc, t);\n        pss = computePOfIRT(pss, t);\n        System.out.println(pcc > pss ? "cc" : pss > pcc ? "ss" : "equal");\n        System.out.printf("%.2f\\n", Math.max(pcc, pss));\n    }\n}\n// compute probability of independent repeated trials\nprivate static double computePOfIRT(double p, int t) {\n    return 1 - Math.pow((1 - p), t);\n}\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br"),r("span",{staticClass:"line-number"},[a._v("23")]),r("br"),r("span",{staticClass:"line-number"},[a._v("24")]),r("br"),r("span",{staticClass:"line-number"},[a._v("25")]),r("br"),r("span",{staticClass:"line-number"},[a._v("26")]),r("br"),r("span",{staticClass:"line-number"},[a._v("27")]),r("br"),r("span",{staticClass:"line-number"},[a._v("28")]),r("br"),r("span",{staticClass:"line-number"},[a._v("29")]),r("br"),r("span",{staticClass:"line-number"},[a._v("30")]),r("br"),r("span",{staticClass:"line-number"},[a._v("31")]),r("br"),r("span",{staticClass:"line-number"},[a._v("32")]),r("br"),r("span",{staticClass:"line-number"},[a._v("33")]),r("br")])]),r("h2",{attrs:{id:"百度-蘑菇阵"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#百度-蘑菇阵"}},[a._v("#")]),a._v(" 百度-蘑菇阵")]),a._v(" "),r("p",[a._v("这题用回溯会超时，需要用 DP。")]),a._v(" "),r("p",[a._v("dp[i][j] 表示到达 (i,j) 位置不会触碰蘑菇的概率。对于 N*M 矩阵，如果 i == N || j == M，那么 (i,j) 只能有一个移动方向；其它情况下能有两个移动方向。")]),a._v(" "),r("p",[a._v("考虑以下矩阵，其中第 3 行和第 3 列只能往一个方向移动，而其它位置可以有两个方向移动。")]),a._v(" "),r("div",{staticClass:"language- line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[a._v('int N = in.nextInt();\nint M = in.nextInt();\nint K = in.nextInt();\nboolean[][] mushroom = new boolean[N][M];\nwhile (K-- > 0) {\n    int x = in.nextInt();\n    int y = in.nextInt();\n    mushroom[x - 1][y - 1] = true;\n}\ndouble[][] dp = new double[N][M];\ndp[0][0] = 1;\nfor (int i = 0; i < N; i++) {\n    for (int j = 0; j < M; j++) {\n        if (mushroom[i][j]) dp[i][j] = 0;\n        else {\n            double cur = dp[i][j];\n            if (i == N - 1 && j == M - 1) break;\n            if (i == N - 1) dp[i][j + 1] += cur;\n            else if (j == M - 1) dp[i + 1][j] += cur;\n            else {\n                dp[i][j + 1] += cur / 2;\n                dp[i + 1][j] += cur / 2;\n            }\n        }\n    }\n}\nSystem.out.printf("%.2f\\n", dp[N - 1][M - 1]);\n')])]),a._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[a._v("1")]),r("br"),r("span",{staticClass:"line-number"},[a._v("2")]),r("br"),r("span",{staticClass:"line-number"},[a._v("3")]),r("br"),r("span",{staticClass:"line-number"},[a._v("4")]),r("br"),r("span",{staticClass:"line-number"},[a._v("5")]),r("br"),r("span",{staticClass:"line-number"},[a._v("6")]),r("br"),r("span",{staticClass:"line-number"},[a._v("7")]),r("br"),r("span",{staticClass:"line-number"},[a._v("8")]),r("br"),r("span",{staticClass:"line-number"},[a._v("9")]),r("br"),r("span",{staticClass:"line-number"},[a._v("10")]),r("br"),r("span",{staticClass:"line-number"},[a._v("11")]),r("br"),r("span",{staticClass:"line-number"},[a._v("12")]),r("br"),r("span",{staticClass:"line-number"},[a._v("13")]),r("br"),r("span",{staticClass:"line-number"},[a._v("14")]),r("br"),r("span",{staticClass:"line-number"},[a._v("15")]),r("br"),r("span",{staticClass:"line-number"},[a._v("16")]),r("br"),r("span",{staticClass:"line-number"},[a._v("17")]),r("br"),r("span",{staticClass:"line-number"},[a._v("18")]),r("br"),r("span",{staticClass:"line-number"},[a._v("19")]),r("br"),r("span",{staticClass:"line-number"},[a._v("20")]),r("br"),r("span",{staticClass:"line-number"},[a._v("21")]),r("br"),r("span",{staticClass:"line-number"},[a._v("22")]),r("br"),r("span",{staticClass:"line-number"},[a._v("23")]),r("br"),r("span",{staticClass:"line-number"},[a._v("24")]),r("br"),r("span",{staticClass:"line-number"},[a._v("25")]),r("br"),r("span",{staticClass:"line-number"},[a._v("26")]),r("br"),r("span",{staticClass:"line-number"},[a._v("27")]),r("br")])]),r("h1",{attrs:{id:"二、计算机网络"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、计算机网络"}},[a._v("#")]),a._v(" 二、计算机网络")]),a._v(" "),r("h2",{attrs:{id:"一-、概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、概述"}},[a._v("#")]),a._v(" （一）、概述")]),a._v(" "),r("h3",{attrs:{id:"网络的网络"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络的网络"}},[a._v("#")]),a._v(" 网络的网络")]),a._v(" "),r("p",[a._v("网络把主机连接起来，而互联网是把多种不同的网络连接起来，因此互联网是网络的网络。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-3e9befc93843a932.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"isp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#isp"}},[a._v("#")]),a._v(" ISP")]),a._v(" "),r("p",[a._v("互联网服务提供商 ISP 可以从互联网管理机构获得许多 IP 地址，同时拥有通信线路以及路由器等联网设备，个人或机构向 ISP 缴纳一定的费用就可以接入互联网。")]),a._v(" "),r("p",[a._v("目前的互联网是一种多层次 ISP 结构，ISP 根据覆盖面积的大小分为主干 ISP、地区 ISP 和本地 ISP。")]),a._v(" "),r("p",[a._v("互联网交换点 IXP 允许两个 ISP 直接相连而不用经过第三个 ISP。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-623d2325a5d4f840.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"互联网的组成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#互联网的组成"}},[a._v("#")]),a._v(" 互联网的组成")]),a._v(" "),r("ol",[r("li",[a._v("边缘部分：所有连接在互联网上的主机，用户可以直接使用；")]),a._v(" "),r("li",[a._v("核心部分：由大量的网络和连接这些网络的路由器组成，为边缘部分的主机提供服务。")])]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-a905c2e3733cf293.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"主机之间的通信方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#主机之间的通信方式"}},[a._v("#")]),a._v(" 主机之间的通信方式")]),a._v(" "),r("ol",[r("li",[a._v("客户-服务器（C/S）：客户是服务的请求方，服务器是服务的提供方。")]),a._v(" "),r("li",[a._v("对等（P2P）：不区分客户和服务器。")])]),a._v(" "),r("h3",{attrs:{id:"电路交换与分组交换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#电路交换与分组交换"}},[a._v("#")]),a._v(" 电路交换与分组交换")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-24a657b10fdd15d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 电路交换")]),a._v(" "),r("p",[a._v("电路交换用于电话通信系统，两个用户要通信之前需要建立一条专用的物理链路，并且在整个通信过程中始终占用该链路。由于通信的过程中不可能一直在使用传输线路，因此电路交换对线路的利用率很低，往往不到 10%。")]),a._v(" "),r("p",[a._v("###. 报文交换")]),a._v(" "),r("p",[a._v("报文交换用于邮局通信系统，邮局接收到一份报文之后，先存储下来，然后把相同目的地的报文一起转发到下一个目的地，这个过程就是存储转发过程。")]),a._v(" "),r("p",[a._v("###. 分组交换")]),a._v(" "),r("p",[a._v("分组交换也使用了存储转发，但是转发的是分组而不是报文。把整块数据称为一个报文，由于一个报文可能很长，需要先进行切分，来满足分组能处理的大小。在每个切分的数据前面加上首部之后就成为了分组，首部包含了目的地址和源地址等控制信息。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-0f87879b8ac9fb62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("存储转发允许在一条传输线路上传送多个主机的分组，也就是说两个用户之间的通信不需要占用端到端的线路资源。")]),a._v(" "),r("p",[a._v("相比于报文交换，由于分组比报文更小，因此分组交换的存储转发速度更加快速。")]),a._v(" "),r("h3",{attrs:{id:"时延"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#时延"}},[a._v("#")]),a._v(" 时延")]),a._v(" "),r("p",[a._v("总时延 = 发送时延 + 传播时延 + 处理时延 + 排队时延")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-57c614f13b647a4a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 发送时延")]),a._v(" "),r("p",[a._v("主机或路由器发送数据帧所需要的时间。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-bf9d8078edf7ea54.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("其中 l 表示数据帧的长度，v 表示发送速率。")]),a._v(" "),r("p",[a._v("###. 传播时延")]),a._v(" "),r("p",[a._v("电磁波在信道中传播一定的距离需要花费的时间，电磁波传播速度接近光速。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-bf0bc5bf4da6b65a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("其中 l 表示信道长度，v 表示电磁波在信道上的传播速率。")]),a._v(" "),r("p",[a._v("###. 处理时延")]),a._v(" "),r("p",[a._v("主机或路由器收到分组时进行处理所需要的时间，例如分析首部、从分组中提取数据部、进行差错检验或查找适当的路由等。")]),a._v(" "),r("p",[a._v("###. 排队时延")]),a._v(" "),r("p",[a._v("分组在路由器的输入队列和输出队列中排队等待的时间，取决于网络当前的通信量。")]),a._v(" "),r("h3",{attrs:{id:"计算机网络体系结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络体系结构"}},[a._v("#")]),a._v(" 计算机网络体系结构*")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-c275ad97d4284637.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 七层协议")]),a._v(" "),r("p",[a._v("如图 a 所示，其中表示层和会话层用途如下：")]),a._v(" "),r("ul",[r("li",[a._v("表示层：信息的语法、语义以及它们的关联，如加密解密、转换翻译、压缩解压缩；")]),a._v(" "),r("li",[a._v("会话层：不同机器上的用户之间建立及管理会话。")])]),a._v(" "),r("p",[a._v("###. 五层协议")]),a._v(" "),r("ul",[r("li",[a._v("应用层：为特定应用程序提供数据传输服务，例如 HTTP、DNS 等。数据单位为报文。")]),a._v(" "),r("li",[a._v("运输层：提供的是进程间的通用数据传输服务。由于应用层协议很多，定义通用的运输层协议就可以支持不断增多的应用层协议。运输层包括两种协议：传输控制协议 TCP，提供面向连接、可靠的数据传输服务，数据单位为报文段；用户数据报协议 UDP，提供无连接、尽最大努力的数据传输服务，数据单位为用户数据报。TCP 主要提供完整性服务，UDP 主要提供及时性服务。")]),a._v(" "),r("li",[a._v("网络层：为主机之间提供数据传输服务，而运输层协议是为主机中的进程提供服务。网络层把运输层传递下来的报文段或者用户数据报封装成分组。")]),a._v(" "),r("li",[a._v("数据链路层：网络层针对的还是主机之间的数据传输服务，而主机之间可以有很多链路，链路层协议就是为同一链路的结点提供服务。数据链路层把网络层传来的分组封装成帧。")]),a._v(" "),r("li",[a._v("物理层：考虑的是怎样在传输媒体上传输数据比特流，而不是指具体的传输媒体。物理层的作用是尽可能屏蔽传输媒体和通信手段的差异，使数据链路层感觉不到这些差异。")])]),a._v(" "),r("p",[a._v("###. 数据在各层之间的传递过程")]),a._v(" "),r("p",[a._v("在向下的过程中，需要添加下层协议所需要的首部或者尾部，而在向上的过程中不断拆开首部和尾部。")]),a._v(" "),r("p",[a._v("路由器只有下面三层协议，因为路由器位于网络核心中，不需要为进程或者应用程序提供服务，因此也就不需要运输层和应用层。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-a5039603bbd84b51.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. TCP/IP 体系结构")]),a._v(" "),r("p",[a._v("它只有四层，相当于五层协议中数据链路层和物理层合并为网络接口层。")]),a._v(" "),r("p",[a._v("现在的 TCP/IP 体系结构不严格遵循 OSI 分层概念，应用层可能会直接使用 IP 层或者网络接口层。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-b63d2969eae11e2f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("TCP/IP 协议族是一种沙漏形状，中间小两边大，IP 协议在其中占用举足轻重的地位。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-2f9a38548d6fa93e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h2",{attrs:{id:"二-、物理层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、物理层"}},[a._v("#")]),a._v(" （二）、物理层")]),a._v(" "),r("h3",{attrs:{id:"通信方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通信方式"}},[a._v("#")]),a._v(" 通信方式")]),a._v(" "),r("ol",[r("li",[a._v("单向通信，又称为单工通信；")]),a._v(" "),r("li",[a._v("双向交替通信，又称为半双工通信；")]),a._v(" "),r("li",[a._v("双向同时通信，又称为全双工通信。")])]),a._v(" "),r("h3",{attrs:{id:"带通调制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#带通调制"}},[a._v("#")]),a._v(" 带通调制")]),a._v(" "),r("p",[a._v("模拟信号是连续的信号，数字信号是离散的信号。带通调制把数字信号转换为模拟信号。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-343aa4560ebd1a2a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"信道复用技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#信道复用技术"}},[a._v("#")]),a._v(" 信道复用技术")]),a._v(" "),r("p",[a._v("###. 频分复用、时分复用")]),a._v(" "),r("p",[a._v("频分复用的所有用户在相同的时间占用不同的频率带宽资源；时分复用的所有用户在不同的时间占用相同的频率带宽资源。")]),a._v(" "),r("p",[a._v("使用这两种方式进行通信，在通信的过程中用户会一直占用一部分信道资源。但是由于计算机数据的突发性质，通信过程没必要一直占用信道资源而不让出给其它用户使用，因此这两种方式对信道的利用率都不高。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-5b93734bc44f3096.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 统计时分复用")]),a._v(" "),r("p",[a._v("是对时分复用的一种改进，不固定每个用户在时分复用帧中的位置，只要有数据就集中起来组成统计时分复用帧然后发送。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-78a3147b29855393.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 波分复用")]),a._v(" "),r("p",[a._v("光的频分复用。由于光的频率很高，因此习惯上用波长而不是频率来表示所使用的光载波。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-b412b35f8b1e8bd0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 码分复用")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-6f1f39c088998277.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-9a37ff5183bb5fe0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h2",{attrs:{id:"三-、数据链路层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、数据链路层"}},[a._v("#")]),a._v(" （三）、数据链路层")]),a._v(" "),r("h3",{attrs:{id:"信道分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#信道分类"}},[a._v("#")]),a._v(" 信道分类")]),a._v(" "),r("ul",[r("li",[a._v("点对点信道：一对一通信方式；")]),a._v(" "),r("li",[a._v("广播信道：一对多通信方式。")])]),a._v(" "),r("h3",{attrs:{id:"三个基本问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三个基本问题"}},[a._v("#")]),a._v(" 三个基本问题")]),a._v(" "),r("p",[a._v("###. 封装成帧")]),a._v(" "),r("p",[a._v("将网络层传下来的分组添加首部和尾部，用于标记帧的开始和结束。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-8aa30ff1a433a4ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 透明传输")]),a._v(" "),r("p",[a._v("透明表示一个实际存在的事物看起来好像不存在一样。")]),a._v(" "),r("p",[a._v("帧使用首部和尾部进行定界，如果帧的数据部分含有和首部尾部相同的内容，那么帧的开始和结束位置就会被错误的判定。需要在数据部分出现首部尾部相同的内容前面插入转义字符，如果出现转移字符，那么就在转义字符前面再加个转义字符，在接收端进行处理之后可以还原出原始数据。这个过程透明传输的内容是转义字符，用户察觉不到转义字符的存在。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-69f6747afd2a2b42.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 差错检测")]),a._v(" "),r("p",[a._v("目前数据链路层广泛使用了循环冗余检验（CRC）来检查比特差错。")]),a._v(" "),r("h3",{attrs:{id:"局域网"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#局域网"}},[a._v("#")]),a._v(" 局域网")]),a._v(" "),r("p",[a._v("局域网是典型的一种广播信道，主要特点是网络为一个单位所拥有，且地理范围和站点数目均有限。")]),a._v(" "),r("p",[a._v("可以按照网络拓扑对局域网进行分类：")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-bc0ca7bc988d12e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"ppp-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ppp-协议"}},[a._v("#")]),a._v(" PPP 协议")]),a._v(" "),r("p",[a._v("用于点对点信道中。互联网用户通常需要连接到某个 ISP 之后才能接入到互联网，PPP 协议是用户计算机和 ISP 进行通信时所使用的数据链路层协议。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-93fddbe69cc97273.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("在 PPP 的帧中：")]),a._v(" "),r("ul",[r("li",[a._v("F 字段为帧的定界符")]),a._v(" "),r("li",[a._v("A 和 C 字段暂时没有意义")]),a._v(" "),r("li",[a._v("FCS 字段是使用 CRC 的检验序列")]),a._v(" "),r("li",[a._v("信息部分的长度不超过 1500")])]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-17d0a6e89fe56df3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"csma-cd-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#csma-cd-协议"}},[a._v("#")]),a._v(" CSMA/CD 协议*")]),a._v(" "),r("p",[a._v("用于广播信道中。在广播信道上，同一时间只能允许一台计算机发送数据。")]),a._v(" "),r("p",[a._v("CSMA/CD 表示载波监听多点接入 / 碰撞检测。")]),a._v(" "),r("ul",[r("li",[a._v("多点接入 ：说明这是总线型网络，许多计算机以多点的方式连接到总线上。")]),a._v(" "),r("li",[a._v("载波监听 ：每个站都必须不停地监听信道。在发送前，如果监听到信道正在使用，就必须等待。")]),a._v(" "),r("li",[a._v("碰撞检测 ：在发送中，如果监听到信道已有其它站正在发送数据，就表示发生了碰撞。虽然每一个站在发送数据之前都已经监听到信道为空闲，但是由于电磁波的传播时延的存在，还是有可能会发生碰撞。")])]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-41f8beae37dcc052.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("记端到端的传播时延为 τ，最先发送的站点最多经过 2τ 就可以知道是否发生了碰撞，称 2τ 为 争用期 。只有经过争用期之后还没有检测到碰撞，才能肯定这次发送不会发生碰撞。")]),a._v(" "),r("p",[a._v("当发生碰撞时，站点要停止发送，等待一段时间再发送。这个时间采用 截断二进制指数退避算法 来确定，从离散的整数集合 {0, 1, .., (2k-1)} 中随机取出一个数，记作 r，然后取 r 倍的争用期作为重传等待时间。")]),a._v(" "),r("h3",{attrs:{id:"扩展局域网"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#扩展局域网"}},[a._v("#")]),a._v(" 扩展局域网*")]),a._v(" "),r("p",[a._v("###. 在物理层进行扩展")]),a._v(" "),r("p",[a._v("使用集线器进行扩展。")]),a._v(" "),r("p",[a._v("集线器的主要功能是对接收到的信号进行放大，以扩大网络的传输距离。")]),a._v(" "),r("p",[a._v("集线器不能根据 MAC 地址进行转发，而是以广播的方式发送数据帧。")]),a._v(" "),r("p",[a._v("集线器是一种共享式的传输设备，意味着同一时刻只能传输一组数据帧。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-672b76cffeb72ea8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 在链路层进行扩展")]),a._v(" "),r("p",[a._v("最开始使用的是网桥，它收到一个帧时，根据帧的 MAC 地址，查找网桥中的地址表，确定帧转发的接口。")]),a._v(" "),r("p",[a._v("网桥不是共享式设备，因此性能比集线器这种共享式设备更高。")]),a._v(" "),r("p",[a._v("交换机的问世很快就淘汰了网桥，它实质上是一个多接口网桥，而网桥是两接口。交换机的每个接口都能直接与一个主机或者另一个交换机相连，并且一般都工作在全双工方式。")]),a._v(" "),r("p",[a._v("交换机具有自学习能力，学习的是交换表的内容。交换表中存储着 MAC 地址到接口的映射。下图中，交换机有 4 个接口，主机 A 向主机 B 发送数据帧时，交换机把主机 A 到接口 1 的映射写入交换表中。为了发送数据帧到 B，先查交换表，此时没有主机 B 的表项，那么主机 A 就发送广播帧，主机 C 和主机 D 会丢弃该帧。主机 B 收下之后，查找交换表得到主机 A 映射的接口为 1，就发送数据帧到接口 1，同时交换机添加主机 B 到接口 3 的映射。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-8813257ce86df728.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 虚拟局域网")]),a._v(" "),r("p",[a._v("虚拟局域网可以建立与物理位置无关的逻辑组，只有在同一个虚拟局域网中的成员才会收到链路层广播信息，例如下图中 (A1, A2, A3, A4) 属于一个虚拟局域网，A1 发送的广播会被 A2、A3、A4 收到，而其它站点收不到。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-a6524092a93a92d7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"mac-层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#mac-层"}},[a._v("#")]),a._v(" MAC 层*")]),a._v(" "),r("p",[a._v("MAC 地址是 6 字节（48 位）的地址，用于唯一标识网络适配器（网卡），一台主机拥有多少个适配器就有多少个 MAC 地址，例如笔记本电脑普遍存在无线网络适配器和有线网络适配器。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-89e04a0fa88eb146.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("在 MAC 帧中：")]),a._v(" "),r("ul",[r("li",[a._v("类型 ：标记上层使用的协议；")]),a._v(" "),r("li",[a._v("数据 ：长度在 46-1500 之间，如果太小则需要填充；")]),a._v(" "),r("li",[a._v("FCS ：帧检验序列，使用的是 CRC 检验方法；")]),a._v(" "),r("li",[a._v("前同步码 ：只是为了计算 FCS 临时加入的，计算结束之后会丢弃。")])]),a._v(" "),r("h2",{attrs:{id:"四-、网络层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、网络层"}},[a._v("#")]),a._v(" （四）、网络层")]),a._v(" "),r("h3",{attrs:{id:"网际协议-ip-概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网际协议-ip-概述"}},[a._v("#")]),a._v(" 网际协议 IP 概述")]),a._v(" "),r("p",[a._v("因为网络层是整个互联网的核心，因此应当让网络层尽可能简单。网络层向上只提供简单灵活的、无连接的、尽最大努力交互的数据报服务。")]),a._v(" "),r("p",[a._v("使用 IP 协议，可以把异构的物理网络连接起来，使得在网络层看起来好像是一个统一的网络。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-1771b0c8d73dc687.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("与 IP 协议配套使用的还有三个协议：")]),a._v(" "),r("ul",[r("li",[a._v("地址解析协议 ARP（Address Resolution Protocol）")]),a._v(" "),r("li",[a._v("网际控制报文协议 ICMP（Internet Control Message Protocol）")]),a._v(" "),r("li",[a._v("网际组管理协议 IGMP（Internet Group Management Protocol）")])]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-5b7a6ea096149a28.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"ip-数据报格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ip-数据报格式"}},[a._v("#")]),a._v(" IP 数据报格式")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-4e6eb90fd7b8e8c3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("ul",[r("li",[a._v("版本 : 有 4（IPv4）和 6（IPv6）两个值；")]),a._v(" "),r("li",[a._v("首部长度 : 占 4 位，因此最大值为 15。值为 1 表示的是 1 个 32 位字的长度，也就是 4 字节。因为首部固定长度为 20 字节，因此该值最小为 5。如果可选字段的长度不是 4 字节的整数倍，就用尾部的填充部分来填充。")]),a._v(" "),r("li",[a._v("区分服务 : 用来获得更好的服务，一般情况下不使用。")]),a._v(" "),r("li",[a._v("总长度 : 包括首部长度和数据部分长度。")]),a._v(" "),r("li",[a._v("标识 : 在数据报长度过长从而发生分片的情况下，相同数据报的不同分片具有相同的标识符。")]),a._v(" "),r("li",[a._v("片偏移 : 和标识符一起，用于发生分片的情况。片偏移的单位为 8 字节。")])]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-65bab67fbf94e0b6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("ul",[r("li",[a._v("生存时间 ：TTL，它的存在是为了防止无法交付的数据报在互联网中不断兜圈子。以路由器跳数为单位，当 TTL 为 0 时就丢弃数据报。")]),a._v(" "),r("li",[a._v("协议 ：指出携带的数据应该上交给哪个协议进行处理，例如 ICMP、TCP、UDP 等。")]),a._v(" "),r("li",[a._v("首部检验和 ：因为数据报每经过一个路由器，都要重新计算检验和，因此检验和不包含数据部分可以减少计算的工作量。")])]),a._v(" "),r("h3",{attrs:{id:"ip-地址编址方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ip-地址编址方式"}},[a._v("#")]),a._v(" IP 地址编址方式")]),a._v(" "),r("p",[a._v("IP 地址的编址方式经历了三个历史阶段：")]),a._v(" "),r("ul",[r("li",[a._v("分类")]),a._v(" "),r("li",[a._v("子网划分")]),a._v(" "),r("li",[a._v("无分类")])]),a._v(" "),r("p",[a._v("###. 分类")]),a._v(" "),r("p",[a._v("由两部分组成，网络号和主机号，其中不同分类具有不同的网络号长度，并且是固定的。")]),a._v(" "),r("p",[a._v("IP 地址 ::= {< 网络号 >, < 主机号 >}")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-a90a86286ddc0882.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 子网划分")]),a._v(" "),r("p",[a._v("通过在主机号字段中拿一部分作为子网号，把两级 IP 地址划分为三级 IP 地址。注意，外部网络看不到子网的存在。")]),a._v(" "),r("p",[a._v("IP 地址 ::= {< 网络号 >, < 子网号 >, < 主机号 >}")]),a._v(" "),r("p",[a._v("要使用子网，必须配置子网掩码。一个 B 类地址的默认子网掩码为 255.255.0.0，如果 B 类地址的子网占两个比特，那么子网掩码为 11111111 11111111 11000000 00000000，也就是 255.255.192.0。")]),a._v(" "),r("p",[a._v("###. 无分类")]),a._v(" "),r("p",[a._v("无分类编址 CIDR 消除了传统 A 类、B 类和 C 类地址以及划分子网的概念，使用网络前缀和主机号来对 IP 地址进行编码，网络前缀的长度可以根据需要变化。")]),a._v(" "),r("p",[a._v("IP 地址 ::= {< 网络前缀号 >, < 主机号 >}")]),a._v(" "),r("p",[a._v("CIDR 的记法上采用在 IP 地址后面加上网络前缀长度的方法，例如 128.14.35.7/20 表示前 20 位为网络前缀。")]),a._v(" "),r("p",[a._v("CIDR 的地址掩码可以继续称为子网掩码，子网掩码首 1 长度为网络前缀的长度。")]),a._v(" "),r("p",[a._v("一个 CIDR 地址块中有很多地址，一个 CIDR 表示的网络就可以表示原来的很多个网络，并且在路由表中只需要一个路由就可以代替原来的多个路由，减少了路由表项的数量。把这种通过使用网络前缀来减少路由表项的方式称为路由聚合，也称为 构成超网 。")]),a._v(" "),r("p",[a._v("在路由表中的项目由“网络前缀”和“下一跳地址”组成，在查找时可能会得到不止一个匹配结果，应当采用最长前缀匹配来确定应该匹配哪一个。")]),a._v(" "),r("h3",{attrs:{id:"ip-地址和-mac-地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ip-地址和-mac-地址"}},[a._v("#")]),a._v(" IP 地址和 MAC 地址")]),a._v(" "),r("p",[a._v("网络层实现主机之间的通信，而链路层实现具体每段链路之间的通信。因此在通信过程中，IP 数据报的源地址和目的地址始终不变，而 MAC 地址随着链路的改变而改变。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-077f35d640f72b30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"地址解析协议-arp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#地址解析协议-arp"}},[a._v("#")]),a._v(" 地址解析协议 ARP")]),a._v(" "),r("p",[a._v("实现由 IP 地址得到 MAC 地址。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-4425c6bbd8e37177.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("每个主机都有一个 ARP 高速缓存，里面有本局域网上的各主机和路由器的 IP 地址到硬件地址的映射表。")]),a._v(" "),r("p",[a._v("如果主机 A 知道主机 B 的 IP 地址，但是 ARP 高速缓存中没有该 IP 地址到 MAC 地址的映射，此时主机 A 通过广播的方式发送 ARP 请求分组，主机 B 收到该请求后会发送 ARP 响应分组给主机 A 告知其 MAC 地址，随后主机 A 向其高速缓存中写入主机 B 的 IP 地址到硬件地址的映射。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-bbf54bd08ba4ec13.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"路由器的结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#路由器的结构"}},[a._v("#")]),a._v(" 路由器的结构")]),a._v(" "),r("p",[a._v("路由器从功能上可以划分为：路由选择和分组转发。")]),a._v(" "),r("p",[a._v("分组转发结构由三个部分组成：交换结构、一组输入端口和一组输出端口。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-1172014db09b09d9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"路由器分组转发流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#路由器分组转发流程"}},[a._v("#")]),a._v(" 路由器分组转发流程")]),a._v(" "),r("ol",[r("li",[a._v("从数据报的首部提取目的主机的 IP 地址 D，得到目的网络地址 N。")]),a._v(" "),r("li",[a._v("若 N 就是与此路由器直接相连的某个网络地址，则进行直接交付；")]),a._v(" "),r("li",[a._v("若路由表中有目的地址为 D 的特定主机路由，则把数据报传送给表中所指明的下一跳路由器；")]),a._v(" "),r("li",[a._v("若路由表中有到达网络 N 的路由，则把数据报传送给路由表中所指明的下一跳路由器；")]),a._v(" "),r("li",[a._v("若路由表中有一个默认路由，则把数据报传送给路由表中所指明的默认路由器；")]),a._v(" "),r("li",[a._v("报告转发分组出错。")])]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-fc83f21a95c3a14f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"路由选择协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#路由选择协议"}},[a._v("#")]),a._v(" 路由选择协议")]),a._v(" "),r("p",[a._v("互联网使用的路由选择协议都是自适应的，能随着网络通信量和拓扑结构的变化而自适应地进行调整。")]),a._v(" "),r("p",[a._v("互联网可以划分为许多较小的自治系统 AS，一个 AS 可以使用一种和别的 AS 不同的路由选择协议。")]),a._v(" "),r("p",[a._v("可以把路由选择协议划分为两大类：")]),a._v(" "),r("ul",[r("li",[a._v("内部网关协议 IGP（Interior Gateway Protocol）：在 AS 内部使用，如 RIP 和 OSPF。")]),a._v(" "),r("li",[a._v("外部网关协议 EGP（External Gateway Protocol）：在 AS 之间使用，如 BGP。")])]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-2d0da720aff11c2b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 内部网关协议 RIP")]),a._v(" "),r("p",[a._v("RIP 是一种分布式的基于距离向量的路由选择协议。距离是指跳数，直接相连的路由器跳数为 1，跳数最多为 15，超过 15 表示不可达。")]),a._v(" "),r("p",[a._v("RIP 按固定的时间间隔仅和相邻路由器交换自己的路由表，经过若干次交换之后，所有路由器最终会知道到达本自治系统中任何一个网络的最短距离和下一跳路由器地址。")]),a._v(" "),r("p",[a._v("距离向量算法：")]),a._v(" "),r("ul",[r("li",[a._v("对地址为 X 的相邻路由器发来的 RIP 报文，先修改报文中的所有项目，把下一跳字段中的地址改为 X，并把所有的距离字段加 1；")]),a._v(" "),r("li",[a._v("对修改后的 RIP 报文中的每一个项目，进行以下步骤：\n"),r("ul",[r("li",[a._v("若原来的路由表中没有目的网络 N，则把该项目添加到路由表中；")]),a._v(" "),r("li",[a._v("否则：若下一跳路由器地址是 X，则把收到的项目替换原来路由表中的项目；否则：若收到的项目中的距离 d 小于路由表中的距离，则进行更新（例如原始路由表项为 Net2, 5, P，新表项为 Net2, 4, X，则更新）；否则什么也不做。")])])]),a._v(" "),r("li",[a._v("若 3 分钟还没有收到相邻路由器的更新路由表，则把该相邻路由器标为不可达，即把距离置为 16。")])]),a._v(" "),r("p",[a._v("RIP 协议实现简单，开销小，但是 RIP 能使用的最大距离为 15，限制了网络的规模。并且当网络出现故障时，要经过比较长的时间才能将此消息传送到所有路由器。")]),a._v(" "),r("p",[a._v("###. 内部网关协议 OSPF")]),a._v(" "),r("p",[a._v("开放最短路径优先 OSPF，是为了克服 RIP 的缺点而开发出来的。")]),a._v(" "),r("p",[a._v("开放表示 OSPF 不受某一家厂商控制，而是公开发表的；最短路径优先表示使用了 Dijkstra 提出的最短路径算法 SPF。")]),a._v(" "),r("p",[a._v("OSPF 具有以下特点：")]),a._v(" "),r("ul",[r("li",[a._v("向本自治系统中的所有路由器发送信息，这种方法是洪泛法。")]),a._v(" "),r("li",[a._v("发送的信息就是与相邻路由器的链路状态，链路状态包括与哪些路由器相连以及链路的度量，度量用费用、距离、时延、带宽等来表示。")]),a._v(" "),r("li",[a._v("只有当链路状态发生变化时，路由器才会发送信息。")])]),a._v(" "),r("p",[a._v("所有路由器都具有全网的拓扑结构图，并且是一致的。相比于 RIP，OSPF 的更新过程收敛的很快。")]),a._v(" "),r("p",[a._v("###. 外部网关协议 BGP")]),a._v(" "),r("p",[a._v("AS 之间的路由选择很困难，主要是互联网规模很大。并且各个 AS 内部使用不同的路由选择协议，就无法准确定义路径的度量。并且 AS 之间的路由选择必须考虑有关的策略，比如有些 AS 不愿意让其它 AS 经过。")]),a._v(" "),r("p",[a._v("BGP 只能寻找一条比较好的路由，而不是最佳路由。它采用路径向量路由选择协议。")]),a._v(" "),r("p",[a._v("每个 AS 都必须配置 BGP 发言人，通过在两个相邻 BGP 发言人之间建立 TCP 连接来交换路由信息。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-fdd780fcd8fea617.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"网际控制报文协议-icmp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网际控制报文协议-icmp"}},[a._v("#")]),a._v(" 网际控制报文协议 ICMP")]),a._v(" "),r("p",[a._v("ICMP 是为了更有效地转发 IP 数据报和提高交付成功的机会。它封装在 IP 数据报中，但是不属于高层协议。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-8120cc282efbc60e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("ICMP 报文分为差错报告报文和询问报文。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-b85c992a11db8775.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"分组网间探测-ping"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分组网间探测-ping"}},[a._v("#")]),a._v(" 分组网间探测 PING")]),a._v(" "),r("p",[a._v("PING 是 ICMP 的一个重要应用，主要用来测试两台主机之间的连通性。")]),a._v(" "),r("p",[a._v("Ping 发送的 IP 数据报封装的是无法交付的 UDP 用户数据报。")]),a._v(" "),r("p",[a._v("Ping 的过程：")]),a._v(" "),r("ol",[r("li",[a._v("源主机向目的主机发送一连串的 IP 数据报。第一个数据报 P1 的生存时间 TTL 设置为 1，但 P1 到达路径上的第一个路由器 R1 时，R1 收下它并把 TTL 减 1，此时 TTL 等于 0，R1 就把 P1 丢弃，并向源主机发送一个 ICMP 时间超过差错报告报文；")]),a._v(" "),r("li",[a._v("源主机接着发送第二个数据报 P2，并把 TTL 设置为 2。P2 先到达 R1，R1 收下后把 TTl 减 1 再转发给 R2，R2 收下后也把 TTL 减 1，由于此时 TTL 等于 0，R2 就丢弃 P2，并向源主机发送一个 ICMP 时间超过差错报文。")]),a._v(" "),r("li",[a._v("不断执行这样的步骤，知道最后一个数据报刚刚到达目的主机，主机不转发数据报，也不把 TTL 值减 1。但是因为数据报封装的是无法交付的 UDP，因此目的主机要向源主机发送 ICMP 终点不可达差错报告报文。")]),a._v(" "),r("li",[a._v("之后源主机知道了到达目的主机所经过的路由器 IP 地址以及到达每个路由器的往返时间。")])]),a._v(" "),r("h3",{attrs:{id:"虚拟专用网-vpn"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#虚拟专用网-vpn"}},[a._v("#")]),a._v(" 虚拟专用网 VPN")]),a._v(" "),r("p",[a._v("由于 IP 地址的紧缺，一个机构能申请到的 IP 地址数往往远小于本机构所拥有的主机数。并且一个机构并不需要把所有的主机接入到外部的互联网中，机构内的计算机可以使用仅在本机构有效的 IP 地址（专用地址）。")]),a._v(" "),r("p",[a._v("有三个专用地址块：")]),a._v(" "),r("ul",[r("li",[a._v("10.0.0.0 ~ 10.255.255.255")]),a._v(" "),r("li",[a._v("172.16.0.0 ~ 172.31.255.255")]),a._v(" "),r("li",[a._v("192.168.0.0 ~ 192.168.255.255")])]),a._v(" "),r("p",[a._v("VPN 使用公用的互联网作为本机构各专用网之间的通信载体。专用指机构内的主机只与本机构内的其它主机通信；虚拟指“好像是”，而实际上并不是，它有经过公用的互联网。")]),a._v(" "),r("p",[a._v("下图中，场所 A 和 B 的通信部经过互联网，如果场所 A 的主机 X 要和另一个场所 B 的主机 Y 通信，IP 数据报的源地址是 10.1.0.1，目的地址是 10.2.0.3。数据报先发送到与互联网相连的路由器 R1，R1 对内部数据进行加密，然后重新加上数据报的首部，源地址是路由器 R1 的全球地址 125.1.2.3，目的地址是路由器 R2 的全球地址 194.4.5.6。路由器 R2 收到数据报后将数据部分进行解密，恢复原来的数据报，此时目的地址为 10.2.0.3，就交付给 Y。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-b2ce2121fa85cfdb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"网络地址转换-nat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#网络地址转换-nat"}},[a._v("#")]),a._v(" 网络地址转换 NAT")]),a._v(" "),r("p",[a._v("专用网内部的主机使用本地 IP 地址又想和互联网上的主机通信时，可以使用 NAT 来将本地 IP 转换为全球 IP。")]),a._v(" "),r("p",[a._v("在以前，NAT 将本地 IP 和全球 IP 一一对应，这种方式下拥有 n 个全球 IP 地址的专用网内最多只可以同时有 n 台主机接入互联网。为了更有效地利用全球 IP 地址，现在常用的 NAT 转换表把运输层的端口号也用上了，使得多个专用网内部的主机共用一个全球 IP 地址。使用端口号的 NAT 也叫做网络地址与端口转换 NAPT。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-7492bb5b191b0441.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h2",{attrs:{id:"五-、传输层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、传输层"}},[a._v("#")]),a._v(" （五）、传输层")]),a._v(" "),r("p",[a._v("网络层只把分组发送到目的主机，但是真正通信的并不是主机而是主机中的进程。运输层提供了进程间的逻辑通信，运输层向高层用户屏蔽了下面网络层的核心细节，使应用程序看见的好像在两个运输层实体之间有一条端到端的逻辑通信信道。")]),a._v(" "),r("h3",{attrs:{id:"udp-和-tcp-的特点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#udp-和-tcp-的特点"}},[a._v("#")]),a._v(" UDP 和 TCP 的特点")]),a._v(" "),r("p",[a._v("用户数据报协议 UDP（User Datagram Protocol）是无连接的，尽最大可能交付，没有拥塞控制，面向报文（对于应用程序传下来的报文不合并也不拆分，只是添加 UDP 首部）。")]),a._v(" "),r("p",[a._v("传输控制协议 TCP（Transmission Control Protocol）是面向连接的，提供可靠交付，有流量控制，拥塞控制，提供全双工通信，面向字节流（把应用层传下来的报文看成字节流，把字节流组织成大小不等的数据块）。")]),a._v(" "),r("h3",{attrs:{id:"udp-首部格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#udp-首部格式"}},[a._v("#")]),a._v(" UDP 首部格式")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-ef1fee59ae4ed6a9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("首部字段只有 8 个字节，包括源端口、目的端口、长度、检验和。12 字节的伪首部是为了计算检验和临时添加的。")]),a._v(" "),r("h3",{attrs:{id:"tcp-首部格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-首部格式"}},[a._v("#")]),a._v(" TCP 首部格式")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-4297d9bf75b7374a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("ul",[r("li",[a._v("序号 ：用于对字节流进行编号，例如序号为 301，表示第一个字节的编号为 301，如果携带的数据长度为 100 字节，那么下一个报文段的序号应为 401。")]),a._v(" "),r("li",[a._v("确认号 ：期望收到的下一个报文段的序号。例如 B 正确收到 A 发送来的一个报文段，序号为 501，携带的数据长度为 200 字节，因此 B 期望下一个报文段的序号为 701，B 发送给 A 的确认报文段中确认号就为 701。")]),a._v(" "),r("li",[a._v("数据偏移 ：指的是数据部分距离报文段起始处的偏移量，实际上指的是首部的长度。")]),a._v(" "),r("li",[a._v("确认 ACK ：当 ACK=1 时确认号字段有效，否则无效。TCP 规定，在连接建立后所有传送的报文段都必须把 ACK 置 1。")]),a._v(" "),r("li",[a._v("同步 SYN ：在连接建立时用来同步序号。当 SYN=1，ACK=0 时表示这是一个连接请求报文段。若对方同意建立连接，则响应报文中 SYN=1，ACK=1。")]),a._v(" "),r("li",[a._v("终止 FIN ：用来释放一个连接，当 FIN=1 时，表示此报文段的发送方的数据已发送完毕，并要求释放运输连接。")]),a._v(" "),r("li",[a._v("窗口 ：窗口值作为接收方让发送方设置其发送窗口的依据。之所以要有这个限制，是因为接收方的数据缓存空间是有限的。")])]),a._v(" "),r("h3",{attrs:{id:"tcp-的三次握手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-的三次握手"}},[a._v("#")]),a._v(" TCP 的三次握手")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-0a73d7716a84d309.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("假设 A 为客户端，B 为服务器端。")]),a._v(" "),r("ol",[r("li",[a._v("首先 B 处于 LISTEN（监听）状态，等待客户的连接请求。")]),a._v(" "),r("li",[a._v("A 向 B 发送连接请求报文段，SYN=1，ACK=0，选择一个初始的序号 x。")]),a._v(" "),r("li",[a._v("B 收到连接请求报文段，如果同意建立连接，则向 A 发送连接确认报文段，SYN=1，ACK=1，确认号为 x+1，同时也选择一个初始的序号 y。")]),a._v(" "),r("li",[a._v("A 收到 B 的连接确认报文段后，还要向 B 发出确认，确认号为 y+1，序号为 x+1。")]),a._v(" "),r("li",[a._v("B 收到 A 的确认后，连接建立。")])]),a._v(" "),r("p",[r("strong",[a._v("三次握手的原因")])]),a._v(" "),r("p",[a._v("为了防止失效的连接请求到达服务器，让服务器错误打开连接。")]),a._v(" "),r("p",[a._v("失效的连接请求是指，客户端发送的连接请求在网络中滞留，客户端因为没及时收到服务器端发送的连接确认，因此就重新发送了连接请求。滞留的连接请求并不是丢失，之后还是会到达服务器。如果不进行第三次握手，那么服务器会误认为客户端重新请求连接，然后打开了连接。但是并不是客户端真正打开这个连接，因此客户端不会给服务器发送数据，这个连接就白白浪费了。")]),a._v(" "),r("h3",{attrs:{id:"tcp-的四次挥手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-的四次挥手"}},[a._v("#")]),a._v(" TCP 的四次挥手")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-63aa078e72109edb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("以下描述不讨论序号和确认号，因为序号和确认号的规则比较简单。并且不讨论 ACK，因为 ACK 在连接建立之后都为 1。")]),a._v(" "),r("ol",[r("li",[a._v("A 发送连接释放报文段，FIN=1；")]),a._v(" "),r("li",[a._v("B 收到之后发出确认，此时 TCP 属于半关闭状态，B 能向 A 发送数据但是 A 不能向 B 发送数据；")]),a._v(" "),r("li",[a._v("当 B 要不再需要连接时，发送连接释放请求报文段，FIN=1")]),a._v(" "),r("li",[a._v("A 收到后发出确认，进入 TIME-WAIT 状态，等待 2MSL 时间后释放连接。")]),a._v(" "),r("li",[a._v("B 收到 A 的确认后释放连接。")])]),a._v(" "),r("p",[r("strong",[a._v("四次挥手的原因")])]),a._v(" "),r("p",[a._v("客户端发送了 FIN 连接释放报文之后，服务器收到了这个报文，就进入了 CLOSE-WAIT 状态。这个状态是为了让服务器端发送还未传送完毕的数据，传送完毕之后，服务器会发送 FIN 连接释放报文。")]),a._v(" "),r("p",[r("strong",[a._v("TIME_WAIT")])]),a._v(" "),r("p",[a._v("客户端接收到服务器端的 FIN 报文后进入此状态，此时并不是直接进入 CLOSED 状态，还需要等待一个时间计时器设置的时间 2MSL。这么做有两个理由：")]),a._v(" "),r("ol",[r("li",[a._v("确保最后一个确认报文段能够到达。如果 B 没收到 A 发送来的确认报文段，那么就会重新发送连接释放请求报文段，A 等待一段时间就是为了处理这种情况的发生。")]),a._v(" "),r("li",[a._v("等待一段时间是为了让本连接持续时间内所产生的所有报文段都从网络中消失，使得下一个新的连接不会出现旧的连接请求报文段。")])]),a._v(" "),r("h3",{attrs:{id:"tcp-滑动窗口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-滑动窗口"}},[a._v("#")]),a._v(" TCP 滑动窗口")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-0192c1071c25e84c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("窗口是缓存的一部分，用来暂时存放字节流。发送方和接收方各有一个窗口，接收方通过 TCP 报文段中的窗口字段告诉发送方自己的窗口大小，发送方根据这个值和其它信息设置自己的窗口大小。")]),a._v(" "),r("p",[a._v("发送窗口内的字节都允许被发送，接收窗口内的字节都允许被接收。如果发送窗口左部的字节已经发送并且收到了确认，那么就将发送窗口向右滑动一定距离，直到左部第一个字节不是已发送并且已确认的状态；接收窗口的滑动类似，接收窗口左部字节已经发送确认并交付主机，就向右滑动接收窗口。")]),a._v(" "),r("p",[a._v("接收窗口只会对窗口内最后一个按序到达的字节进行确认，例如接收窗口已经收到的字节为 {31, 32, 34, 35}，其中 {31, 32} 按序到达，而 {34, 35} 就不是，因此只对字节 32 进行确认。发送方得到一个字节的确认之后，就知道这个字节之前的所有字节都已经被接收。")]),a._v(" "),r("h3",{attrs:{id:"tcp-可靠传输"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-可靠传输"}},[a._v("#")]),a._v(" TCP 可靠传输")]),a._v(" "),r("p",[a._v("TCP 使用超时重传来实现可靠传输：如果一个已经发送的报文段在超时时间内没有收到确认，那么就重传这个报文段。")]),a._v(" "),r("p",[a._v("一个报文段从发送再到接收到确认所经过的时间称为往返时间 RTT，加权平均往返时间 RTTs 计算如下：")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-08cb7ea59672382d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("超时时间 RTO 应该略大于 RTTs，TCP 使用的超时时间计算如下：")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-14284a950b48895e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("其中 RTTd 为偏差。")]),a._v(" "),r("h3",{attrs:{id:"tcp-流量控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-流量控制"}},[a._v("#")]),a._v(" TCP 流量控制")]),a._v(" "),r("p",[a._v("流量控制是为了控制发送方发送速率，保证接收方来得及接收。")]),a._v(" "),r("p",[a._v("接收方发送的确认报文中的窗口字段可以用来控制发送方窗口大小，从而影响发送方的发送速率。将窗口字段设置为 0，则发送方不能发送数据。")]),a._v(" "),r("h3",{attrs:{id:"tcp-拥塞控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-拥塞控制"}},[a._v("#")]),a._v(" TCP 拥塞控制")]),a._v(" "),r("p",[a._v("如果网络出现拥塞，分组将会丢失，此时发送方会继续重传，从而导致网络拥塞程度更高。因此当出现拥塞时，应当控制发送方的速率。这一点和流量控制很像，但是出发点不同。流量控制是为了让接收方能来得及接受，而拥塞控制是为了降低整个网络的拥塞程度。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-783a70377a84ba3a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("TCP 主要通过四种算法来进行拥塞控制：慢开始、拥塞避免、快重传、快恢复。发送方需要维护有一个叫做拥塞窗口（cwnd）的状态变量。注意拥塞窗口与发送方窗口的区别，拥塞窗口只是一个状态变量，实际决定发送方能发送多少数据的是发送方窗口。")]),a._v(" "),r("p",[a._v("为了便于讨论，做如下假设：")]),a._v(" "),r("ol",[r("li",[a._v("接收方有足够大的接收缓存，因此不会发生流量控制；")]),a._v(" "),r("li",[a._v("虽然 TCP 的窗口基于字节，但是这里设窗口的大小单位为报文段。")])]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-d8403d4375934832.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"慢开始与拥塞避免"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#慢开始与拥塞避免"}},[a._v("#")]),a._v(" 慢开始与拥塞避免")]),a._v(" "),r("p",[a._v("发送的最初执行慢开始，令 cwnd=1，发送方只能发送 1 个报文段；当收到确认后，将 cwnd 加倍，因此之后发送方能够发送的报文段数量为：2、4、8 …")]),a._v(" "),r("p",[a._v("注意到慢开始每个轮次都将 cwnd 加倍，这样会让 cwnd 增长速度非常快，从而使得发送方发送的速度增长速度过快，网络拥塞的可能也就更高。设置一个慢开始门限 ssthresh，当 cwnd >= ssthresh 时，进入拥塞避免，每个轮次只将 cwnd 加 1。")]),a._v(" "),r("p",[a._v("如果出现了超时，则令 ssthresh = cwnd/2，然后重新执行慢开始。")]),a._v(" "),r("h3",{attrs:{id:"快重传与快恢复"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#快重传与快恢复"}},[a._v("#")]),a._v(" 快重传与快恢复")]),a._v(" "),r("p",[a._v("在接收方，要求每次接收到报文段都应该发送对已收到有序报文段的确认，例如已经接收到 M1 和 M2，此时收到 M4，应当发送对 M2 的确认。")]),a._v(" "),r("p",[a._v("在发送方，如果收到三个重复确认，那么可以确认下一个报文段丢失，例如收到三个 M2 ，则 M3 丢失。此时执行快重传，立即重传下一个报文段。")]),a._v(" "),r("p",[a._v("在这种情况下，只是丢失个别报文段，而不是网络拥塞，因此执行快恢复，令 ssthresh = cwnd/2 ，cwnd = ssthresh，注意到此时直接进入拥塞避免。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-959c608a1e45df4c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h2",{attrs:{id:"六-、应用层"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、应用层"}},[a._v("#")]),a._v(" （六）、应用层")]),a._v(" "),r("h3",{attrs:{id:"域名系统-dns"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#域名系统-dns"}},[a._v("#")]),a._v(" 域名系统 DNS")]),a._v(" "),r("p",[a._v("把主机名解析为 IP 地址。")]),a._v(" "),r("p",[a._v("被设计成分布式系统。")]),a._v(" "),r("p",[a._v("###. 层次结构")]),a._v(" "),r("p",[a._v("一个域名由多个层次构成，从上层到下层分别为顶级域名、二级域名、三级域名以及四级域名。所有域名可以画成一颗域名树。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-1ea61f3c18bed233.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-9fabcf934d7d8bc8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("域名服务器可以分为以下四类：")]),a._v(" "),r("ul",[r("li",[a._v("根域名服务器：解析顶级域名；")]),a._v(" "),r("li",[a._v("顶级域名服务器：解析二级域名；")]),a._v(" "),r("li",[a._v("权限域名服务器：解析区内的域名；")]),a._v(" "),r("li",[a._v("本地域名服务器：也称为默认域名服务器。可以在其中配置高速缓存。")])]),a._v(" "),r("p",[a._v("区和域的概念不同，可以在一个域中划分多个区。图 b 在域 abc.com 中划分了两个区：abc.com 和 y.abc.com")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-e19f2e694aa9e29a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("因此就需要两个权限域名服务器：")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-f16b798383c0cb93.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. 解析过程")]),a._v(" "),r("p",[a._v("主机向本地域名服务器解析的过程采用递归，而本地域名服务器向其它域名服务器解析可以使用递归和迭代两种方式。")]),a._v(" "),r("p",[a._v("迭代的方式下，本地域名服务器向一个域名服务器解析请求解析之后，结果返回到本地域名服务器，然后本地域名服务器继续向其它域名服务器请求解析；而递归的方式下，结果不是直接返回的，而是继续向前请求解析，最后的结果才会返回。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-af68dc94537431e4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"文件传输协议-ftp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#文件传输协议-ftp"}},[a._v("#")]),a._v(" 文件传输协议 FTP")]),a._v(" "),r("p",[a._v("FTP 在运输层使用 TCP，并且需要建立两个并行的 TCP 连接：控制连接和数据连接。控制连接在整个会话期间一直保持打开，而数据连接在数据传送完毕之后就关闭。控制连接使用端口号 21，数据连接使用端口号 20。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-12b848681b888437.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"远程终端协议-telnet"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#远程终端协议-telnet"}},[a._v("#")]),a._v(" 远程终端协议 TELNET")]),a._v(" "),r("p",[a._v("TELNET 用于登录到远程主机上，并且远程主机上的输出也会返回。")]),a._v(" "),r("p",[a._v("TELNET 可以适应许多计算机和操作系统的差异，例如不同操作系统系统的换行符定义。")]),a._v(" "),r("h3",{attrs:{id:"电子邮件协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#电子邮件协议"}},[a._v("#")]),a._v(" 电子邮件协议")]),a._v(" "),r("p",[a._v("一个电子邮件系统由三部分组成：用户代理、邮件服务器以及邮件发送协议和读取协议。其中发送协议常用 SMTP，读取协议常用 POP3 和 IMAP。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-9df78b282645bcc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("p",[a._v("###. POP3")]),a._v(" "),r("p",[a._v("POP3 的特点是只要用户从服务器上读取了邮件，就把该邮件删除。")]),a._v(" "),r("p",[a._v("###. IMAP")]),a._v(" "),r("p",[a._v("IMAP 协议中客户端和服务器上的邮件保持同步，如果不去手动删除邮件，那么服务器上的邮件也不会被删除。IMAP 这种做法可以让用户随时随地去访问服务器上的邮件。IMAP 协议也支持创建自定义的文件夹。")]),a._v(" "),r("p",[a._v("###. SMTP")]),a._v(" "),r("p",[a._v("SMTP 只能发送 ASCII 码，而互联网邮件扩充 MIME 可以发送二进制文件。MIME 并没有改动或者取代 SMTP，而是增加邮件主题的结构，定义了非 ASCII 码的编码规则。")]),a._v(" "),r("p",[r("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/21105806-92c3d67a60211ccb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240",alt:""}})]),a._v(" "),r("h3",{attrs:{id:"动态主机配置协议-dhcp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#动态主机配置协议-dhcp"}},[a._v("#")]),a._v(" 动态主机配置协议 DHCP")]),a._v(" "),r("p",[a._v("DHCP 提供了即插即用的连网方式，用户不再需要去手动配置 IP 地址等信息。")]),a._v(" "),r("p",[a._v("DHCP 配置的内容不仅是 IP 地址，还包括子网掩码、默认路由器 IP 地址、域名服务器的 IP 地址。")]),a._v(" "),r("p",[a._v("工作方式如下：需要 IP 地址的主机广播发送 DHCP 发现报文（将目的地址置为全 1，即 255.255.255.255:67，源地址设置为全 0，即 0.0.0.0:68），DHCP 服务器收到发现报文之后，则在 IP 地址池中取一个地址，发送 DHCP 提供报文给该主机。")]),a._v(" "),r("h3",{attrs:{id:"点对点传输-p2p"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#点对点传输-p2p"}},[a._v("#")]),a._v(" 点对点传输 P2P")]),a._v(" "),r("p",[a._v("把某个文件分发的所有对等集合称为一个洪流。文件的数据单元称为文件块，它的大小是固定的。一个新的对等方加入某个洪流，一开始并没有文件块，但是能够从其它对等方中逐渐地下载到一些文件块，与此同时，它也为别的对等方上传一些文件块。")]),a._v(" "),r("p",[a._v("每个洪流都有一个基础设施，称为追踪器。当一个对等方加入洪流时，必须向追踪器登记，并周期性地通知追踪器它仍在洪流中。可以在任何时间加入和退出某个洪流。")]),a._v(" "),r("p",[a._v("一个新的对等方加入洪流时，追踪器会随机从洪流中选择若干个对等方，并让新对等方与这些对等方建立连接，把这些对等方称为相邻对等方。接收和发送文件块都是在相邻对等方中进行。")]),a._v(" "),r("p",[a._v("当一个对等方需要很多文件块时，通过使用最稀有优先的策略来取得文件块，也就是一个文件块在相邻对等方中副本最少，那么就优先请求这个文件块。")]),a._v(" "),r("p",[a._v("当很多对等方向同一个对等方请求文件块时，该对等方优先选择以最高速率向其发送文件块的对等方。")]),a._v(" "),r("p",[a._v("P2P 是一个分布式系统，任何时候都有对等方加入或者退出。使用分布式散列表 DHT，可以查找洪流中的资源和 IP 地址映射。")]),a._v(" "),r("h3",{attrs:{id:"web-页面请求过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#web-页面请求过程"}},[a._v("#")]),a._v(" Web 页面请求过程")]),a._v(" "),r("p",[a._v("###. DHCP 配置主机信息")]),a._v(" "),r("ul",[r("li",[a._v("假设主机最开始没有 IP 地址以及其它信息，那么就需要先使用 DHCP 来获取。")]),a._v(" "),r("li",[a._v("主机生成一个 DHCP 请求报文，并将这个报文放入具有目的端口 67 和源端口 68 的 UDP 报文段中。")]),a._v(" "),r("li",[a._v("该报文段则被放入在一个具有广播 IP 目的地址(255.255.255.255) 和源 IP 地址（0.0.0.0）的 IP 数据报中。")]),a._v(" "),r("li",[a._v("该数据报则被放置在 MAC 帧中，该帧具有目的地址 FF:FF:FF:FF:FF:FF，将广播到与交换机连接的所有设备。")]),a._v(" "),r("li",[a._v("连接在交换机的 DHCP 服务器收到广播帧之后，不断地向上分解得到 IP 数据报、UDP 报文段、DHCP 请求报文，之后生成 DHCP ACK 报文，该报文包含以下信息：IP 地址、DNS 服务器的 IP 地址、默认网关路由器的 IP 地址和子网掩码。该报文被放入 UDP 报文段中，UDP 报文段有被放入 IP 数据报中，最后放入 MAC 帧中。")]),a._v(" "),r("li",[a._v("该帧的目的地址是请求主机的 MAC 地址，因为交换机具有自学习能力，之前主机发送了广播帧之后就记录了 MAC 地址到其转发接口的交换表项，因此现在交换机就可以直接知道应该向哪个接口发送该帧。")]),a._v(" "),r("li",[a._v("主机收到该帧后，不断分解得到 DHCP 报文。之后就配置它的 IP 地址、子网掩码和 DNS 服务器的 IP 地址，并在其 IP 转发表中安装默认网关。")])]),a._v(" "),r("p",[a._v("###. ARP 解析 MAC 地址")]),a._v(" "),r("ul",[r("li",[a._v("主机通过浏览器生成一个 TCP 套接字，套接字向 HTTP 服务器发送 HTTP 请求。为了生成该套接字，主机需要知道网站的域名对应的 IP 地址。")]),a._v(" "),r("li",[a._v("主机生成一个 DNS 查询报文，该报文具有 53 号端口，因为 DNS 服务器的端口号是 53。")]),a._v(" "),r("li",[a._v("该 DNS 查询报文被放入目的地址为 DNS 服务器 IP 地址的 IP 数据报中。")]),a._v(" "),r("li",[a._v("该 IP 数据报被放入一个以太网帧中，该帧将发送到网关路由器。")]),a._v(" "),r("li",[a._v("DHCP 过程只知道网关路由器的 IP 地址，为了获取网关路由器的 MAC 地址，需要使用 ARP 协议。")]),a._v(" "),r("li",[a._v("主机生成一个包含目的地址为网关路由器 IP 地址的 ARP 查询报文，将该 ARP 查询报文放入一个具有广播目的地址（FF:FF:FF:FF:FF:FF）的以太网帧中，并向交换机发送该以太网帧，交换机将该帧转发给所有的连接设备，包括网关路由器。")]),a._v(" "),r("li",[a._v("网关路由器接收到该帧后，不断向上分解得到 ARP 报文，发现其中的 IP 地址与其接口的 IP 地址匹配，因此就发送一个 ARP 回答报文，包含了它的 MAC 地址，发回给主机。")])]),a._v(" "),r("p",[a._v("###. DNS 解析域名")]),a._v(" "),r("ul",[r("li",[a._v("知道了网关路由器的 MAC 地址之后，就可以继续 DNS 的解析过程了。")]),a._v(" "),r("li",[a._v("网关路由器接收到包含 DNS 查询报文的以太网帧后，抽取出 IP 数据报，并根据转发表决定该 IP 数据报应该转发的路由器。")]),a._v(" "),r("li",[a._v("因为路由器具有内部网关协议（RIP、OSPF）和外部网关协议（BGP）这两种路由选择协议，因此路由表中已经配置了网关路由器到达 DNS 服务器的路由表项。")]),a._v(" "),r("li",[a._v("到达 DNS 服务器之后，DNS 服务器抽取出 DNS 查询报文，并在 DNS 数据库中查找待解析的域名。")]),a._v(" "),r("li",[a._v("找到 DNS 记录之后，发送 DNS 回答报文，将该回答报文放入 UDP 报文段中，然后放入 IP 数据报中，通过路由器反向转发回网关路由器，并经过以太网交换机到达主机。")])]),a._v(" "),r("p",[a._v("###. HTTP 请求页面")]),a._v(" "),r("ul",[r("li",[a._v("有了 HTTP 服务器的 IP 地址之后，主机就能够生成 TCP 套接字，该套接字将用于向 Web 服务器发送 HTTP GET 报文。")]),a._v(" "),r("li",[a._v("在生成 TCP 套接字之前，必须先与 HTTP 服务器进行三次握手来建立连接。生成一个具有目的端口 80 的 TCP SYN 报文段，并向 HTTP 服务器发送该报文段。")]),a._v(" "),r("li",[a._v("HTTP 服务器收到该报文段之后，生成 TCP SYNACK 报文段，发回给主机。")]),a._v(" "),r("li",[a._v("连接建立之后，浏览器生成 HTTP GET 报文，并交付给 HTTP 服务器。")]),a._v(" "),r("li",[a._v("HTTP 服务器从 TCP 套接字读取 HTTP GET 报文，生成一个 HTTP 响应报文，将 Web 页面内容放入报文主体中，发回给主机。")]),a._v(" "),r("li",[a._v("浏览器收到 HTTP 响应报文后，抽取出 Web 页面内容，之后进行渲染，显示 Web 页面。")])]),a._v(" "),r("h3",{attrs:{id:"常用端口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#常用端口"}},[a._v("#")]),a._v(" 常用端口")]),a._v(" "),r("table",[r("thead",[r("tr",[r("th",[a._v("应用层协议")]),a._v(" "),r("th",{staticStyle:{"text-align":"center"}},[a._v("端口号")]),a._v(" "),r("th",{staticStyle:{"text-align":"right"}},[a._v("运输层协议")])])]),a._v(" "),r("tbody",[r("tr",[r("td",[a._v("DNS")]),a._v(" "),r("td",{staticStyle:{"text-align":"center"}},[a._v("53")]),a._v(" "),r("td",{staticStyle:{"text-align":"right"}},[a._v("UDP")])]),a._v(" "),r("tr",[r("td",[a._v("FTP")]),a._v(" "),r("td",{staticStyle:{"text-align":"center"}},[a._v("控制连接 21，数据连接 20")]),a._v(" "),r("td",{staticStyle:{"text-align":"right"}},[a._v("TCP")])]),a._v(" "),r("tr",[r("td",[a._v("TELNET")]),a._v(" "),r("td",{staticStyle:{"text-align":"center"}},[a._v("23")]),a._v(" "),r("td",{staticStyle:{"text-align":"right"}},[a._v("TCP")])]),a._v(" "),r("tr",[r("td",[a._v("DHCP")]),a._v(" "),r("td",{staticStyle:{"text-align":"center"}},[a._v("67 68")]),a._v(" "),r("td",{staticStyle:{"text-align":"right"}},[a._v("UDP")])]),a._v(" "),r("tr",[r("td",[a._v("HTTP")]),a._v(" "),r("td",{staticStyle:{"text-align":"center"}},[a._v("80")]),a._v(" "),r("td",{staticStyle:{"text-align":"right"}},[a._v("TCP")])]),a._v(" "),r("tr",[r("td",[a._v("SMTP")]),a._v(" "),r("td",{staticStyle:{"text-align":"center"}},[a._v("25")]),a._v(" "),r("td",{staticStyle:{"text-align":"right"}},[a._v("TCP")])]),a._v(" "),r("tr",[r("td",[a._v("POP3")]),a._v(" "),r("td",{staticStyle:{"text-align":"center"}},[a._v("110")]),a._v(" "),r("td",{staticStyle:{"text-align":"right"}},[a._v("TCP")])]),a._v(" "),r("tr",[r("td",[a._v("IMAP")]),a._v(" "),r("td",{staticStyle:{"text-align":"center"}},[a._v("143")]),a._v(" "),r("td",{staticStyle:{"text-align":"right"}},[a._v("TCP")])])])]),a._v(" "),r("h1",{attrs:{id:"三、http"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、http"}},[a._v("#")]),a._v(" 三、HTTP")]),a._v(" "),r("h2",{attrs:{id:"一-、基本概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、基本概念"}},[a._v("#")]),a._v(" （一）、基本概念")]),a._v(" "),r("h3",{attrs:{id:"_1-web-基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-web-基础"}},[a._v("#")]),a._v(" 1. Web 基础")]),a._v(" "),r("h3",{attrs:{id:"_2-url"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-url"}},[a._v("#")]),a._v(" 2. URL")]),a._v(" "),r("h3",{attrs:{id:"_3-请求和响应报文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-请求和响应报文"}},[a._v("#")]),a._v(" 3. 请求和响应报文")]),a._v(" "),r("h4",{attrs:{id:"_1-请求报文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-请求报文"}},[a._v("#")]),a._v(" ⑴. 请求报文")]),a._v(" "),r("h4",{attrs:{id:"_2-响应报文"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-响应报文"}},[a._v("#")]),a._v(" ⑵. 响应报文")]),a._v(" "),r("h2",{attrs:{id:"二-、http方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、http方法"}},[a._v("#")]),a._v(" （二）、HTTP方法")]),a._v(" "),r("h3",{attrs:{id:"_1-get"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-get"}},[a._v("#")]),a._v(" 1. GET")]),a._v(" "),r("h3",{attrs:{id:"_2-post"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-post"}},[a._v("#")]),a._v(" 2. POST")]),a._v(" "),r("h3",{attrs:{id:"_3-head"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-head"}},[a._v("#")]),a._v(" 3. HEAD")]),a._v(" "),r("h3",{attrs:{id:"_4-put"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-put"}},[a._v("#")]),a._v(" 4. PUT")]),a._v(" "),r("h3",{attrs:{id:"_5-patch"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-patch"}},[a._v("#")]),a._v(" 5. PATCH")]),a._v(" "),r("h3",{attrs:{id:"_6-delete"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-delete"}},[a._v("#")]),a._v(" 6. DELETE")]),a._v(" "),r("h3",{attrs:{id:"_7-options"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-options"}},[a._v("#")]),a._v(" 7. OPTIONS")]),a._v(" "),r("h3",{attrs:{id:"_8-connect"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-connect"}},[a._v("#")]),a._v(" 8. CONNECT")]),a._v(" "),r("h3",{attrs:{id:"_9-trace"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-trace"}},[a._v("#")]),a._v(" 9. TRACE")]),a._v(" "),r("h2",{attrs:{id:"三-、http状态码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、http状态码"}},[a._v("#")]),a._v(" （三）、HTTP状态码")]),a._v(" "),r("h3",{attrs:{id:"_1-2xx-成功"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-2xx-成功"}},[a._v("#")]),a._v(" 1. 2XX 成功")]),a._v(" "),r("h3",{attrs:{id:"_2-3xx-重定向"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-3xx-重定向"}},[a._v("#")]),a._v(" 2. 3XX 重定向")]),a._v(" "),r("h3",{attrs:{id:"_3-4xx-客户端错误"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-4xx-客户端错误"}},[a._v("#")]),a._v(" 3. 4XX 客户端错误")]),a._v(" "),r("h3",{attrs:{id:"_4-5xx-服务器错误"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-5xx-服务器错误"}},[a._v("#")]),a._v(" 4. 5XX 服务器错误")]),a._v(" "),r("h2",{attrs:{id:"四-、http首都"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、http首都"}},[a._v("#")]),a._v(" （四）、HTTP首都")]),a._v(" "),r("h3",{attrs:{id:"_1-通用首部字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-通用首部字段"}},[a._v("#")]),a._v(" 1. 通用首部字段")]),a._v(" "),r("h3",{attrs:{id:"_2-请求首部字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-请求首部字段"}},[a._v("#")]),a._v(" 2. 请求首部字段")]),a._v(" "),r("h3",{attrs:{id:"_3-响应首部字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-响应首部字段"}},[a._v("#")]),a._v(" 3. 响应首部字段")]),a._v(" "),r("h3",{attrs:{id:"_4-实体首部字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-实体首部字段"}},[a._v("#")]),a._v(" 4. 实体首部字段")]),a._v(" "),r("h2",{attrs:{id:"五-、具体应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、具体应用"}},[a._v("#")]),a._v(" （五）、具体应用")]),a._v(" "),r("h3",{attrs:{id:"_1-cookie"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-cookie"}},[a._v("#")]),a._v(" 1. Cookie")]),a._v(" "),r("h4",{attrs:{id:"_1-创建过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建过程"}},[a._v("#")]),a._v(" ⑴. 创建过程")]),a._v(" "),r("h4",{attrs:{id:"_2-set-cookie"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-set-cookie"}},[a._v("#")]),a._v(" ⑵. Set-Cookie")]),a._v(" "),r("h4",{attrs:{id:"_3-session-和-cookie-区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-session-和-cookie-区别"}},[a._v("#")]),a._v(" ⑶. Session 和 Cookie 区别")]),a._v(" "),r("h4",{attrs:{id:"_4-浏览器禁用-cookie-的情况"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-浏览器禁用-cookie-的情况"}},[a._v("#")]),a._v(" ⑷. 浏览器禁用 Cookie 的情况")]),a._v(" "),r("h4",{attrs:{id:"_5-使用-cookie-实现用户名和密码的自动填写"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-使用-cookie-实现用户名和密码的自动填写"}},[a._v("#")]),a._v(" ⑸. 使用 Cookie 实现用户名和密码的自动填写")]),a._v(" "),r("h3",{attrs:{id:"_2-缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-缓存"}},[a._v("#")]),a._v(" 2. 缓存")]),a._v(" "),r("h4",{attrs:{id:"_1-优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-优点"}},[a._v("#")]),a._v(" ⑴. 优点")]),a._v(" "),r("h4",{attrs:{id:"_2-实现方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现方法"}},[a._v("#")]),a._v(" ⑵. 实现方法")]),a._v(" "),r("h4",{attrs:{id:"_3-cache-control-字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-cache-control-字段"}},[a._v("#")]),a._v(" ⑶. Cache-Control 字段")]),a._v(" "),r("h4",{attrs:{id:"_4-no-cache-指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-no-cache-指令"}},[a._v("#")]),a._v(" ⑷. no-cache 指令")]),a._v(" "),r("h4",{attrs:{id:"_5-no-store-指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-no-store-指令"}},[a._v("#")]),a._v(" ⑸. no-store 指令")]),a._v(" "),r("h4",{attrs:{id:"_6-max-age-指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-max-age-指令"}},[a._v("#")]),a._v(" ⑹. max-age 指令")]),a._v(" "),r("h3",{attrs:{id:"_3-持久连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-持久连接"}},[a._v("#")]),a._v(" 3. 持久连接")]),a._v(" "),r("h3",{attrs:{id:"_4-编码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-编码"}},[a._v("#")]),a._v(" 4. 编码")]),a._v(" "),r("h3",{attrs:{id:"_5-分块传输"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-分块传输"}},[a._v("#")]),a._v(" 5. 分块传输")]),a._v(" "),r("h3",{attrs:{id:"_6-多部分对象集合"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-多部分对象集合"}},[a._v("#")]),a._v(" 6. 多部分对象集合")]),a._v(" "),r("h3",{attrs:{id:"_7-范围请求"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-范围请求"}},[a._v("#")]),a._v(" 7. 范围请求")]),a._v(" "),r("h3",{attrs:{id:"_8-内容协商"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-内容协商"}},[a._v("#")]),a._v(" 8. 内容协商")]),a._v(" "),r("h3",{attrs:{id:"_9-虚拟主机"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-虚拟主机"}},[a._v("#")]),a._v(" 9. 虚拟主机")]),a._v(" "),r("h3",{attrs:{id:"_10-通信数据转发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-通信数据转发"}},[a._v("#")]),a._v(" 10. 通信数据转发")]),a._v(" "),r("h4",{attrs:{id:"_1-代理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-代理"}},[a._v("#")]),a._v(" ⑴. 代理")]),a._v(" "),r("h4",{attrs:{id:"_2-网关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-网关"}},[a._v("#")]),a._v(" ⑵. 网关")]),a._v(" "),r("h4",{attrs:{id:"_3-隧道"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-隧道"}},[a._v("#")]),a._v(" ⑶. 隧道")]),a._v(" "),r("h2",{attrs:{id:"六-、htpps"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、htpps"}},[a._v("#")]),a._v(" （六）、HTPPs")]),a._v(" "),r("h3",{attrs:{id:"_1-加密"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-加密"}},[a._v("#")]),a._v(" 1. 加密")]),a._v(" "),r("h4",{attrs:{id:"_1-对称密钥"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-对称密钥"}},[a._v("#")]),a._v(" ⑴. 对称密钥")]),a._v(" "),r("h4",{attrs:{id:"_2-公开密钥"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-公开密钥"}},[a._v("#")]),a._v(" ⑵. 公开密钥")]),a._v(" "),r("h4",{attrs:{id:"_3-https-采用的加密方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-https-采用的加密方式"}},[a._v("#")]),a._v(" ⑶. HTTPs 采用的加密方式")]),a._v(" "),r("h3",{attrs:{id:"_2-认证"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-认证"}},[a._v("#")]),a._v(" 2. 认证")]),a._v(" "),r("h3",{attrs:{id:"_3-完整性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-完整性"}},[a._v("#")]),a._v(" 3. 完整性")]),a._v(" "),r("h2",{attrs:{id:"七-、web攻击技术"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、web攻击技术"}},[a._v("#")]),a._v(" （七）、Web攻击技术")]),a._v(" "),r("h3",{attrs:{id:"_1-攻击模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-攻击模式"}},[a._v("#")]),a._v(" 1. 攻击模式")]),a._v(" "),r("h4",{attrs:{id:"_1-主动攻击"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-主动攻击"}},[a._v("#")]),a._v(" ⑴. 主动攻击")]),a._v(" "),r("h4",{attrs:{id:"_2-被动攻击"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-被动攻击"}},[a._v("#")]),a._v(" ⑵. 被动攻击")]),a._v(" "),r("h3",{attrs:{id:"_2-跨站脚本攻击"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-跨站脚本攻击"}},[a._v("#")]),a._v(" 2. 跨站脚本攻击")]),a._v(" "),r("h4",{attrs:{id:"_1-概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念"}},[a._v("#")]),a._v(" ⑴. 概念")]),a._v(" "),r("h4",{attrs:{id:"_2-危害"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-危害"}},[a._v("#")]),a._v(" ⑵. 危害")]),a._v(" "),r("h4",{attrs:{id:"_3-防范手段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-防范手段"}},[a._v("#")]),a._v(" ⑶. 防范手段")]),a._v(" "),r("h3",{attrs:{id:"_3-sql-注入攻击"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-sql-注入攻击"}},[a._v("#")]),a._v(" 3. SQL 注入攻击")]),a._v(" "),r("h4",{attrs:{id:"_1-概念-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念-2"}},[a._v("#")]),a._v(" ⑴. 概念")]),a._v(" "),r("h4",{attrs:{id:"_2-攻击原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-攻击原理"}},[a._v("#")]),a._v(" ⑵. 攻击原理")]),a._v(" "),r("h4",{attrs:{id:"_3-危害"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-危害"}},[a._v("#")]),a._v(" ⑶. 危害")]),a._v(" "),r("h4",{attrs:{id:"_4-防范手段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-防范手段"}},[a._v("#")]),a._v(" ⑷. 防范手段")]),a._v(" "),r("h3",{attrs:{id:"_4-跨站点请求伪造"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-跨站点请求伪造"}},[a._v("#")]),a._v(" 4. 跨站点请求伪造")]),a._v(" "),r("h4",{attrs:{id:"_1-概念-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念-3"}},[a._v("#")]),a._v(" ⑴. 概念")]),a._v(" "),r("h4",{attrs:{id:"_2-防范手段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-防范手段"}},[a._v("#")]),a._v(" ⑵. 防范手段")]),a._v(" "),r("h3",{attrs:{id:"_5-拒绝服务攻击"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-拒绝服务攻击"}},[a._v("#")]),a._v(" 5. 拒绝服务攻击")]),a._v(" "),r("h4",{attrs:{id:"_1-概念-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念-4"}},[a._v("#")]),a._v(" ⑴. 概念")]),a._v(" "),r("h2",{attrs:{id:"八-、各版本比较"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八-、各版本比较"}},[a._v("#")]),a._v(" （八）、各版本比较")]),a._v(" "),r("h3",{attrs:{id:"_1-http-1-0-与-http-1-1-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-1-0-与-http-1-1-的区别"}},[a._v("#")]),a._v(" 1. HTTP/1.0 与 HTTP/1.1 的区别")]),a._v(" "),r("h3",{attrs:{id:"_2-http-1-1-与-http-2-0-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-1-1-与-http-2-0-的区别"}},[a._v("#")]),a._v(" 2. HTTP/1.1 与 HTTP/2.0 的区别")]),a._v(" "),r("h4",{attrs:{id:"_1-多路复用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-多路复用"}},[a._v("#")]),a._v(" ⑴. 多路复用")]),a._v(" "),r("h4",{attrs:{id:"_2-首部压缩"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-首部压缩"}},[a._v("#")]),a._v(" ⑵. 首部压缩")]),a._v(" "),r("h4",{attrs:{id:"_3-服务端推送"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-服务端推送"}},[a._v("#")]),a._v(" ⑶. 服务端推送")]),a._v(" "),r("h4",{attrs:{id:"_4-二进制格式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-二进制格式"}},[a._v("#")]),a._v(" ⑷. 二进制格式")]),a._v(" "),r("h1",{attrs:{id:"四、操作系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、操作系统"}},[a._v("#")]),a._v(" 四、操作系统")]),a._v(" "),r("h2",{attrs:{id:"一-、概述-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、概述-2"}},[a._v("#")]),a._v(" （一）、概述")]),a._v(" "),r("h3",{attrs:{id:"_1-操作系统基本特征"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-操作系统基本特征"}},[a._v("#")]),a._v(" 1. 操作系统基本特征")]),a._v(" "),r("h4",{attrs:{id:"_1-并发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-并发"}},[a._v("#")]),a._v(" ⑴. 并发")]),a._v(" "),r("h4",{attrs:{id:"_2-共享"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-共享"}},[a._v("#")]),a._v(" ⑵. 共享")]),a._v(" "),r("h4",{attrs:{id:"_3-虚拟"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-虚拟"}},[a._v("#")]),a._v(" ⑶. 虚拟")]),a._v(" "),r("h4",{attrs:{id:"_4-异步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-异步"}},[a._v("#")]),a._v(" ⑷. 异步")]),a._v(" "),r("h3",{attrs:{id:"_2-操作系统基本功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-操作系统基本功能"}},[a._v("#")]),a._v(" 2. 操作系统基本功能")]),a._v(" "),r("h4",{attrs:{id:"_1-进程管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-进程管理"}},[a._v("#")]),a._v(" ⑴. 进程管理")]),a._v(" "),r("h4",{attrs:{id:"_2-内存管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-内存管理"}},[a._v("#")]),a._v(" ⑵. 内存管理")]),a._v(" "),r("h4",{attrs:{id:"_3-文件管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-文件管理"}},[a._v("#")]),a._v(" ⑶. 文件管理")]),a._v(" "),r("h4",{attrs:{id:"_4-设备管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-设备管理"}},[a._v("#")]),a._v(" ⑷. 设备管理")]),a._v(" "),r("h3",{attrs:{id:"_3-系统调用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-系统调用"}},[a._v("#")]),a._v(" 3. 系统调用")]),a._v(" "),r("h3",{attrs:{id:"_4-大内核和微内核"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-大内核和微内核"}},[a._v("#")]),a._v(" 4. 大内核和微内核")]),a._v(" "),r("h4",{attrs:{id:"_1-大内核"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-大内核"}},[a._v("#")]),a._v(" ⑴. 大内核")]),a._v(" "),r("h4",{attrs:{id:"_2-微内核"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-微内核"}},[a._v("#")]),a._v(" ⑵. 微内核")]),a._v(" "),r("h3",{attrs:{id:"_5-中断分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-中断分类"}},[a._v("#")]),a._v(" 5. 中断分类")]),a._v(" "),r("h3",{attrs:{id:"_6-外中断"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-外中断"}},[a._v("#")]),a._v(" 6. 外中断")]),a._v(" "),r("h3",{attrs:{id:"_7-异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-异常"}},[a._v("#")]),a._v(" 7. 异常")]),a._v(" "),r("h3",{attrs:{id:"_8-陷入"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-陷入"}},[a._v("#")]),a._v(" 8. 陷入")]),a._v(" "),r("h2",{attrs:{id:"二-、进程管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、进程管理"}},[a._v("#")]),a._v(" （二）、进程管理")]),a._v(" "),r("h3",{attrs:{id:"_1-进程与线程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-进程与线程"}},[a._v("#")]),a._v(" 1. 进程与线程")]),a._v(" "),r("h4",{attrs:{id:"_1-进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-进程"}},[a._v("#")]),a._v(" ⑴. 进程")]),a._v(" "),r("h4",{attrs:{id:"_2-线程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-线程"}},[a._v("#")]),a._v(" ⑵. 线程")]),a._v(" "),r("h4",{attrs:{id:"_3-区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-区别"}},[a._v("#")]),a._v(" ⑶. 区别")]),a._v(" "),r("h3",{attrs:{id:"_2-进程状态的切换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-进程状态的切换"}},[a._v("#")]),a._v(" 2. 进程状态的切换")]),a._v(" "),r("h3",{attrs:{id:"_3-调度算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-调度算法"}},[a._v("#")]),a._v(" 3. 调度算法")]),a._v(" "),r("h4",{attrs:{id:"_1-批处理系统中的调度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-批处理系统中的调度"}},[a._v("#")]),a._v(" ⑴. 批处理系统中的调度")]),a._v(" "),r("h5",{attrs:{id:"_1-先来先服务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-先来先服务"}},[a._v("#")]),a._v(" ①. 先来先服务")]),a._v(" "),r("h5",{attrs:{id:"_2-短作业优先"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-短作业优先"}},[a._v("#")]),a._v(" ②. 短作业优先")]),a._v(" "),r("h5",{attrs:{id:"_3-最短剩余时间优先"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-最短剩余时间优先"}},[a._v("#")]),a._v(" ③. 最短剩余时间优先")]),a._v(" "),r("h4",{attrs:{id:"_2-交互式系统中的调度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-交互式系统中的调度"}},[a._v("#")]),a._v(" ⑵. 交互式系统中的调度")]),a._v(" "),r("h5",{attrs:{id:"_1-优先级调度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-优先级调度"}},[a._v("#")]),a._v(" ①. 优先级调度")]),a._v(" "),r("h5",{attrs:{id:"_2-时间片轮转"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-时间片轮转"}},[a._v("#")]),a._v(" ②. 时间片轮转")]),a._v(" "),r("h5",{attrs:{id:"_3-多级反馈队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-多级反馈队列"}},[a._v("#")]),a._v(" ③. 多级反馈队列")]),a._v(" "),r("h4",{attrs:{id:"_3-实时系统中的调度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-实时系统中的调度"}},[a._v("#")]),a._v(" ⑶. 实时系统中的调度")]),a._v(" "),r("h3",{attrs:{id:"_4-进程同步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-进程同步"}},[a._v("#")]),a._v(" 4. 进程同步")]),a._v(" "),r("h4",{attrs:{id:"_1-临界区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-临界区"}},[a._v("#")]),a._v(" ⑴. 临界区")]),a._v(" "),r("h4",{attrs:{id:"_2-同步与互斥"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-同步与互斥"}},[a._v("#")]),a._v(" ⑵. 同步与互斥")]),a._v(" "),r("h4",{attrs:{id:"_3-信号量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-信号量"}},[a._v("#")]),a._v(" ⑶. 信号量")]),a._v(" "),r("h4",{attrs:{id:"_4-管程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-管程"}},[a._v("#")]),a._v(" ⑷. 管程")]),a._v(" "),r("h3",{attrs:{id:"_5-经典同步问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-经典同步问题"}},[a._v("#")]),a._v(" 5. 经典同步问题")]),a._v(" "),r("h4",{attrs:{id:"_1-读者-写者问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-读者-写者问题"}},[a._v("#")]),a._v(" ⑴. 读者-写者问题")]),a._v(" "),r("h4",{attrs:{id:"_2-哲学家进餐问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-哲学家进餐问题"}},[a._v("#")]),a._v(" ⑵. 哲学家进餐问题")]),a._v(" "),r("h3",{attrs:{id:"_6-进程通信"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-进程通信"}},[a._v("#")]),a._v(" 6. 进程通信")]),a._v(" "),r("h4",{attrs:{id:"_1-进程同步与进程通信的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-进程同步与进程通信的区别"}},[a._v("#")]),a._v(" ⑴. 进程同步与进程通信的区别")]),a._v(" "),r("h4",{attrs:{id:"_2-进程通信方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-进程通信方式"}},[a._v("#")]),a._v(" ⑵. 进程通信方式")]),a._v(" "),r("h5",{attrs:{id:"_1-消息传递"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-消息传递"}},[a._v("#")]),a._v(" ①. 消息传递")]),a._v(" "),r("h5",{attrs:{id:"_2-共享内存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-共享内存"}},[a._v("#")]),a._v(" ②. 共享内存")]),a._v(" "),r("h2",{attrs:{id:"三-、死锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、死锁"}},[a._v("#")]),a._v(" （三）、死锁")]),a._v(" "),r("h3",{attrs:{id:"_1-死锁的必要条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-死锁的必要条件"}},[a._v("#")]),a._v(" 1. 死锁的必要条件")]),a._v(" "),r("h3",{attrs:{id:"_2-死锁的处理方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-死锁的处理方法"}},[a._v("#")]),a._v(" 2. 死锁的处理方法")]),a._v(" "),r("h4",{attrs:{id:"_1-鸵鸟策略"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-鸵鸟策略"}},[a._v("#")]),a._v(" ⑴. 鸵鸟策略")]),a._v(" "),r("h4",{attrs:{id:"_2-死锁检测与死锁恢复"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-死锁检测与死锁恢复"}},[a._v("#")]),a._v(" ⑵. 死锁检测与死锁恢复")]),a._v(" "),r("h4",{attrs:{id:"_3-死锁预防"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-死锁预防"}},[a._v("#")]),a._v(" ⑶. 死锁预防")]),a._v(" "),r("h4",{attrs:{id:"_4-死锁避免"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-死锁避免"}},[a._v("#")]),a._v(" ⑷. 死锁避免")]),a._v(" "),r("h2",{attrs:{id:"四-、内存管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、内存管理"}},[a._v("#")]),a._v(" （四）、内存管理")]),a._v(" "),r("h3",{attrs:{id:"_1-虚拟内存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-虚拟内存"}},[a._v("#")]),a._v(" 1. 虚拟内存")]),a._v(" "),r("h3",{attrs:{id:"_2-分页与分段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-分页与分段"}},[a._v("#")]),a._v(" 2. 分页与分段")]),a._v(" "),r("h4",{attrs:{id:"_1-分页"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-分页"}},[a._v("#")]),a._v(" ⑴. 分页")]),a._v(" "),r("h4",{attrs:{id:"_2-分段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-分段"}},[a._v("#")]),a._v(" ⑵. 分段")]),a._v(" "),r("h4",{attrs:{id:"_3-段页式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-段页式"}},[a._v("#")]),a._v(" ⑶. 段页式")]),a._v(" "),r("h4",{attrs:{id:"_4-分页与分段区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-分页与分段区别"}},[a._v("#")]),a._v(" ⑷. 分页与分段区别")]),a._v(" "),r("h3",{attrs:{id:"_3-分页系统地址映射"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-分页系统地址映射"}},[a._v("#")]),a._v(" 3. 分页系统地址映射")]),a._v(" "),r("h3",{attrs:{id:"_4-页面置换算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-页面置换算法"}},[a._v("#")]),a._v(" 4. 页面置换算法")]),a._v(" "),r("h4",{attrs:{id:"_1-最佳"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-最佳"}},[a._v("#")]),a._v(" ⑴. 最佳")]),a._v(" "),r("h4",{attrs:{id:"_2-先进先出"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-先进先出"}},[a._v("#")]),a._v(" ⑵. 先进先出")]),a._v(" "),r("h4",{attrs:{id:"_3-最近最久未使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-最近最久未使用"}},[a._v("#")]),a._v(" ⑶. 最近最久未使用")]),a._v(" "),r("h4",{attrs:{id:"_4-时钟"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-时钟"}},[a._v("#")]),a._v(" ⑷. 时钟")]),a._v(" "),r("h2",{attrs:{id:"五-、设备管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、设备管理"}},[a._v("#")]),a._v(" （五）、设备管理")]),a._v(" "),r("h3",{attrs:{id:"_1-磁盘调度算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-磁盘调度算法"}},[a._v("#")]),a._v(" 1. 磁盘调度算法")]),a._v(" "),r("h4",{attrs:{id:"_1-先来先服务-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-先来先服务-2"}},[a._v("#")]),a._v(" ⑴. 先来先服务")]),a._v(" "),r("h4",{attrs:{id:"_2-最短寻道时间优先"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-最短寻道时间优先"}},[a._v("#")]),a._v(" ⑵. 最短寻道时间优先")]),a._v(" "),r("h4",{attrs:{id:"_3-扫描算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-扫描算法"}},[a._v("#")]),a._v(" ⑶. 扫描算法")]),a._v(" "),r("h4",{attrs:{id:"_4-循环扫描算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-循环扫描算法"}},[a._v("#")]),a._v(" ⑷. 循环扫描算法")]),a._v(" "),r("h2",{attrs:{id:"六-、链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、链接"}},[a._v("#")]),a._v(" （六）、链接")]),a._v(" "),r("h3",{attrs:{id:"_1-编译系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-编译系统"}},[a._v("#")]),a._v(" 1. 编译系统")]),a._v(" "),r("h3",{attrs:{id:"_2-目标文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-目标文件"}},[a._v("#")]),a._v(" 2. 目标文件")]),a._v(" "),r("h3",{attrs:{id:"_3-静态链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-静态链接"}},[a._v("#")]),a._v(" 3. 静态链接")]),a._v(" "),r("h3",{attrs:{id:"_4-动态链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-动态链接"}},[a._v("#")]),a._v(" 4. 动态链接")]),a._v(" "),r("h1",{attrs:{id:"五、linux"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五、linux"}},[a._v("#")]),a._v(" 五、Linux")]),a._v(" "),r("h2",{attrs:{id:"一-、常用操作以及概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、常用操作以及概念"}},[a._v("#")]),a._v(" （一）、常用操作以及概念")]),a._v(" "),r("h3",{attrs:{id:"_1-求助"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-求助"}},[a._v("#")]),a._v(" 1. 求助")]),a._v(" "),r("h4",{attrs:{id:"_1-help"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-help"}},[a._v("#")]),a._v(" ⑴. help")]),a._v(" "),r("h4",{attrs:{id:"_2-man"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-man"}},[a._v("#")]),a._v(" ⑵. man")]),a._v(" "),r("h4",{attrs:{id:"_3-info"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-info"}},[a._v("#")]),a._v(" ⑶. info")]),a._v(" "),r("h3",{attrs:{id:"_2-关机"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-关机"}},[a._v("#")]),a._v(" 2. 关机")]),a._v(" "),r("h4",{attrs:{id:"_1-sync"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-sync"}},[a._v("#")]),a._v(" ⑴. sync")]),a._v(" "),r("h4",{attrs:{id:"_2-shutdown"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-shutdown"}},[a._v("#")]),a._v(" ⑵. shutdown")]),a._v(" "),r("h4",{attrs:{id:"_3-其它关机指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-其它关机指令"}},[a._v("#")]),a._v(" ⑶. 其它关机指令")]),a._v(" "),r("h3",{attrs:{id:"_3-path"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-path"}},[a._v("#")]),a._v(" 3. PATH")]),a._v(" "),r("h3",{attrs:{id:"_4-运行等级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-运行等级"}},[a._v("#")]),a._v(" 4. 运行等级")]),a._v(" "),r("h3",{attrs:{id:"_5-sudo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-sudo"}},[a._v("#")]),a._v(" 5. sudo")]),a._v(" "),r("h3",{attrs:{id:"_6-gnu"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-gnu"}},[a._v("#")]),a._v(" 6. GNU")]),a._v(" "),r("h3",{attrs:{id:"_7-包管理工具"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-包管理工具"}},[a._v("#")]),a._v(" 7. 包管理工具")]),a._v(" "),r("h3",{attrs:{id:"_8-发行版"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-发行版"}},[a._v("#")]),a._v(" 8. 发行版")]),a._v(" "),r("h3",{attrs:{id:"_9-vim-三个模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-vim-三个模式"}},[a._v("#")]),a._v(" 9. VIM 三个模式")]),a._v(" "),r("h2",{attrs:{id:"二-、分区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、分区"}},[a._v("#")]),a._v(" （二）、分区")]),a._v(" "),r("h3",{attrs:{id:"_1-磁盘的文件名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-磁盘的文件名"}},[a._v("#")]),a._v(" 1. 磁盘的文件名")]),a._v(" "),r("h3",{attrs:{id:"_2-分区表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-分区表"}},[a._v("#")]),a._v(" 2. 分区表")]),a._v(" "),r("h4",{attrs:{id:"_1-mbr"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-mbr"}},[a._v("#")]),a._v(" ⑴. MBR")]),a._v(" "),r("h4",{attrs:{id:"_2-gpt"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-gpt"}},[a._v("#")]),a._v(" ⑵. GPT")]),a._v(" "),r("h3",{attrs:{id:"_3-开机检测程序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-开机检测程序"}},[a._v("#")]),a._v(" 3. 开机检测程序")]),a._v(" "),r("h4",{attrs:{id:"_1-bios"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-bios"}},[a._v("#")]),a._v(" ⑴. BIOS")]),a._v(" "),r("h4",{attrs:{id:"_2-uefi"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-uefi"}},[a._v("#")]),a._v(" ⑵. UEFI")]),a._v(" "),r("h3",{attrs:{id:"_4-挂载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-挂载"}},[a._v("#")]),a._v(" 4. 挂载")]),a._v(" "),r("h2",{attrs:{id:"三-、文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、文件"}},[a._v("#")]),a._v(" （三）、文件")]),a._v(" "),r("h3",{attrs:{id:"_1-文件权限概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-文件权限概念"}},[a._v("#")]),a._v(" 1. 文件权限概念")]),a._v(" "),r("h3",{attrs:{id:"_2-文件属性以及权限的修改"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-文件属性以及权限的修改"}},[a._v("#")]),a._v(" 2. 文件属性以及权限的修改")]),a._v(" "),r("h4",{attrs:{id:"_1-修改文件所属群组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-修改文件所属群组"}},[a._v("#")]),a._v(" ⑴. 修改文件所属群组")]),a._v(" "),r("h4",{attrs:{id:"_2-修改文件拥有者"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改文件拥有者"}},[a._v("#")]),a._v(" ⑵. 修改文件拥有者")]),a._v(" "),r("h4",{attrs:{id:"_3-修改权限"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-修改权限"}},[a._v("#")]),a._v(" ⑶. 修改权限")]),a._v(" "),r("h3",{attrs:{id:"_3-目录的权限"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-目录的权限"}},[a._v("#")]),a._v(" 3. 目录的权限")]),a._v(" "),r("h3",{attrs:{id:"_4-文件默认权限"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-文件默认权限"}},[a._v("#")]),a._v(" 4. 文件默认权限")]),a._v(" "),r("h3",{attrs:{id:"_5-目录配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-目录配置"}},[a._v("#")]),a._v(" 5. 目录配置")]),a._v(" "),r("h3",{attrs:{id:"_6-文件时间"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-文件时间"}},[a._v("#")]),a._v(" 6. 文件时间")]),a._v(" "),r("h3",{attrs:{id:"_7-文件与目录的基本操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-文件与目录的基本操作"}},[a._v("#")]),a._v(" 7. 文件与目录的基本操作")]),a._v(" "),r("h4",{attrs:{id:"_1-ls"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-ls"}},[a._v("#")]),a._v(" ⑴. ls")]),a._v(" "),r("h4",{attrs:{id:"_2-cp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-cp"}},[a._v("#")]),a._v(" ⑵. cp")]),a._v(" "),r("h4",{attrs:{id:"_3-rm"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-rm"}},[a._v("#")]),a._v(" ⑶. rm")]),a._v(" "),r("h4",{attrs:{id:"_4-mv"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-mv"}},[a._v("#")]),a._v(" ⑷. mv")]),a._v(" "),r("h3",{attrs:{id:"_8-获取文件内容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-获取文件内容"}},[a._v("#")]),a._v(" 8. 获取文件内容")]),a._v(" "),r("h4",{attrs:{id:"_1-cat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-cat"}},[a._v("#")]),a._v(" ⑴. cat")]),a._v(" "),r("h4",{attrs:{id:"_2-tac"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-tac"}},[a._v("#")]),a._v(" ⑵. tac")]),a._v(" "),r("h4",{attrs:{id:"_3-more"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-more"}},[a._v("#")]),a._v(" ⑶. more")]),a._v(" "),r("h4",{attrs:{id:"_4-less"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-less"}},[a._v("#")]),a._v(" ⑷. less")]),a._v(" "),r("h4",{attrs:{id:"_5-head"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-head"}},[a._v("#")]),a._v(" ⑸. head")]),a._v(" "),r("h4",{attrs:{id:"_6-tail"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-tail"}},[a._v("#")]),a._v(" ⑹. tail")]),a._v(" "),r("h4",{attrs:{id:"_7-od"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-od"}},[a._v("#")]),a._v(" ⑺. od")]),a._v(" "),r("h4",{attrs:{id:"_8-touch"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-touch"}},[a._v("#")]),a._v(" ⑻. touch")]),a._v(" "),r("h3",{attrs:{id:"_9-指令与文件搜索"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-指令与文件搜索"}},[a._v("#")]),a._v(" 9. 指令与文件搜索")]),a._v(" "),r("h4",{attrs:{id:"_1-which"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-which"}},[a._v("#")]),a._v(" ⑴. which")]),a._v(" "),r("h4",{attrs:{id:"_2-whereis"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-whereis"}},[a._v("#")]),a._v(" ⑵. whereis")]),a._v(" "),r("h4",{attrs:{id:"_3-locate"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-locate"}},[a._v("#")]),a._v(" ⑶. locate")]),a._v(" "),r("h4",{attrs:{id:"_4-find"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-find"}},[a._v("#")]),a._v(" ⑷. find")]),a._v(" "),r("h2",{attrs:{id:"四-、磁盘与文件系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、磁盘与文件系统"}},[a._v("#")]),a._v(" （四）、磁盘与文件系统")]),a._v(" "),r("h3",{attrs:{id:"_1-文件系统的组成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-文件系统的组成"}},[a._v("#")]),a._v(" 1. 文件系统的组成")]),a._v(" "),r("h3",{attrs:{id:"_2-inode"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-inode"}},[a._v("#")]),a._v(" 2. inode")]),a._v(" "),r("h3",{attrs:{id:"_3-目录的-inode-与-block"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-目录的-inode-与-block"}},[a._v("#")]),a._v(" 3. 目录的 inode 与 block")]),a._v(" "),r("h3",{attrs:{id:"实体链接与符号链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#实体链接与符号链接"}},[a._v("#")]),a._v(" . 实体链接与符号链接")]),a._v(" "),r("h4",{attrs:{id:"_1-实体链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-实体链接"}},[a._v("#")]),a._v(" ⑴. 实体链接")]),a._v(" "),r("h4",{attrs:{id:"_2-符号链接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-符号链接"}},[a._v("#")]),a._v(" ⑵. 符号链接")]),a._v(" "),r("h2",{attrs:{id:"五-、压缩与打包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、压缩与打包"}},[a._v("#")]),a._v(" （五）、压缩与打包")]),a._v(" "),r("h3",{attrs:{id:"_1-压缩"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-压缩"}},[a._v("#")]),a._v(" 1. 压缩")]),a._v(" "),r("h4",{attrs:{id:"_1-gzip"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-gzip"}},[a._v("#")]),a._v(" ⑴. gzip")]),a._v(" "),r("h4",{attrs:{id:"_2-bzip2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-bzip2"}},[a._v("#")]),a._v(" ⑵. bzip2")]),a._v(" "),r("h4",{attrs:{id:"_3-xz"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-xz"}},[a._v("#")]),a._v(" ⑶. xz")]),a._v(" "),r("h3",{attrs:{id:"_2-打包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-打包"}},[a._v("#")]),a._v(" 2. 打包")]),a._v(" "),r("h2",{attrs:{id:"六-、bash"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、bash"}},[a._v("#")]),a._v(" （六）、Bash")]),a._v(" "),r("h3",{attrs:{id:"_1-特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-特性"}},[a._v("#")]),a._v(" 1. 特性")]),a._v(" "),r("h3",{attrs:{id:"_2-变量操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-变量操作"}},[a._v("#")]),a._v(" 2. 变量操作")]),a._v(" "),r("h3",{attrs:{id:"_3-指令搜索顺序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-指令搜索顺序"}},[a._v("#")]),a._v(" 3. 指令搜索顺序")]),a._v(" "),r("h3",{attrs:{id:"_4-数据流重定向"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-数据流重定向"}},[a._v("#")]),a._v(" 4. 数据流重定向")]),a._v(" "),r("h2",{attrs:{id:"七-、管线指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、管线指令"}},[a._v("#")]),a._v(" （七）、管线指令")]),a._v(" "),r("h3",{attrs:{id:"_1-提取指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-提取指令"}},[a._v("#")]),a._v(" 1. 提取指令")]),a._v(" "),r("h3",{attrs:{id:"_2-排序指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-排序指令"}},[a._v("#")]),a._v(" 2. 排序指令")]),a._v(" "),r("h3",{attrs:{id:"_3-双向输出重定向"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-双向输出重定向"}},[a._v("#")]),a._v(" 3. 双向输出重定向")]),a._v(" "),r("h3",{attrs:{id:"_4-字符转换指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符转换指令"}},[a._v("#")]),a._v(" 4. 字符转换指令")]),a._v(" "),r("h3",{attrs:{id:"_5-分区指令"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-分区指令"}},[a._v("#")]),a._v(" 5. 分区指令")]),a._v(" "),r("h2",{attrs:{id:"八-、正则表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八-、正则表达式"}},[a._v("#")]),a._v(" （八）、正则表达式")]),a._v(" "),r("h3",{attrs:{id:"_1-grep"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-grep"}},[a._v("#")]),a._v(" 1. grep")]),a._v(" "),r("h3",{attrs:{id:"_2-printf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-printf"}},[a._v("#")]),a._v(" 2. printf")]),a._v(" "),r("h3",{attrs:{id:"_3-awk"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-awk"}},[a._v("#")]),a._v(" 3. awk")]),a._v(" "),r("h2",{attrs:{id:"九-、进程管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#九-、进程管理"}},[a._v("#")]),a._v(" （九）、进程管理")]),a._v(" "),r("h3",{attrs:{id:"_1-查看进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-查看进程"}},[a._v("#")]),a._v(" 1. 查看进程")]),a._v(" "),r("h4",{attrs:{id:"_1-ps"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-ps"}},[a._v("#")]),a._v(" ⑴. ps")]),a._v(" "),r("h4",{attrs:{id:"_2-top"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-top"}},[a._v("#")]),a._v(" ⑵. top")]),a._v(" "),r("h4",{attrs:{id:"_3-pstree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-pstree"}},[a._v("#")]),a._v(" ⑶. pstree")]),a._v(" "),r("h4",{attrs:{id:"_4-netstat"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-netstat"}},[a._v("#")]),a._v(" ⑷. netstat")]),a._v(" "),r("h3",{attrs:{id:"_2-进程状态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-进程状态"}},[a._v("#")]),a._v(" 2. 进程状态")]),a._v(" "),r("h3",{attrs:{id:"_3-sigchild"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-sigchild"}},[a._v("#")]),a._v(" 3. SIGCHILD")]),a._v(" "),r("h3",{attrs:{id:"_4-孤儿进程和僵死进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-孤儿进程和僵死进程"}},[a._v("#")]),a._v(" 4. 孤儿进程和僵死进程")]),a._v(" "),r("h4",{attrs:{id:"_1-孤儿进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-孤儿进程"}},[a._v("#")]),a._v(" ⑴. 孤儿进程")]),a._v(" "),r("h4",{attrs:{id:"_2-僵死进程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-僵死进程"}},[a._v("#")]),a._v(" ⑵. 僵死进程")]),a._v(" "),r("h2",{attrs:{id:"十-、i-o复用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十-、i-o复用"}},[a._v("#")]),a._v(" （十）、I/O复用")]),a._v(" "),r("h3",{attrs:{id:"_1-概念理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念理解"}},[a._v("#")]),a._v(" 1. 概念理解")]),a._v(" "),r("h3",{attrs:{id:"_2-i-o-模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-i-o-模型"}},[a._v("#")]),a._v(" 2. I/O 模型")]),a._v(" "),r("h4",{attrs:{id:"_1-同步-阻塞"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-同步-阻塞"}},[a._v("#")]),a._v(" ⑴. 同步-阻塞")]),a._v(" "),r("h4",{attrs:{id:"_2-同步-非阻塞"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-同步-非阻塞"}},[a._v("#")]),a._v(" ⑵. 同步-非阻塞")]),a._v(" "),r("h4",{attrs:{id:"_3-异步-阻塞"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-异步-阻塞"}},[a._v("#")]),a._v(" ⑶. 异步-阻塞")]),a._v(" "),r("h4",{attrs:{id:"_4-异步-非阻塞"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-异步-非阻塞"}},[a._v("#")]),a._v(" ⑷. 异步-非阻塞")]),a._v(" "),r("h3",{attrs:{id:"_3-select-poll-epoll"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-select-poll-epoll"}},[a._v("#")]),a._v(" 3. select poll epoll")]),a._v(" "),r("h4",{attrs:{id:"_1-select"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-select"}},[a._v("#")]),a._v(" ⑴. select")]),a._v(" "),r("h4",{attrs:{id:"_2-poll"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-poll"}},[a._v("#")]),a._v(" ⑵. poll")]),a._v(" "),r("h4",{attrs:{id:"_3-epoll"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-epoll"}},[a._v("#")]),a._v(" ⑶. epoll")]),a._v(" "),r("h3",{attrs:{id:"_4-select-和-poll-比较"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-select-和-poll-比较"}},[a._v("#")]),a._v(" 4. select 和 poll 比较")]),a._v(" "),r("h4",{attrs:{id:"_1-功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-功能"}},[a._v("#")]),a._v(" ⑴. 功能")]),a._v(" "),r("h4",{attrs:{id:"_2-速度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-速度"}},[a._v("#")]),a._v(" ⑵. 速度")]),a._v(" "),r("h4",{attrs:{id:"_3-可移植性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-可移植性"}},[a._v("#")]),a._v(" ⑶. 可移植性")]),a._v(" "),r("h3",{attrs:{id:"_5-eopll-工作模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-eopll-工作模式"}},[a._v("#")]),a._v(" 5. eopll 工作模式")]),a._v(" "),r("h4",{attrs:{id:"_1-lt-模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-lt-模式"}},[a._v("#")]),a._v(" ⑴. LT 模式")]),a._v(" "),r("h4",{attrs:{id:"_2-et-模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-et-模式"}},[a._v("#")]),a._v(" ⑵. ET 模式")]),a._v(" "),r("h3",{attrs:{id:"_6-select-poll-epoll-应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-select-poll-epoll-应用场景"}},[a._v("#")]),a._v(" 6. select poll epoll 应用场景")]),a._v(" "),r("h4",{attrs:{id:"_1-select-应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-select-应用场景"}},[a._v("#")]),a._v(" ⑴. select 应用场景")]),a._v(" "),r("h4",{attrs:{id:"_2-poll-应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-poll-应用场景"}},[a._v("#")]),a._v(" ⑵. poll 应用场景")]),a._v(" "),r("h4",{attrs:{id:"_3-epoll-应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-epoll-应用场景"}},[a._v("#")]),a._v(" ⑶. epoll 应用场景")]),a._v(" "),r("h4",{attrs:{id:"_4-性能对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-性能对比"}},[a._v("#")]),a._v(" ⑷. 性能对比")]),a._v(" "),r("h1",{attrs:{id:"六、算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六、算法"}},[a._v("#")]),a._v(" 六、算法")]),a._v(" "),r("h2",{attrs:{id:"一-、算法分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、算法分析"}},[a._v("#")]),a._v(" （一）、算法分析")]),a._v(" "),r("h3",{attrs:{id:"_1-数学模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-数学模型"}},[a._v("#")]),a._v(" 1. 数学模型")]),a._v(" "),r("h4",{attrs:{id:"_1-近似"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-近似"}},[a._v("#")]),a._v(" ⑴. 近似")]),a._v(" "),r("h4",{attrs:{id:"_2-增长数量级"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-增长数量级"}},[a._v("#")]),a._v(" ⑵. 增长数量级")]),a._v(" "),r("h4",{attrs:{id:"_3-内循环"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-内循环"}},[a._v("#")]),a._v(" ⑶. 内循环")]),a._v(" "),r("h4",{attrs:{id:"_4-成本模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-成本模型"}},[a._v("#")]),a._v(" ⑷. 成本模型")]),a._v(" "),r("h3",{attrs:{id:"_2-threesum"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-threesum"}},[a._v("#")]),a._v(" 2. ThreeSum")]),a._v(" "),r("h3",{attrs:{id:"_3-倍率实验"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-倍率实验"}},[a._v("#")]),a._v(" 3. 倍率实验")]),a._v(" "),r("h3",{attrs:{id:"_4-注意事项"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-注意事项"}},[a._v("#")]),a._v(" 4. 注意事项")]),a._v(" "),r("h4",{attrs:{id:"_1-大常数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-大常数"}},[a._v("#")]),a._v(" ⑴. 大常数")]),a._v(" "),r("h4",{attrs:{id:"_2-缓存-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-缓存-2"}},[a._v("#")]),a._v(" ⑵. 缓存")]),a._v(" "),r("h4",{attrs:{id:"_3-对最坏情况下的性能的保证"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-对最坏情况下的性能的保证"}},[a._v("#")]),a._v(" ⑶. 对最坏情况下的性能的保证")]),a._v(" "),r("h4",{attrs:{id:"_4-随机化算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-随机化算法"}},[a._v("#")]),a._v(" ⑷. 随机化算法")]),a._v(" "),r("h4",{attrs:{id:"_5-均摊分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-均摊分析"}},[a._v("#")]),a._v(" ⑸. 均摊分析")]),a._v(" "),r("h2",{attrs:{id:"二-、栈和队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、栈和队列"}},[a._v("#")]),a._v(" （二）、栈和队列")]),a._v(" "),r("h3",{attrs:{id:"_1-栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-栈"}},[a._v("#")]),a._v(" 1. 栈")]),a._v(" "),r("h3",{attrs:{id:"_2-队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-队列"}},[a._v("#")]),a._v(" 2. 队列")]),a._v(" "),r("h2",{attrs:{id:"三-、union-find"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、union-find"}},[a._v("#")]),a._v(" （三）、union-find")]),a._v(" "),r("h3",{attrs:{id:"_1-quick-find"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-quick-find"}},[a._v("#")]),a._v(" 1. quick-find")]),a._v(" "),r("h3",{attrs:{id:"_2-quick-union"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-quick-union"}},[a._v("#")]),a._v(" 2. quick-union")]),a._v(" "),r("h3",{attrs:{id:"_3-加权-quick-union"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-加权-quick-union"}},[a._v("#")]),a._v(" 3. 加权 quick-union")]),a._v(" "),r("h3",{attrs:{id:"_4-路径压缩的加权-quick-union"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-路径压缩的加权-quick-union"}},[a._v("#")]),a._v(" 4. 路径压缩的加权 quick-union")]),a._v(" "),r("h3",{attrs:{id:"_5-各种-union-find-算法的比较"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-各种-union-find-算法的比较"}},[a._v("#")]),a._v(" 5. 各种 union-find 算法的比较")]),a._v(" "),r("h2",{attrs:{id:"四-、排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、排序"}},[a._v("#")]),a._v(" （四）、排序")]),a._v(" "),r("h3",{attrs:{id:"_1-选择排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-选择排序"}},[a._v("#")]),a._v(" 1. 选择排序")]),a._v(" "),r("h3",{attrs:{id:"_2-插入排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-插入排序"}},[a._v("#")]),a._v(" 2. 插入排序")]),a._v(" "),r("h3",{attrs:{id:"_3-希尔排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-希尔排序"}},[a._v("#")]),a._v(" 3. 希尔排序")]),a._v(" "),r("h3",{attrs:{id:"_4-归并排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-归并排序"}},[a._v("#")]),a._v(" 4. 归并排序")]),a._v(" "),r("h4",{attrs:{id:"_1-归并方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-归并方法"}},[a._v("#")]),a._v(" ⑴. 归并方法")]),a._v(" "),r("h4",{attrs:{id:"_2-自顶向下归并排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-自顶向下归并排序"}},[a._v("#")]),a._v(" ⑵. 自顶向下归并排序")]),a._v(" "),r("h4",{attrs:{id:"_3-自底向上归并排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-自底向上归并排序"}},[a._v("#")]),a._v(" ⑶. 自底向上归并排序")]),a._v(" "),r("h3",{attrs:{id:"_5-快速排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-快速排序"}},[a._v("#")]),a._v(" 5. 快速排序")]),a._v(" "),r("h4",{attrs:{id:"_1-基本算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本算法"}},[a._v("#")]),a._v(" ⑴. 基本算法")]),a._v(" "),r("h4",{attrs:{id:"_2-切分"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-切分"}},[a._v("#")]),a._v(" ⑵. 切分")]),a._v(" "),r("h4",{attrs:{id:"_3-性能分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-性能分析"}},[a._v("#")]),a._v(" ⑶. 性能分析")]),a._v(" "),r("h4",{attrs:{id:"_4-算法改进"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-算法改进"}},[a._v("#")]),a._v(" ⑷. 算法改进")]),a._v(" "),r("h3",{attrs:{id:"_6-优先队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-优先队列"}},[a._v("#")]),a._v(" 6. 优先队列")]),a._v(" "),r("h4",{attrs:{id:"_1-堆"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-堆"}},[a._v("#")]),a._v(" ⑴. 堆")]),a._v(" "),r("h4",{attrs:{id:"_2-上浮和下沉"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-上浮和下沉"}},[a._v("#")]),a._v(" ⑵. 上浮和下沉")]),a._v(" "),r("h4",{attrs:{id:"_3-插入元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-插入元素"}},[a._v("#")]),a._v(" ⑶. 插入元素")]),a._v(" "),r("h4",{attrs:{id:"_4-删除最大元素"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-删除最大元素"}},[a._v("#")]),a._v(" ⑷. 删除最大元素")]),a._v(" "),r("h4",{attrs:{id:"_5-堆排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-堆排序"}},[a._v("#")]),a._v(" ⑸. 堆排序")]),a._v(" "),r("h4",{attrs:{id:"_6-分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-分析"}},[a._v("#")]),a._v(" ⑹. 分析")]),a._v(" "),r("h3",{attrs:{id:"_7-应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-应用"}},[a._v("#")]),a._v(" 7. 应用")]),a._v(" "),r("h4",{attrs:{id:"_1-排序算法的比较"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-排序算法的比较"}},[a._v("#")]),a._v(" ⑴. 排序算法的比较")]),a._v(" "),r("h4",{attrs:{id:"_2-java-的排序算法实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-java-的排序算法实现"}},[a._v("#")]),a._v(" ⑵. Java 的排序算法实现")]),a._v(" "),r("h4",{attrs:{id:"_3-基于切分的快速选择算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-基于切分的快速选择算法"}},[a._v("#")]),a._v(" ⑶. 基于切分的快速选择算法")]),a._v(" "),r("h2",{attrs:{id:"五-、查找"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、查找"}},[a._v("#")]),a._v(" （五）、查找")]),a._v(" "),r("h3",{attrs:{id:"_1-符号表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-符号表"}},[a._v("#")]),a._v(" 1. 符号表")]),a._v(" "),r("h4",{attrs:{id:"_1-无序符号表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-无序符号表"}},[a._v("#")]),a._v(" ⑴. 无序符号表")]),a._v(" "),r("h4",{attrs:{id:"_2-有序符号表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-有序符号表"}},[a._v("#")]),a._v(" ⑵. 有序符号表")]),a._v(" "),r("h4",{attrs:{id:"_3-二分查找实现有序符号表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-二分查找实现有序符号表"}},[a._v("#")]),a._v(" ⑶. 二分查找实现有序符号表")]),a._v(" "),r("h3",{attrs:{id:"_2-二叉查找树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-二叉查找树"}},[a._v("#")]),a._v(" 2. 二叉查找树")]),a._v(" "),r("h4",{attrs:{id:"_1-get-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-get-2"}},[a._v("#")]),a._v(" ⑴. get()")]),a._v(" "),r("h4",{attrs:{id:"_2-put"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-put"}},[a._v("#")]),a._v(" ⑵. put()")]),a._v(" "),r("h4",{attrs:{id:"_3-分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-分析"}},[a._v("#")]),a._v(" ⑶. 分析")]),a._v(" "),r("h4",{attrs:{id:"_4-floor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-floor"}},[a._v("#")]),a._v(" ⑷. floor()")]),a._v(" "),r("h4",{attrs:{id:"_5-rank"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-rank"}},[a._v("#")]),a._v(" ⑸. rank()")]),a._v(" "),r("h4",{attrs:{id:"_6-min"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-min"}},[a._v("#")]),a._v(" ⑹. min()")]),a._v(" "),r("h4",{attrs:{id:"_7-deletemin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-deletemin"}},[a._v("#")]),a._v(" ⑺. deleteMin()")]),a._v(" "),r("h4",{attrs:{id:"_8-delete"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-delete"}},[a._v("#")]),a._v(" ⑻. delete()")]),a._v(" "),r("h4",{attrs:{id:"_9-keys"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-keys"}},[a._v("#")]),a._v(" ⑼. keys()")]),a._v(" "),r("h4",{attrs:{id:"_10-性能分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-性能分析"}},[a._v("#")]),a._v(" ⑽. 性能分析")]),a._v(" "),r("h3",{attrs:{id:"_3-2-3-查找树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-查找树"}},[a._v("#")]),a._v(" 3. 2-3 查找树")]),a._v(" "),r("h4",{attrs:{id:"_1-插入操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-插入操作"}},[a._v("#")]),a._v(" ⑴. 插入操作")]),a._v(" "),r("h4",{attrs:{id:"_2-性质"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-性质"}},[a._v("#")]),a._v(" ⑵. 性质")]),a._v(" "),r("h3",{attrs:{id:"_3-红黑二叉查找树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-红黑二叉查找树"}},[a._v("#")]),a._v(" 3. 红黑二叉查找树")]),a._v(" "),r("h4",{attrs:{id:"_1-左旋转"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-左旋转"}},[a._v("#")]),a._v(" ⑴. 左旋转")]),a._v(" "),r("h4",{attrs:{id:"_2-右旋转"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-右旋转"}},[a._v("#")]),a._v(" ⑵. 右旋转")]),a._v(" "),r("h4",{attrs:{id:"_3-颜色转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-颜色转换"}},[a._v("#")]),a._v(" ⑶. 颜色转换")]),a._v(" "),r("h4",{attrs:{id:"_4-插入"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-插入"}},[a._v("#")]),a._v(" ⑷. 插入")]),a._v(" "),r("h4",{attrs:{id:"_5-删除最小键"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-删除最小键"}},[a._v("#")]),a._v(" ⑸. 删除最小键")]),a._v(" "),r("h4",{attrs:{id:"_6-分析-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-分析-2"}},[a._v("#")]),a._v(" ⑹. 分析")]),a._v(" "),r("h3",{attrs:{id:"_4-散列表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-散列表"}},[a._v("#")]),a._v(" 4. 散列表")]),a._v(" "),r("h4",{attrs:{id:"_1-散列函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-散列函数"}},[a._v("#")]),a._v(" ⑴. 散列函数")]),a._v(" "),r("h4",{attrs:{id:"_2-基于拉链法的散列表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-基于拉链法的散列表"}},[a._v("#")]),a._v(" ⑵. 基于拉链法的散列表")]),a._v(" "),r("h4",{attrs:{id:"_3-基于线性探测法的散列表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-基于线性探测法的散列表"}},[a._v("#")]),a._v(" ⑶. 基于线性探测法的散列表")]),a._v(" "),r("h3",{attrs:{id:"_5-应用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-应用"}},[a._v("#")]),a._v(" 5. 应用")]),a._v(" "),r("h4",{attrs:{id:"_1-各种符号表实现的比较"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-各种符号表实现的比较"}},[a._v("#")]),a._v(" ⑴. 各种符号表实现的比较")]),a._v(" "),r("h4",{attrs:{id:"_2-java-的符号表实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-java-的符号表实现"}},[a._v("#")]),a._v(" ⑵. Java 的符号表实现")]),a._v(" "),r("h4",{attrs:{id:"_3-集合类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-集合类型"}},[a._v("#")]),a._v(" ⑶. 集合类型")]),a._v(" "),r("h4",{attrs:{id:"_4-稀疏向量乘法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-稀疏向量乘法"}},[a._v("#")]),a._v(" ⑷. 稀疏向量乘法")]),a._v(" "),r("h1",{attrs:{id:"七、剑指-offer-题解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七、剑指-offer-题解"}},[a._v("#")]),a._v(" 七、剑指 Offer 题解")]),a._v(" "),r("h2",{attrs:{id:"_1-前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-前言"}},[a._v("#")]),a._v(" 1. 前言")]),a._v(" "),r("h2",{attrs:{id:"_2-实现-singleton"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现-singleton"}},[a._v("#")]),a._v(" 2. 实现 Singleton")]),a._v(" "),r("h2",{attrs:{id:"_3-数组中重复的数字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-数组中重复的数字"}},[a._v("#")]),a._v(" 3. 数组中重复的数字")]),a._v(" "),r("h2",{attrs:{id:"_4-二维数组中的查找"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-二维数组中的查找"}},[a._v("#")]),a._v(" 4. 二维数组中的查找")]),a._v(" "),r("h2",{attrs:{id:"_5-替换空格"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-替换空格"}},[a._v("#")]),a._v(" 5. 替换空格")]),a._v(" "),r("h2",{attrs:{id:"_6-从尾到头打印链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-从尾到头打印链表"}},[a._v("#")]),a._v(" 6. 从尾到头打印链表")]),a._v(" "),r("h2",{attrs:{id:"_7-重建二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-重建二叉树"}},[a._v("#")]),a._v(" 7. 重建二叉树")]),a._v(" "),r("h2",{attrs:{id:"_8-二叉树的下一个结点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-二叉树的下一个结点"}},[a._v("#")]),a._v(" 8. 二叉树的下一个结点")]),a._v(" "),r("h2",{attrs:{id:"_9-用两个栈实现队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-用两个栈实现队列"}},[a._v("#")]),a._v(" 9. 用两个栈实现队列")]),a._v(" "),r("h2",{attrs:{id:"_10-1-斐波那契数列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-斐波那契数列"}},[a._v("#")]),a._v(" 10.1 斐波那契数列")]),a._v(" "),r("h2",{attrs:{id:"_10-2-跳台阶"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-跳台阶"}},[a._v("#")]),a._v(" 10.2 跳台阶")]),a._v(" "),r("h2",{attrs:{id:"_10-3-变态跳台阶"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-变态跳台阶"}},[a._v("#")]),a._v(" 10.3 变态跳台阶")]),a._v(" "),r("h2",{attrs:{id:"_10-4-矩形覆盖"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-4-矩形覆盖"}},[a._v("#")]),a._v(" 10.4 矩形覆盖")]),a._v(" "),r("h2",{attrs:{id:"_11-旋转数组的最小数字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-旋转数组的最小数字"}},[a._v("#")]),a._v(" 11. 旋转数组的最小数字")]),a._v(" "),r("h2",{attrs:{id:"_12-矩阵中的路径"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-矩阵中的路径"}},[a._v("#")]),a._v(" 12. 矩阵中的路径")]),a._v(" "),r("h2",{attrs:{id:"_13-机器人的运动范围"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-机器人的运动范围"}},[a._v("#")]),a._v(" 13. 机器人的运动范围")]),a._v(" "),r("h2",{attrs:{id:"_14-剪绳子"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-剪绳子"}},[a._v("#")]),a._v(" 14. 剪绳子")]),a._v(" "),r("h2",{attrs:{id:"_15-二进制中-1-的个数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-二进制中-1-的个数"}},[a._v("#")]),a._v(" 15. 二进制中 1 的个数")]),a._v(" "),r("h2",{attrs:{id:"_16-数值的整数次方"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-数值的整数次方"}},[a._v("#")]),a._v(" 16. 数值的整数次方")]),a._v(" "),r("h2",{attrs:{id:"_17-打印从-1-到最大的-n-位数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-打印从-1-到最大的-n-位数"}},[a._v("#")]),a._v(" 17. 打印从 1 到最大的 n 位数")]),a._v(" "),r("h2",{attrs:{id:"_18-1-在-o-1-时间内删除链表节点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-1-在-o-1-时间内删除链表节点"}},[a._v("#")]),a._v(" 18.1 在 O(1) 时间内删除链表节点")]),a._v(" "),r("h2",{attrs:{id:"_18-2-删除链表中重复的结点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-2-删除链表中重复的结点"}},[a._v("#")]),a._v(" 18.2 删除链表中重复的结点")]),a._v(" "),r("h2",{attrs:{id:"_19-正则表达式匹配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-正则表达式匹配"}},[a._v("#")]),a._v(" 19. 正则表达式匹配")]),a._v(" "),r("h2",{attrs:{id:"_20-表示数值的字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-表示数值的字符串"}},[a._v("#")]),a._v(" 20. 表示数值的字符串")]),a._v(" "),r("h2",{attrs:{id:"_21-调整数组顺序使奇数位于偶数前面"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-调整数组顺序使奇数位于偶数前面"}},[a._v("#")]),a._v(" 21. 调整数组顺序使奇数位于偶数前面")]),a._v(" "),r("h2",{attrs:{id:"_22-链表中倒数第-k-个结点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-链表中倒数第-k-个结点"}},[a._v("#")]),a._v(" 22. 链表中倒数第 K 个结点")]),a._v(" "),r("h2",{attrs:{id:"_23-链表中环的入口结点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_23-链表中环的入口结点"}},[a._v("#")]),a._v(" 23. 链表中环的入口结点")]),a._v(" "),r("h2",{attrs:{id:"_24-反转链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_24-反转链表"}},[a._v("#")]),a._v(" 24. 反转链表")]),a._v(" "),r("h2",{attrs:{id:"_25-合并两个排序的链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_25-合并两个排序的链表"}},[a._v("#")]),a._v(" 25. 合并两个排序的链表")]),a._v(" "),r("h2",{attrs:{id:"_26-树的子结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_26-树的子结构"}},[a._v("#")]),a._v(" 26. 树的子结构")]),a._v(" "),r("h2",{attrs:{id:"_27-二叉树的镜像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_27-二叉树的镜像"}},[a._v("#")]),a._v(" 27. 二叉树的镜像")]),a._v(" "),r("h2",{attrs:{id:"_28-对称的二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_28-对称的二叉树"}},[a._v("#")]),a._v(" 28. 对称的二叉树")]),a._v(" "),r("h2",{attrs:{id:"_29-顺时针打印矩阵"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_29-顺时针打印矩阵"}},[a._v("#")]),a._v(" 29. 顺时针打印矩阵")]),a._v(" "),r("h2",{attrs:{id:"_30-包含-min-函数的栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_30-包含-min-函数的栈"}},[a._v("#")]),a._v(" 30. 包含 min 函数的栈")]),a._v(" "),r("h2",{attrs:{id:"_31-栈的压入、弹出序列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_31-栈的压入、弹出序列"}},[a._v("#")]),a._v(" 31. 栈的压入、弹出序列")]),a._v(" "),r("h2",{attrs:{id:"_32-1-从上往下打印二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_32-1-从上往下打印二叉树"}},[a._v("#")]),a._v(" 32.1 从上往下打印二叉树")]),a._v(" "),r("h2",{attrs:{id:"_32-2-把二叉树打印成多行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_32-2-把二叉树打印成多行"}},[a._v("#")]),a._v(" 32.2 把二叉树打印成多行")]),a._v(" "),r("h2",{attrs:{id:"_32-3-按之字形顺序打印二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_32-3-按之字形顺序打印二叉树"}},[a._v("#")]),a._v(" 32.3 按之字形顺序打印二叉树")]),a._v(" "),r("h2",{attrs:{id:"_33-二叉搜索树的后序遍历序列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_33-二叉搜索树的后序遍历序列"}},[a._v("#")]),a._v(" 33. 二叉搜索树的后序遍历序列")]),a._v(" "),r("h2",{attrs:{id:"_34-二叉树中和为某一值的路径"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_34-二叉树中和为某一值的路径"}},[a._v("#")]),a._v(" 34. 二叉树中和为某一值的路径")]),a._v(" "),r("h2",{attrs:{id:"_35-复杂链表的复制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_35-复杂链表的复制"}},[a._v("#")]),a._v(" 35. 复杂链表的复制")]),a._v(" "),r("h2",{attrs:{id:"_36-二叉搜索树与双向链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_36-二叉搜索树与双向链表"}},[a._v("#")]),a._v(" 36. 二叉搜索树与双向链表")]),a._v(" "),r("h2",{attrs:{id:"_37-序列化二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_37-序列化二叉树"}},[a._v("#")]),a._v(" 37. 序列化二叉树")]),a._v(" "),r("h2",{attrs:{id:"_38-字符串的排列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_38-字符串的排列"}},[a._v("#")]),a._v(" 38. 字符串的排列")]),a._v(" "),r("h2",{attrs:{id:"_39-数组中出现次数超过一半的数字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_39-数组中出现次数超过一半的数字"}},[a._v("#")]),a._v(" 39. 数组中出现次数超过一半的数字")]),a._v(" "),r("h2",{attrs:{id:"_40-最小的-k-个数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_40-最小的-k-个数"}},[a._v("#")]),a._v(" 40. 最小的 K 个数")]),a._v(" "),r("h2",{attrs:{id:"_41-1-数据流中的中位数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_41-1-数据流中的中位数"}},[a._v("#")]),a._v(" 41.1 数据流中的中位数")]),a._v(" "),r("h2",{attrs:{id:"_41-2-字符流中第一个不重复的字符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_41-2-字符流中第一个不重复的字符"}},[a._v("#")]),a._v(" 41.2 字符流中第一个不重复的字符")]),a._v(" "),r("h2",{attrs:{id:"_42-连续子数组的最大和"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_42-连续子数组的最大和"}},[a._v("#")]),a._v(" 42. 连续子数组的最大和")]),a._v(" "),r("h2",{attrs:{id:"_43-从-1-到-n-整数中-1-出现的次数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_43-从-1-到-n-整数中-1-出现的次数"}},[a._v("#")]),a._v(" 43. 从 1 到 n 整数中 1 出现的次数")]),a._v(" "),r("h2",{attrs:{id:"_44-数字序列中的某一位数字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_44-数字序列中的某一位数字"}},[a._v("#")]),a._v(" 44. 数字序列中的某一位数字")]),a._v(" "),r("h2",{attrs:{id:"_45-把数组排成最小的数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_45-把数组排成最小的数"}},[a._v("#")]),a._v(" 45. 把数组排成最小的数")]),a._v(" "),r("h2",{attrs:{id:"_46-把数字翻译成字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_46-把数字翻译成字符串"}},[a._v("#")]),a._v(" 46. 把数字翻译成字符串")]),a._v(" "),r("h2",{attrs:{id:"_47-礼物的最大价值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_47-礼物的最大价值"}},[a._v("#")]),a._v(" 47. 礼物的最大价值")]),a._v(" "),r("h2",{attrs:{id:"_48-最长不含重复字符的子字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_48-最长不含重复字符的子字符串"}},[a._v("#")]),a._v(" 48. 最长不含重复字符的子字符串")]),a._v(" "),r("h2",{attrs:{id:"_49-丑数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_49-丑数"}},[a._v("#")]),a._v(" 49. 丑数")]),a._v(" "),r("h2",{attrs:{id:"_50-第一个只出现一次的字符位置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_50-第一个只出现一次的字符位置"}},[a._v("#")]),a._v(" 50. 第一个只出现一次的字符位置")]),a._v(" "),r("h2",{attrs:{id:"_51-数组中的逆序对"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_51-数组中的逆序对"}},[a._v("#")]),a._v(" 51. 数组中的逆序对")]),a._v(" "),r("h2",{attrs:{id:"_52-两个链表的第一个公共结点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_52-两个链表的第一个公共结点"}},[a._v("#")]),a._v(" 52. 两个链表的第一个公共结点")]),a._v(" "),r("h2",{attrs:{id:"_53-数字在排序数组中出现的次数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_53-数字在排序数组中出现的次数"}},[a._v("#")]),a._v(" 53 数字在排序数组中出现的次数")]),a._v(" "),r("h2",{attrs:{id:"_54-二叉搜索树的第-k-个结点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_54-二叉搜索树的第-k-个结点"}},[a._v("#")]),a._v(" 54. 二叉搜索树的第 K 个结点")]),a._v(" "),r("h2",{attrs:{id:"_55-1-二叉树的深度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_55-1-二叉树的深度"}},[a._v("#")]),a._v(" 55.1 二叉树的深度")]),a._v(" "),r("h2",{attrs:{id:"_55-2-平衡二叉树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_55-2-平衡二叉树"}},[a._v("#")]),a._v(" 55.2 平衡二叉树")]),a._v(" "),r("h2",{attrs:{id:"_56-数组中只出现一次的数字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_56-数组中只出现一次的数字"}},[a._v("#")]),a._v(" 56. 数组中只出现一次的数字")]),a._v(" "),r("h2",{attrs:{id:"_57-1-和为-s-的两个数字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_57-1-和为-s-的两个数字"}},[a._v("#")]),a._v(" 57.1 和为 S 的两个数字")]),a._v(" "),r("h2",{attrs:{id:"_57-2-和为-s-的连续正数序列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_57-2-和为-s-的连续正数序列"}},[a._v("#")]),a._v(" 57.2 和为 S 的连续正数序列")]),a._v(" "),r("h2",{attrs:{id:"_58-1-翻转单词顺序列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_58-1-翻转单词顺序列"}},[a._v("#")]),a._v(" 58.1 翻转单词顺序列")]),a._v(" "),r("h2",{attrs:{id:"_58-2-左旋转字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_58-2-左旋转字符串"}},[a._v("#")]),a._v(" 58.2 左旋转字符串")]),a._v(" "),r("h2",{attrs:{id:"_59-滑动窗口的最大值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_59-滑动窗口的最大值"}},[a._v("#")]),a._v(" 59. 滑动窗口的最大值")]),a._v(" "),r("h2",{attrs:{id:"_60-n-个骰子的点数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_60-n-个骰子的点数"}},[a._v("#")]),a._v(" 60. n 个骰子的点数")]),a._v(" "),r("h2",{attrs:{id:"_61-扑克牌顺子"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_61-扑克牌顺子"}},[a._v("#")]),a._v(" 61. 扑克牌顺子")]),a._v(" "),r("h2",{attrs:{id:"_62-圆圈中最后剩下的数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_62-圆圈中最后剩下的数"}},[a._v("#")]),a._v(" 62. 圆圈中最后剩下的数")]),a._v(" "),r("h2",{attrs:{id:"_63-股票的最大利润"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_63-股票的最大利润"}},[a._v("#")]),a._v(" 63. 股票的最大利润")]),a._v(" "),r("h2",{attrs:{id:"_64-求-1-2-3-n"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_64-求-1-2-3-n"}},[a._v("#")]),a._v(" 64. 求 1+2+3+…+n")]),a._v(" "),r("h2",{attrs:{id:"_65-不用加减乘除做加法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_65-不用加减乘除做加法"}},[a._v("#")]),a._v(" 65. 不用加减乘除做加法")]),a._v(" "),r("h2",{attrs:{id:"_66-构建乘积数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_66-构建乘积数组"}},[a._v("#")]),a._v(" 66. 构建乘积数组")]),a._v(" "),r("h2",{attrs:{id:"_67-把字符串转换成整数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_67-把字符串转换成整数"}},[a._v("#")]),a._v(" 67. 把字符串转换成整数")]),a._v(" "),r("h2",{attrs:{id:"_68-树中两个节点的最低公共祖先"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_68-树中两个节点的最低公共祖先"}},[a._v("#")]),a._v(" 68. 树中两个节点的最低公共祖先")]),a._v(" "),r("h1",{attrs:{id:"八、leetcode-题解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八、leetcode-题解"}},[a._v("#")]),a._v(" 八、Leetcode 题解")]),a._v(" "),r("h2",{attrs:{id:"一-、算法思想"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、算法思想"}},[a._v("#")]),a._v(" （一）、算法思想")]),a._v(" "),r("h3",{attrs:{id:"_1-二分查找"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-二分查找"}},[a._v("#")]),a._v(" 1. 二分查找")]),a._v(" "),r("h3",{attrs:{id:"_2-贪心思想"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-贪心思想"}},[a._v("#")]),a._v(" 2. 贪心思想")]),a._v(" "),r("h3",{attrs:{id:"_3-双指针"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-双指针"}},[a._v("#")]),a._v(" 3. 双指针")]),a._v(" "),r("h3",{attrs:{id:"_4-排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-排序"}},[a._v("#")]),a._v(" 4. 排序")]),a._v(" "),r("h4",{attrs:{id:"_1-快速选择"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-快速选择"}},[a._v("#")]),a._v(" ⑴. 快速选择")]),a._v(" "),r("h4",{attrs:{id:"_2-堆排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-堆排序"}},[a._v("#")]),a._v(" ⑵. 堆排序")]),a._v(" "),r("h4",{attrs:{id:"_3-桶排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-桶排序"}},[a._v("#")]),a._v(" ⑶. 桶排序")]),a._v(" "),r("h3",{attrs:{id:"_5-搜索"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-搜索"}},[a._v("#")]),a._v(" 5. 搜索")]),a._v(" "),r("h4",{attrs:{id:"_1-bfs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-bfs"}},[a._v("#")]),a._v(" ⑴. BFS")]),a._v(" "),r("h4",{attrs:{id:"_2-dfs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-dfs"}},[a._v("#")]),a._v(" ⑵. DFS")]),a._v(" "),r("h4",{attrs:{id:"_3-backtracking"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-backtracking"}},[a._v("#")]),a._v(" ⑶. Backtracking")]),a._v(" "),r("h3",{attrs:{id:"_6-分治"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-分治"}},[a._v("#")]),a._v(" 6. 分治")]),a._v(" "),r("h3",{attrs:{id:"_7-动态规划"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-动态规划"}},[a._v("#")]),a._v(" 7. 动态规划")]),a._v(" "),r("h4",{attrs:{id:"_1-斐波那契数列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-斐波那契数列"}},[a._v("#")]),a._v(" ⑴. 斐波那契数列")]),a._v(" "),r("h4",{attrs:{id:"_2-最长递增子序列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-最长递增子序列"}},[a._v("#")]),a._v(" ⑵. 最长递增子序列")]),a._v(" "),r("h4",{attrs:{id:"_3-最长公共子系列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-最长公共子系列"}},[a._v("#")]),a._v(" ⑶. 最长公共子系列")]),a._v(" "),r("h4",{attrs:{id:"_4-0-1-背包"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-0-1-背包"}},[a._v("#")]),a._v(" ⑷. 0-1 背包")]),a._v(" "),r("h4",{attrs:{id:"_5-数组区间"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-数组区间"}},[a._v("#")]),a._v(" ⑸. 数组区间")]),a._v(" "),r("h4",{attrs:{id:"_6-字符串编辑"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-字符串编辑"}},[a._v("#")]),a._v(" ⑹. 字符串编辑")]),a._v(" "),r("h4",{attrs:{id:"_7-分割整数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-分割整数"}},[a._v("#")]),a._v(" ⑺. 分割整数")]),a._v(" "),r("h4",{attrs:{id:"_8-矩阵路径"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-矩阵路径"}},[a._v("#")]),a._v(" ⑻. 矩阵路径")]),a._v(" "),r("h4",{attrs:{id:"_9-其它问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-其它问题"}},[a._v("#")]),a._v(" ⑼. 其它问题")]),a._v(" "),r("h3",{attrs:{id:"_8-数学"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-数学"}},[a._v("#")]),a._v(" 8. 数学")]),a._v(" "),r("h4",{attrs:{id:"_1-素数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-素数"}},[a._v("#")]),a._v(" ⑴. 素数")]),a._v(" "),r("h4",{attrs:{id:"_2-最大公约数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-最大公约数"}},[a._v("#")]),a._v(" ⑵. 最大公约数")]),a._v(" "),r("h4",{attrs:{id:"_3-进制转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-进制转换"}},[a._v("#")]),a._v(" ⑶. 进制转换")]),a._v(" "),r("h4",{attrs:{id:"_4-阶乘"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-阶乘"}},[a._v("#")]),a._v(" ⑷. 阶乘")]),a._v(" "),r("h4",{attrs:{id:"_5-字符串加法减法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-字符串加法减法"}},[a._v("#")]),a._v(" ⑸. 字符串加法减法")]),a._v(" "),r("h4",{attrs:{id:"_6-相遇问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-相遇问题"}},[a._v("#")]),a._v(" ⑹. 相遇问题")]),a._v(" "),r("h4",{attrs:{id:"_7-多数投票问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-多数投票问题"}},[a._v("#")]),a._v(" ⑺. 多数投票问题")]),a._v(" "),r("h4",{attrs:{id:"_8-其它"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-其它"}},[a._v("#")]),a._v(" ⑻. 其它")]),a._v(" "),r("h2",{attrs:{id:"二-、数据结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、数据结构"}},[a._v("#")]),a._v(" （二）、数据结构")]),a._v(" "),r("h3",{attrs:{id:"_1-栈和队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-栈和队列"}},[a._v("#")]),a._v(" 1. 栈和队列")]),a._v(" "),r("h3",{attrs:{id:"_2-哈希表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-哈希表"}},[a._v("#")]),a._v(" 2. 哈希表")]),a._v(" "),r("h3",{attrs:{id:"_3-字符串"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符串"}},[a._v("#")]),a._v(" 3. 字符串")]),a._v(" "),r("h3",{attrs:{id:"_4-数组与矩阵"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-数组与矩阵"}},[a._v("#")]),a._v(" 4. 数组与矩阵")]),a._v(" "),r("h4",{attrs:{id:"_1-1-n-分布"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-n-分布"}},[a._v("#")]),a._v(" ⑴. 1-n 分布")]),a._v(" "),r("h4",{attrs:{id:"_2-有序矩阵"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-有序矩阵"}},[a._v("#")]),a._v(" ⑵. 有序矩阵")]),a._v(" "),r("h3",{attrs:{id:"_5-链表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-链表"}},[a._v("#")]),a._v(" 5. 链表")]),a._v(" "),r("h3",{attrs:{id:"_6-树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-树"}},[a._v("#")]),a._v(" 6. 树")]),a._v(" "),r("h4",{attrs:{id:"_1-递归"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-递归"}},[a._v("#")]),a._v(" ⑴. 递归")]),a._v(" "),r("h4",{attrs:{id:"_2-层次遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-层次遍历"}},[a._v("#")]),a._v(" ⑵. 层次遍历")]),a._v(" "),r("h4",{attrs:{id:"_3-前中后序遍历"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-前中后序遍历"}},[a._v("#")]),a._v(" ⑶. 前中后序遍历")]),a._v(" "),r("h4",{attrs:{id:"_4-bst"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-bst"}},[a._v("#")]),a._v(" ⑷. BST")]),a._v(" "),r("h4",{attrs:{id:"_5-trie"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-trie"}},[a._v("#")]),a._v(" ⑸. Trie")]),a._v(" "),r("h3",{attrs:{id:"_7-图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-图"}},[a._v("#")]),a._v(" 7. 图")]),a._v(" "),r("h3",{attrs:{id:"_8-位运算"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-位运算"}},[a._v("#")]),a._v(" 8. 位运算")]),a._v(" "),r("h1",{attrs:{id:"九、设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#九、设计模式"}},[a._v("#")]),a._v(" 九、设计模式")]),a._v(" "),r("h2",{attrs:{id:"一-、前言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、前言"}},[a._v("#")]),a._v(" （一）、前言")]),a._v(" "),r("h2",{attrs:{id:"二-、设计模式概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、设计模式概念"}},[a._v("#")]),a._v(" （二）、设计模式概念")]),a._v(" "),r("h2",{attrs:{id:"三-、单例模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、单例模式"}},[a._v("#")]),a._v(" （三）、单例模式")]),a._v(" "),r("h3",{attrs:{id:"_1-意图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-意图"}},[a._v("#")]),a._v(" 1. 意图")]),a._v(" "),r("h3",{attrs:{id:"_2-类图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-类图"}},[a._v("#")]),a._v(" 2. 类图")]),a._v(" "),r("h3",{attrs:{id:"_3-使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-使用场景"}},[a._v("#")]),a._v(" 3. 使用场景")]),a._v(" "),r("h3",{attrs:{id:"_4-jdk-的使用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-jdk-的使用"}},[a._v("#")]),a._v(" 4. JDK 的使用")]),a._v(" "),r("h3",{attrs:{id:"_5-实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-实现"}},[a._v("#")]),a._v(" 5. 实现")]),a._v(" "),r("h4",{attrs:{id:"_1-懒汉式-线程不安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-懒汉式-线程不安全"}},[a._v("#")]),a._v(" ⑴. 懒汉式-线程不安全")]),a._v(" "),r("h4",{attrs:{id:"_2-懒汉式-线程安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-懒汉式-线程安全"}},[a._v("#")]),a._v(" ⑵. 懒汉式-线程安全")]),a._v(" "),r("h4",{attrs:{id:"_3-饿汉式-线程安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-饿汉式-线程安全"}},[a._v("#")]),a._v(" ⑶. 饿汉式-线程安全")]),a._v(" "),r("h4",{attrs:{id:"_4-双重校验锁-线程安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-双重校验锁-线程安全"}},[a._v("#")]),a._v(" ⑷. 双重校验锁-线程安全")]),a._v(" "),r("h2",{attrs:{id:"四-、简单工厂"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、简单工厂"}},[a._v("#")]),a._v(" （四）、简单工厂")]),a._v(" "),r("h3",{attrs:{id:"_1-意图-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-意图-2"}},[a._v("#")]),a._v(" 1. 意图")]),a._v(" "),r("h3",{attrs:{id:"_2-类图-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-类图-2"}},[a._v("#")]),a._v(" 2. 类图")]),a._v(" "),r("h3",{attrs:{id:"_3-实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现"}},[a._v("#")]),a._v(" 3. 实现")]),a._v(" "),r("h2",{attrs:{id:"五-、工厂方法模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、工厂方法模式"}},[a._v("#")]),a._v(" （五）、工厂方法模式")]),a._v(" "),r("h3",{attrs:{id:"_1-意图-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-意图-3"}},[a._v("#")]),a._v(" 1. 意图")]),a._v(" "),r("h3",{attrs:{id:"_2-类图-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-类图-3"}},[a._v("#")]),a._v(" 2. 类图")]),a._v(" "),r("h3",{attrs:{id:"_3-实现-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现-2"}},[a._v("#")]),a._v(" 3. 实现")]),a._v(" "),r("h2",{attrs:{id:"六-、抽象工厂模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、抽象工厂模式"}},[a._v("#")]),a._v(" （六）、抽象工厂模式")]),a._v(" "),r("h3",{attrs:{id:"_1-意图-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-意图-4"}},[a._v("#")]),a._v(" 1. 意图")]),a._v(" "),r("h3",{attrs:{id:"_2-类图-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-类图-4"}},[a._v("#")]),a._v(" 2. 类图")]),a._v(" "),r("h3",{attrs:{id:"_3-代码实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-代码实现"}},[a._v("#")]),a._v(" 3. 代码实现")]),a._v(" "),r("h1",{attrs:{id:"十、面向对象思想"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十、面向对象思想"}},[a._v("#")]),a._v(" 十、面向对象思想")]),a._v(" "),r("h2",{attrs:{id:"一-、设计原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、设计原则"}},[a._v("#")]),a._v(" （一）、设计原则")]),a._v(" "),r("h3",{attrs:{id:"_1-s-o-l-i-d"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-s-o-l-i-d"}},[a._v("#")]),a._v(" 1. S.O.L.I.D")]),a._v(" "),r("h4",{attrs:{id:"_1-单一责任原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-单一责任原则"}},[a._v("#")]),a._v(" ⑴. 单一责任原则")]),a._v(" "),r("h4",{attrs:{id:"_2-开放封闭原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-开放封闭原则"}},[a._v("#")]),a._v(" ⑵. 开放封闭原则")]),a._v(" "),r("h4",{attrs:{id:"_3-里氏替换原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-里氏替换原则"}},[a._v("#")]),a._v(" ⑶. 里氏替换原则")]),a._v(" "),r("h4",{attrs:{id:"_4-接口分离原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-接口分离原则"}},[a._v("#")]),a._v(" ⑷. 接口分离原则")]),a._v(" "),r("h4",{attrs:{id:"_5-依赖倒置原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-依赖倒置原则"}},[a._v("#")]),a._v(" ⑸. 依赖倒置原则")]),a._v(" "),r("h3",{attrs:{id:"_2-其他常见原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-其他常见原则"}},[a._v("#")]),a._v(" 2. 其他常见原则")]),a._v(" "),r("h4",{attrs:{id:"_1-迪米特法则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-迪米特法则"}},[a._v("#")]),a._v(" ⑴. 迪米特法则")]),a._v(" "),r("h4",{attrs:{id:"_2-合成复用原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-合成复用原则"}},[a._v("#")]),a._v(" ⑵. 合成复用原则")]),a._v(" "),r("h4",{attrs:{id:"_3-共同封闭原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-共同封闭原则"}},[a._v("#")]),a._v(" ⑶. 共同封闭原则")]),a._v(" "),r("h4",{attrs:{id:"_4-稳定抽象原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-稳定抽象原则"}},[a._v("#")]),a._v(" ⑷. 稳定抽象原则")]),a._v(" "),r("h4",{attrs:{id:"_5-稳定依赖原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-稳定依赖原则"}},[a._v("#")]),a._v(" ⑸. 稳定依赖原则")]),a._v(" "),r("h2",{attrs:{id:"二-、三大特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、三大特性"}},[a._v("#")]),a._v(" （二）、三大特性")]),a._v(" "),r("h3",{attrs:{id:"_1-封装"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-封装"}},[a._v("#")]),a._v(" 1. 封装")]),a._v(" "),r("h3",{attrs:{id:"_2-继承"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-继承"}},[a._v("#")]),a._v(" 2. 继承")]),a._v(" "),r("h3",{attrs:{id:"_3-多态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-多态"}},[a._v("#")]),a._v(" 3. 多态")]),a._v(" "),r("h2",{attrs:{id:"三-、uml"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、uml"}},[a._v("#")]),a._v(" （三）、UML")]),a._v(" "),r("h3",{attrs:{id:"_1-类图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-类图"}},[a._v("#")]),a._v(" 1. 类图")]),a._v(" "),r("h4",{attrs:{id:"_1-继承相关"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-继承相关"}},[a._v("#")]),a._v(" ⑴. 继承相关")]),a._v(" "),r("h4",{attrs:{id:"_2-泛化关系-generalize"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-泛化关系-generalize"}},[a._v("#")]),a._v(" ⑵. 泛化关系 (Generalize)")]),a._v(" "),r("h4",{attrs:{id:"_3-实现关系-realize"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现关系-realize"}},[a._v("#")]),a._v(" ⑶. 实现关系 (Realize)")]),a._v(" "),r("h4",{attrs:{id:"_4-整体和部分"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-整体和部分"}},[a._v("#")]),a._v(" ⑷. 整体和部分")]),a._v(" "),r("h4",{attrs:{id:"_5-聚合关系-aggregation"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-聚合关系-aggregation"}},[a._v("#")]),a._v(" ⑸. 聚合关系 (Aggregation)")]),a._v(" "),r("h4",{attrs:{id:"_6-组合关系-composition"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-组合关系-composition"}},[a._v("#")]),a._v(" ⑹. 组合关系 (Composition)")]),a._v(" "),r("h4",{attrs:{id:"_7-相互联系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-相互联系"}},[a._v("#")]),a._v(" ⑺. 相互联系")]),a._v(" "),r("h4",{attrs:{id:"_8-关联关系-association"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-关联关系-association"}},[a._v("#")]),a._v(" ⑻. 关联关系 (Association)")]),a._v(" "),r("h4",{attrs:{id:"_9-依赖关系-dependency"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-依赖关系-dependency"}},[a._v("#")]),a._v(" ⑼. 依赖关系 (Dependency)")]),a._v(" "),r("h3",{attrs:{id:"_2-时序图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-时序图"}},[a._v("#")]),a._v(" 2. 时序图")]),a._v(" "),r("h4",{attrs:{id:"_1-定义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义"}},[a._v("#")]),a._v(" ⑴. 定义")]),a._v(" "),r("h4",{attrs:{id:"_2-赤壁之战时序图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-赤壁之战时序图"}},[a._v("#")]),a._v(" ⑵. 赤壁之战时序图")]),a._v(" "),r("h4",{attrs:{id:"_3-活动图、时序图之间的关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-活动图、时序图之间的关系"}},[a._v("#")]),a._v(" ⑶. 活动图、时序图之间的关系")]),a._v(" "),r("h4",{attrs:{id:"_4-类图与时序图的关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-类图与时序图的关系"}},[a._v("#")]),a._v(" ⑷. 类图与时序图的关系")]),a._v(" "),r("h4",{attrs:{id:"_5-时序图的组成"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-时序图的组成"}},[a._v("#")]),a._v(" ⑸. 时序图的组成")]),a._v(" "),r("h4",{attrs:{id:"_6-对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-对象"}},[a._v("#")]),a._v(" ⑹. 对象")]),a._v(" "),r("h4",{attrs:{id:"_7-生命线"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-生命线"}},[a._v("#")]),a._v(" ⑺. 生命线")]),a._v(" "),r("h4",{attrs:{id:"_8-消息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-消息"}},[a._v("#")]),a._v(" ⑻. 消息")]),a._v(" "),r("h4",{attrs:{id:"_9-激活"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-激活"}},[a._v("#")]),a._v(" ⑼. 激活")]),a._v(" "),r("h1",{attrs:{id:"十一、数据库系统原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十一、数据库系统原理"}},[a._v("#")]),a._v(" 十一、数据库系统原理")]),a._v(" "),r("h2",{attrs:{id:"一-、事务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、事务"}},[a._v("#")]),a._v(" （一）、事务")]),a._v(" "),r("h3",{attrs:{id:"_1-概念-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-概念-5"}},[a._v("#")]),a._v(" 1. 概念")]),a._v(" "),r("h3",{attrs:{id:"_2-四大特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-四大特性"}},[a._v("#")]),a._v(" 2. 四大特性")]),a._v(" "),r("p",[a._v(". 原子性（Atomicity）")]),a._v(" "),r("p",[a._v(". 一致性（Consistency）")]),a._v(" "),r("p",[a._v(". 隔离性（Isolation）")]),a._v(" "),r("p",[a._v(". 持久性（Durability）")]),a._v(" "),r("h2",{attrs:{id:"二-、并发一致性问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、并发一致性问题"}},[a._v("#")]),a._v(" （二）、并发一致性问题")]),a._v(" "),r("h3",{attrs:{id:"_1-问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-问题"}},[a._v("#")]),a._v(" 1. 问题")]),a._v(" "),r("h4",{attrs:{id:"_1-丢失修改"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-丢失修改"}},[a._v("#")]),a._v(" ⑴. 丢失修改")]),a._v(" "),r("h4",{attrs:{id:"_2-读脏数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-读脏数据"}},[a._v("#")]),a._v(" ⑵. 读脏数据")]),a._v(" "),r("h4",{attrs:{id:"_3-不可重复读"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-不可重复读"}},[a._v("#")]),a._v(" ⑶. 不可重复读")]),a._v(" "),r("h4",{attrs:{id:"_4-幻影读"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-幻影读"}},[a._v("#")]),a._v(" ⑷. 幻影读")]),a._v(" "),r("h3",{attrs:{id:"_2-解决方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-解决方法"}},[a._v("#")]),a._v(" 2. 解决方法")]),a._v(" "),r("h2",{attrs:{id:"三-、封锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、封锁"}},[a._v("#")]),a._v(" （三）、封锁")]),a._v(" "),r("h3",{attrs:{id:"_1-封锁粒度"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-封锁粒度"}},[a._v("#")]),a._v(" 1. 封锁粒度")]),a._v(" "),r("h3",{attrs:{id:"_2-封锁类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-封锁类型"}},[a._v("#")]),a._v(" 2. 封锁类型")]),a._v(" "),r("h4",{attrs:{id:"_1-排它锁与共享锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-排它锁与共享锁"}},[a._v("#")]),a._v(" ⑴. 排它锁与共享锁")]),a._v(" "),r("h4",{attrs:{id:"_2-意向锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-意向锁"}},[a._v("#")]),a._v(" ⑵. 意向锁")]),a._v(" "),r("h3",{attrs:{id:"_3-封锁协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-封锁协议"}},[a._v("#")]),a._v(" 3. 封锁协议")]),a._v(" "),r("h4",{attrs:{id:"_1-三级封锁协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-三级封锁协议"}},[a._v("#")]),a._v(" ⑴. 三级封锁协议")]),a._v(" "),r("h4",{attrs:{id:"_2-两段锁协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-两段锁协议"}},[a._v("#")]),a._v(" ⑵. 两段锁协议")]),a._v(" "),r("h2",{attrs:{id:"四-、隔离级别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、隔离级别"}},[a._v("#")]),a._v(" （四）、隔离级别")]),a._v(" "),r("h2",{attrs:{id:"五-、多版本并发控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、多版本并发控制"}},[a._v("#")]),a._v(" （五）、多版本并发控制")]),a._v(" "),r("h3",{attrs:{id:"_1-版本号"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-版本号"}},[a._v("#")]),a._v(" 1. 版本号")]),a._v(" "),r("h3",{attrs:{id:"_2-undo-日志"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-undo-日志"}},[a._v("#")]),a._v(" 2. Undo 日志")]),a._v(" "),r("h3",{attrs:{id:"_3-实现过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-实现过程"}},[a._v("#")]),a._v(" 3. 实现过程")]),a._v(" "),r("h4",{attrs:{id:"_1-select-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-select-2"}},[a._v("#")]),a._v(" ⑴. SELECT")]),a._v(" "),r("h4",{attrs:{id:"_2-insert"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-insert"}},[a._v("#")]),a._v(" ⑵. INSERT")]),a._v(" "),r("h4",{attrs:{id:"_3-delete"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-delete"}},[a._v("#")]),a._v(" ⑶. DELETE")]),a._v(" "),r("h4",{attrs:{id:"_4-update"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-update"}},[a._v("#")]),a._v(" ⑷. UPDATE")]),a._v(" "),r("h3",{attrs:{id:"_4-快照读与当前读"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-快照读与当前读"}},[a._v("#")]),a._v(" 4. 快照读与当前读")]),a._v(" "),r("h2",{attrs:{id:"六-、next-key-locks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、next-key-locks"}},[a._v("#")]),a._v(" （六）、Next-Key Locks")]),a._v(" "),r("h3",{attrs:{id:"_1-record-locks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-record-locks"}},[a._v("#")]),a._v(" 1. Record Locks")]),a._v(" "),r("h3",{attrs:{id:"_2-grap-locks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-grap-locks"}},[a._v("#")]),a._v(" 2. Grap Locks")]),a._v(" "),r("h3",{attrs:{id:"_3-next-key-locks"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-next-key-locks"}},[a._v("#")]),a._v(" 3. Next-Key Locks")]),a._v(" "),r("h2",{attrs:{id:"七-、关系数据库设计理论"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、关系数据库设计理论"}},[a._v("#")]),a._v(" （七）、关系数据库设计理论")]),a._v(" "),r("h3",{attrs:{id:"_1-函数依赖"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-函数依赖"}},[a._v("#")]),a._v(" 1. 函数依赖")]),a._v(" "),r("h3",{attrs:{id:"_2-异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-异常"}},[a._v("#")]),a._v(" 2. 异常")]),a._v(" "),r("h3",{attrs:{id:"_3-范式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-范式"}},[a._v("#")]),a._v(" 3. 范式")]),a._v(" "),r("h4",{attrs:{id:"_1-第一范式-1nf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-第一范式-1nf"}},[a._v("#")]),a._v(" ⑴. 第一范式 (1NF)")]),a._v(" "),r("h4",{attrs:{id:"_2-第二范式-2nf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-第二范式-2nf"}},[a._v("#")]),a._v(" ⑵. 第二范式 (2NF)")]),a._v(" "),r("h4",{attrs:{id:"_3-第三范式-3nf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-第三范式-3nf"}},[a._v("#")]),a._v(" ⑶. 第三范式 (3NF)")]),a._v(" "),r("h4",{attrs:{id:"_4-bc-范式-bcnf"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-bc-范式-bcnf"}},[a._v("#")]),a._v(" ⑷. BC 范式（BCNF）")]),a._v(" "),r("h2",{attrs:{id:"八-、数据库系统概述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八-、数据库系统概述"}},[a._v("#")]),a._v(" （八）、数据库系统概述")]),a._v(" "),r("h3",{attrs:{id:"_1-基本术语"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本术语"}},[a._v("#")]),a._v(" 1. 基本术语")]),a._v(" "),r("h4",{attrs:{id:"_1-数据模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据模型"}},[a._v("#")]),a._v(" ⑴. 数据模型")]),a._v(" "),r("h4",{attrs:{id:"_2-数据库系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据库系统"}},[a._v("#")]),a._v(" ⑵. 数据库系统")]),a._v(" "),r("h3",{attrs:{id:"_2-数据库的三层模式和两层映像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据库的三层模式和两层映像"}},[a._v("#")]),a._v(" 2. 数据库的三层模式和两层映像")]),a._v(" "),r("h4",{attrs:{id:"_1-外模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-外模式"}},[a._v("#")]),a._v(" ⑴. 外模式")]),a._v(" "),r("h4",{attrs:{id:"_2-模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-模式"}},[a._v("#")]),a._v(" ⑵. 模式")]),a._v(" "),r("h4",{attrs:{id:"_3-内模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-内模式"}},[a._v("#")]),a._v(" ⑶. 内模式")]),a._v(" "),r("h4",{attrs:{id:"_4-外模式-模式映像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-外模式-模式映像"}},[a._v("#")]),a._v(" ⑷. 外模式/模式映像")]),a._v(" "),r("h4",{attrs:{id:"_5-模式-内模式映像"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-模式-内模式映像"}},[a._v("#")]),a._v(" ⑸. 模式/内模式映像")]),a._v(" "),r("h2",{attrs:{id:"九-、关系数据库建模"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#九-、关系数据库建模"}},[a._v("#")]),a._v(" （九）、关系数据库建模")]),a._v(" "),r("h3",{attrs:{id:"_1-er-图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-er-图"}},[a._v("#")]),a._v(" 1. ER 图")]),a._v(" "),r("h4",{attrs:{id:"_1-实体的三种联系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-实体的三种联系"}},[a._v("#")]),a._v(" ⑴. 实体的三种联系")]),a._v(" "),r("h4",{attrs:{id:"_2-表示出现多次的关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-表示出现多次的关系"}},[a._v("#")]),a._v(" ⑵. 表示出现多次的关系")]),a._v(" "),r("h4",{attrs:{id:"_3-联系的多向性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-联系的多向性"}},[a._v("#")]),a._v(" ⑶. 联系的多向性")]),a._v(" "),r("h4",{attrs:{id:"_4-表示子类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-表示子类"}},[a._v("#")]),a._v(" ⑷. 表示子类")]),a._v(" "),r("h2",{attrs:{id:"十-、约束"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十-、约束"}},[a._v("#")]),a._v(" （十）、约束")]),a._v(" "),r("h3",{attrs:{id:"_1-键码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-键码"}},[a._v("#")]),a._v(" 1. 键码")]),a._v(" "),r("h3",{attrs:{id:"_2-单值约束"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-单值约束"}},[a._v("#")]),a._v(" 2. 单值约束")]),a._v(" "),r("h3",{attrs:{id:"_3-引用完整性约束"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-引用完整性约束"}},[a._v("#")]),a._v(" 3. 引用完整性约束")]),a._v(" "),r("h3",{attrs:{id:"_4-域约束"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-域约束"}},[a._v("#")]),a._v(" 4. 域约束")]),a._v(" "),r("h3",{attrs:{id:"_5-一般约束"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-一般约束"}},[a._v("#")]),a._v(" 5. 一般约束")]),a._v(" "),r("h1",{attrs:{id:"十二、sql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十二、sql"}},[a._v("#")]),a._v(" 十二、SQL")]),a._v(" "),r("h2",{attrs:{id:"一-、基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、基础"}},[a._v("#")]),a._v(" （一）、基础")]),a._v(" "),r("h2",{attrs:{id:"二-、创建表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、创建表"}},[a._v("#")]),a._v(" （二）、创建表")]),a._v(" "),r("h2",{attrs:{id:"三-、修改表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、修改表"}},[a._v("#")]),a._v(" （三）、修改表")]),a._v(" "),r("h2",{attrs:{id:"四-、插入"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、插入"}},[a._v("#")]),a._v(" （四）、插入")]),a._v(" "),r("h2",{attrs:{id:"五-、更新"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、更新"}},[a._v("#")]),a._v(" （五）、更新")]),a._v(" "),r("h2",{attrs:{id:"六-、删除"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、删除"}},[a._v("#")]),a._v(" （六）、删除")]),a._v(" "),r("h2",{attrs:{id:"七-、查询"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、查询"}},[a._v("#")]),a._v(" （七）、查询")]),a._v(" "),r("h3",{attrs:{id:"_1-distinct"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-distinct"}},[a._v("#")]),a._v(" 1. DISTINCT")]),a._v(" "),r("h3",{attrs:{id:"_2-limit"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-limit"}},[a._v("#")]),a._v(" 2. LIMIT")]),a._v(" "),r("h2",{attrs:{id:"八-、排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八-、排序"}},[a._v("#")]),a._v(" （八）、排序")]),a._v(" "),r("h2",{attrs:{id:"九-、过滤"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#九-、过滤"}},[a._v("#")]),a._v(" （九）、过滤")]),a._v(" "),r("h2",{attrs:{id:"十-、通配符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十-、通配符"}},[a._v("#")]),a._v(" （十）、通配符")]),a._v(" "),r("h2",{attrs:{id:"十一-、计算字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十一-、计算字段"}},[a._v("#")]),a._v(" （十一）、计算字段")]),a._v(" "),r("h2",{attrs:{id:"十二-、函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十二-、函数"}},[a._v("#")]),a._v(" （十二）、函数")]),a._v(" "),r("h3",{attrs:{id:"_1-文本处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-文本处理"}},[a._v("#")]),a._v(" 1. 文本处理")]),a._v(" "),r("h3",{attrs:{id:"_2-日期和时间处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-日期和时间处理"}},[a._v("#")]),a._v(" 2. 日期和时间处理")]),a._v(" "),r("h3",{attrs:{id:"_3-数值处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-数值处理"}},[a._v("#")]),a._v(" 3. 数值处理")]),a._v(" "),r("h3",{attrs:{id:"_4-汇总"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-汇总"}},[a._v("#")]),a._v(" 4. 汇总")]),a._v(" "),r("h2",{attrs:{id:"十三-、分组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十三-、分组"}},[a._v("#")]),a._v(" （十三）、分组")]),a._v(" "),r("h2",{attrs:{id:"十四-、子查询"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十四-、子查询"}},[a._v("#")]),a._v(" （十四）、子查询")]),a._v(" "),r("h2",{attrs:{id:"十五-、连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十五-、连接"}},[a._v("#")]),a._v(" （十五）、连接")]),a._v(" "),r("h3",{attrs:{id:"_1-内连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-内连接"}},[a._v("#")]),a._v(" 1. 内连接")]),a._v(" "),r("h3",{attrs:{id:"_2-自连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-自连接"}},[a._v("#")]),a._v(" 2. 自连接")]),a._v(" "),r("h3",{attrs:{id:"_3-自然连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-自然连接"}},[a._v("#")]),a._v(" 3. 自然连接")]),a._v(" "),r("h3",{attrs:{id:"_4-外连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-外连接"}},[a._v("#")]),a._v(" 4. 外连接")]),a._v(" "),r("h2",{attrs:{id:"十六-、组合查询"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十六-、组合查询"}},[a._v("#")]),a._v(" （十六）、组合查询")]),a._v(" "),r("h2",{attrs:{id:"十七-、视图"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十七-、视图"}},[a._v("#")]),a._v(" （十七）、视图")]),a._v(" "),r("h2",{attrs:{id:"十八-、存储过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十八-、存储过程"}},[a._v("#")]),a._v(" （十八）、存储过程")]),a._v(" "),r("h3",{attrs:{id:"_1-使用存储过程的好处"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用存储过程的好处"}},[a._v("#")]),a._v(" 1. 使用存储过程的好处")]),a._v(" "),r("h3",{attrs:{id:"_2-创建存储过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建存储过程"}},[a._v("#")]),a._v(" 2. 创建存储过程")]),a._v(" "),r("h2",{attrs:{id:"十九-、游标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十九-、游标"}},[a._v("#")]),a._v(" （十九）、游标")]),a._v(" "),r("h2",{attrs:{id:"二十-、触发器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十-、触发器"}},[a._v("#")]),a._v(" （二十）、触发器")]),a._v(" "),r("h2",{attrs:{id:"二十一-、事务处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十一-、事务处理"}},[a._v("#")]),a._v(" （二十一）、事务处理")]),a._v(" "),r("h2",{attrs:{id:"二十二-、字符集"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十二-、字符集"}},[a._v("#")]),a._v(" （二十二）、字符集")]),a._v(" "),r("h2",{attrs:{id:"二十三-、权限管理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十三-、权限管理"}},[a._v("#")]),a._v(" （二十三）、权限管理")]),a._v(" "),r("h3",{attrs:{id:"_1-创建账户"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建账户"}},[a._v("#")]),a._v(" 1. 创建账户")]),a._v(" "),r("h3",{attrs:{id:"_2-修改账户名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改账户名"}},[a._v("#")]),a._v(" 2. 修改账户名")]),a._v(" "),r("h3",{attrs:{id:"_3-删除账户"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-删除账户"}},[a._v("#")]),a._v(" 3. 删除账户")]),a._v(" "),r("h3",{attrs:{id:"_4-查看权限"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看权限"}},[a._v("#")]),a._v(" 4. 查看权限")]),a._v(" "),r("h3",{attrs:{id:"_5-授予权限"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-授予权限"}},[a._v("#")]),a._v(" 5. 授予权限")]),a._v(" "),r("h3",{attrs:{id:"_6-删除权限"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-删除权限"}},[a._v("#")]),a._v(" 6. 删除权限")]),a._v(" "),r("h3",{attrs:{id:"_7-更改密码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-更改密码"}},[a._v("#")]),a._v(" 7. 更改密码")]),a._v(" "),r("h1",{attrs:{id:"十三、mysql"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十三、mysql"}},[a._v("#")]),a._v(" 十三、MySQL")]),a._v(" "),r("h2",{attrs:{id:"一-、储存引擎"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、储存引擎"}},[a._v("#")]),a._v(" （一）、储存引擎")]),a._v(" "),r("h3",{attrs:{id:"_1-innodb"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-innodb"}},[a._v("#")]),a._v(" 1. InnoDB")]),a._v(" "),r("h3",{attrs:{id:"_2-myisam"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-myisam"}},[a._v("#")]),a._v(" 2. MyISAM")]),a._v(" "),r("h3",{attrs:{id:"_3-比较"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-比较"}},[a._v("#")]),a._v(" 3. 比较")]),a._v(" "),r("h2",{attrs:{id:"二-、数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、数据类型"}},[a._v("#")]),a._v(" （二）、数据类型")]),a._v(" "),r("h3",{attrs:{id:"_1-整型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-整型"}},[a._v("#")]),a._v(" 1. 整型")]),a._v(" "),r("h3",{attrs:{id:"_2-浮点数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-浮点数"}},[a._v("#")]),a._v(" 2. 浮点数")]),a._v(" "),r("h3",{attrs:{id:"_3-字符串-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符串-2"}},[a._v("#")]),a._v(" 3. 字符串")]),a._v(" "),r("h3",{attrs:{id:"_4-时间和日期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-时间和日期"}},[a._v("#")]),a._v(" 4. 时间和日期")]),a._v(" "),r("h4",{attrs:{id:"_1-datatime"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-datatime"}},[a._v("#")]),a._v(" ⑴. DATATIME")]),a._v(" "),r("h4",{attrs:{id:"_2-timestamp"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-timestamp"}},[a._v("#")]),a._v(" ⑵. TIMESTAMP")]),a._v(" "),r("h2",{attrs:{id:"三-、索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、索引"}},[a._v("#")]),a._v(" （三）、索引")]),a._v(" "),r("h3",{attrs:{id:"_1-索引分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-索引分类"}},[a._v("#")]),a._v(" 1. 索引分类")]),a._v(" "),r("h4",{attrs:{id:"_1-b-tree-索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-b-tree-索引"}},[a._v("#")]),a._v(" ⑴. B+Tree 索引")]),a._v(" "),r("h4",{attrs:{id:"_2-哈希索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-哈希索引"}},[a._v("#")]),a._v(" ⑵. 哈希索引")]),a._v(" "),r("h4",{attrs:{id:"_3-空间索引-r-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-空间索引-r-tree"}},[a._v("#")]),a._v(" ⑶. 空间索引（R-Tree）")]),a._v(" "),r("h4",{attrs:{id:"_4-全文索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-全文索引"}},[a._v("#")]),a._v(" ⑷. 全文索引")]),a._v(" "),r("h3",{attrs:{id:"_2-索引的优点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-索引的优点"}},[a._v("#")]),a._v(" 2. 索引的优点")]),a._v(" "),r("h3",{attrs:{id:"_3-索引优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-索引优化"}},[a._v("#")]),a._v(" 3. 索引优化")]),a._v(" "),r("h4",{attrs:{id:"_1-独立的列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-独立的列"}},[a._v("#")]),a._v(" ⑴. 独立的列")]),a._v(" "),r("h4",{attrs:{id:"_2-前缀索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-前缀索引"}},[a._v("#")]),a._v(" ⑵. 前缀索引")]),a._v(" "),r("h4",{attrs:{id:"_3-多列索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-多列索引"}},[a._v("#")]),a._v(" ⑶. 多列索引")]),a._v(" "),r("h4",{attrs:{id:"_4-索引列的顺序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-索引列的顺序"}},[a._v("#")]),a._v(" ⑷. 索引列的顺序")]),a._v(" "),r("h4",{attrs:{id:"_5-聚簇索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-聚簇索引"}},[a._v("#")]),a._v(" ⑸. 聚簇索引")]),a._v(" "),r("h4",{attrs:{id:"_6-覆盖索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-覆盖索引"}},[a._v("#")]),a._v(" ⑹. 覆盖索引")]),a._v(" "),r("h3",{attrs:{id:"_4-b-tree-和-b-tree-原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-b-tree-和-b-tree-原理"}},[a._v("#")]),a._v(" 4. B-Tree 和 B+Tree 原理")]),a._v(" "),r("h4",{attrs:{id:"_1-b-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-b-tree"}},[a._v("#")]),a._v(" ⑴. B-Tree")]),a._v(" "),r("h4",{attrs:{id:"_2-b-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-b-tree"}},[a._v("#")]),a._v(" ⑵. B+Tree")]),a._v(" "),r("h4",{attrs:{id:"_3-带有顺序访问指针的-b-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-带有顺序访问指针的-b-tree"}},[a._v("#")]),a._v(" ⑶. 带有顺序访问指针的 B+Tree")]),a._v(" "),r("h4",{attrs:{id:"_4-为什么使用-b-tree-和-b-tree"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-为什么使用-b-tree-和-b-tree"}},[a._v("#")]),a._v(" ⑷. 为什么使用 B-Tree 和 B+Tree")]),a._v(" "),r("h2",{attrs:{id:"四-、查询性能优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、查询性能优化"}},[a._v("#")]),a._v(" （四）、查询性能优化")]),a._v(" "),r("h3",{attrs:{id:"_1-explain"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-explain"}},[a._v("#")]),a._v(" 1. Explain")]),a._v(" "),r("h3",{attrs:{id:"_2-减少返回的列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-减少返回的列"}},[a._v("#")]),a._v(" 2. 减少返回的列")]),a._v(" "),r("h3",{attrs:{id:"_3-减少返回的行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-减少返回的行"}},[a._v("#")]),a._v(" 3. 减少返回的行")]),a._v(" "),r("h3",{attrs:{id:"_4-拆分大的-delete-或-insert-语句"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-拆分大的-delete-或-insert-语句"}},[a._v("#")]),a._v(" 4. 拆分大的 DELETE 或 INSERT 语句")]),a._v(" "),r("h2",{attrs:{id:"五-、切分"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、切分"}},[a._v("#")]),a._v(" （五）、切分")]),a._v(" "),r("h3",{attrs:{id:"_1-垂直切分"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-垂直切分"}},[a._v("#")]),a._v(" 1. 垂直切分")]),a._v(" "),r("h3",{attrs:{id:"_2-水平切分"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-水平切分"}},[a._v("#")]),a._v(" 2. 水平切分")]),a._v(" "),r("h3",{attrs:{id:"_3-切分的选择"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-切分的选择"}},[a._v("#")]),a._v(" 3. 切分的选择")]),a._v(" "),r("h3",{attrs:{id:"_4-存在的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-存在的问题"}},[a._v("#")]),a._v(" 4. 存在的问题")]),a._v(" "),r("h4",{attrs:{id:"_1-事务问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-事务问题"}},[a._v("#")]),a._v(" ⑴. 事务问题")]),a._v(" "),r("h4",{attrs:{id:"_2-跨库跨表连接问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-跨库跨表连接问题"}},[a._v("#")]),a._v(" ⑵. 跨库跨表连接问题")]),a._v(" "),r("h4",{attrs:{id:"_3-额外的数据管理负担和数据运算压力"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-额外的数据管理负担和数据运算压力"}},[a._v("#")]),a._v(" ⑶. 额外的数据管理负担和数据运算压力")]),a._v(" "),r("h2",{attrs:{id:"六-、数据转移和故障恢复"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、数据转移和故障恢复"}},[a._v("#")]),a._v(" （六）、数据转移和故障恢复")]),a._v(" "),r("h3",{attrs:{id:"_1-提升备库或切换角色"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-提升备库或切换角色"}},[a._v("#")]),a._v(" 1. 提升备库或切换角色")]),a._v(" "),r("h3",{attrs:{id:"_2-虚拟-ip-地址和-ip-托管"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-虚拟-ip-地址和-ip-托管"}},[a._v("#")]),a._v(" 2. 虚拟 IP 地址和 IP 托管")]),a._v(" "),r("h3",{attrs:{id:"_3-中间件解决方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-中间件解决方案"}},[a._v("#")]),a._v(" 3. 中间件解决方案")]),a._v(" "),r("h3",{attrs:{id:"_4-在应用中处理故障转移"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-在应用中处理故障转移"}},[a._v("#")]),a._v(" 4. 在应用中处理故障转移")]),a._v(" "),r("h1",{attrs:{id:"十四、redis"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十四、redis"}},[a._v("#")]),a._v(" 十四、Redis")]),a._v(" "),r("h2",{attrs:{id:"一-、redis是什么"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、redis是什么"}},[a._v("#")]),a._v(" （一）、Redis是什么")]),a._v(" "),r("h2",{attrs:{id:"二-、五种基本类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、五种基本类型"}},[a._v("#")]),a._v(" （二）、五种基本类型")]),a._v(" "),r("h3",{attrs:{id:"_1-string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-string"}},[a._v("#")]),a._v(" 1. STRING")]),a._v(" "),r("h3",{attrs:{id:"_2-list"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-list"}},[a._v("#")]),a._v(" 2. LIST")]),a._v(" "),r("h3",{attrs:{id:"_3-set"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-set"}},[a._v("#")]),a._v(" 3. SET")]),a._v(" "),r("h3",{attrs:{id:"_4-hash"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-hash"}},[a._v("#")]),a._v(" 4. HASH")]),a._v(" "),r("h3",{attrs:{id:"_5-zset"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-zset"}},[a._v("#")]),a._v(" 5. ZSET")]),a._v(" "),r("h2",{attrs:{id:"三-、键的过期时间"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、键的过期时间"}},[a._v("#")]),a._v(" （三）、键的过期时间")]),a._v(" "),r("h2",{attrs:{id:"四-、发布与订阅"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、发布与订阅"}},[a._v("#")]),a._v(" （四）、发布与订阅")]),a._v(" "),r("h2",{attrs:{id:"五-、事务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、事务"}},[a._v("#")]),a._v(" （五）、事务")]),a._v(" "),r("h2",{attrs:{id:"六-、持久化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、持久化"}},[a._v("#")]),a._v(" （六）、持久化")]),a._v(" "),r("h3",{attrs:{id:"_1-快照持久化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-快照持久化"}},[a._v("#")]),a._v(" 1. 快照持久化")]),a._v(" "),r("h3",{attrs:{id:"_2-aof-持久化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-aof-持久化"}},[a._v("#")]),a._v(" 2. AOF 持久化")]),a._v(" "),r("h2",{attrs:{id:"七-、复制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、复制"}},[a._v("#")]),a._v(" （七）、复制")]),a._v(" "),r("h3",{attrs:{id:"_1-从服务器连接主服务器的过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-从服务器连接主服务器的过程"}},[a._v("#")]),a._v(" 1. 从服务器连接主服务器的过程")]),a._v(" "),r("h3",{attrs:{id:"_2-主从链"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-主从链"}},[a._v("#")]),a._v(" 2. 主从链")]),a._v(" "),r("h2",{attrs:{id:"八-、处理故障"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八-、处理故障"}},[a._v("#")]),a._v(" （八）、处理故障")]),a._v(" "),r("h2",{attrs:{id:"九-、分片"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#九-、分片"}},[a._v("#")]),a._v(" （九）、分片")]),a._v(" "),r("h3",{attrs:{id:"_1-客户端分片"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-客户端分片"}},[a._v("#")]),a._v(" 1. 客户端分片")]),a._v(" "),r("h3",{attrs:{id:"_2-代理分片"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-代理分片"}},[a._v("#")]),a._v(" 2. 代理分片")]),a._v(" "),r("h3",{attrs:{id:"_3-服务器分片"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-服务器分片"}},[a._v("#")]),a._v(" 3. 服务器分片")]),a._v(" "),r("h2",{attrs:{id:"十-、事件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十-、事件"}},[a._v("#")]),a._v(" （十）、事件")]),a._v(" "),r("h3",{attrs:{id:"_1-事件类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-事件类型"}},[a._v("#")]),a._v(" 1. 事件类型")]),a._v(" "),r("h4",{attrs:{id:"_1-文件事件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-文件事件"}},[a._v("#")]),a._v(" ⑴. 文件事件")]),a._v(" "),r("h4",{attrs:{id:"_2-时间事件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-时间事件"}},[a._v("#")]),a._v(" ⑵. 时间事件")]),a._v(" "),r("h3",{attrs:{id:"_2-事件的调度与执行"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-事件的调度与执行"}},[a._v("#")]),a._v(" 2. 事件的调度与执行")]),a._v(" "),r("h2",{attrs:{id:"十一-、redis-与-memcached-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十一-、redis-与-memcached-的区别"}},[a._v("#")]),a._v(" （十一）、Redis 与 Memcached 的区别")]),a._v(" "),r("h3",{attrs:{id:"_1-数据类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据类型"}},[a._v("#")]),a._v(" 1. 数据类型")]),a._v(" "),r("h3",{attrs:{id:"_2-数据持久化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-数据持久化"}},[a._v("#")]),a._v(" 2. 数据持久化")]),a._v(" "),r("h3",{attrs:{id:"_3-分布式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-分布式"}},[a._v("#")]),a._v(" 3. 分布式")]),a._v(" "),r("h3",{attrs:{id:"_4-内存管理机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-内存管理机制"}},[a._v("#")]),a._v(" 4. 内存管理机制")]),a._v(" "),r("h2",{attrs:{id:"十二-、redis-适用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十二-、redis-适用场景"}},[a._v("#")]),a._v(" （十二）、Redis 适用场景")]),a._v(" "),r("h3",{attrs:{id:"_1-缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-缓存"}},[a._v("#")]),a._v(" 1. 缓存")]),a._v(" "),r("h3",{attrs:{id:"_2-消息队列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-消息队列"}},[a._v("#")]),a._v(" 2. 消息队列")]),a._v(" "),r("h3",{attrs:{id:"_3-计数器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-计数器"}},[a._v("#")]),a._v(" 3. 计数器")]),a._v(" "),r("h3",{attrs:{id:"_4-好友关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-好友关系"}},[a._v("#")]),a._v(" 4. 好友关系")]),a._v(" "),r("h2",{attrs:{id:"十三-、数据淘汰策略"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十三-、数据淘汰策略"}},[a._v("#")]),a._v(" （十三）、数据淘汰策略")]),a._v(" "),r("h2",{attrs:{id:"十四-、一个简单的论坛系统分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十四-、一个简单的论坛系统分析"}},[a._v("#")]),a._v(" （十四）、一个简单的论坛系统分析")]),a._v(" "),r("h3",{attrs:{id:"_1-文章信息"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-文章信息"}},[a._v("#")]),a._v(" 1. 文章信息")]),a._v(" "),r("h3",{attrs:{id:"_2-点赞功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-点赞功能"}},[a._v("#")]),a._v(" 2. 点赞功能")]),a._v(" "),r("h3",{attrs:{id:"_3-对文章进行排序"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-对文章进行排序"}},[a._v("#")]),a._v(" 3. 对文章进行排序")]),a._v(" "),r("h1",{attrs:{id:"十五、java-虚拟机"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十五、java-虚拟机"}},[a._v("#")]),a._v(" 十五、Java 虚拟机")]),a._v(" "),r("h2",{attrs:{id:"一-、运行时数据区域"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、运行时数据区域"}},[a._v("#")]),a._v(" （一）、运行时数据区域")]),a._v(" "),r("h3",{attrs:{id:"_1-程序计数器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-程序计数器"}},[a._v("#")]),a._v(" 1. 程序计数器")]),a._v(" "),r("h3",{attrs:{id:"_2-java-虚拟机栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-java-虚拟机栈"}},[a._v("#")]),a._v(" 2. Java 虚拟机栈")]),a._v(" "),r("h3",{attrs:{id:"_3-本地方法栈"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-本地方法栈"}},[a._v("#")]),a._v(" 3. 本地方法栈")]),a._v(" "),r("h3",{attrs:{id:"_4-java-堆"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-java-堆"}},[a._v("#")]),a._v(" 4. Java 堆")]),a._v(" "),r("h3",{attrs:{id:"_5-方法区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-方法区"}},[a._v("#")]),a._v(" 5. 方法区")]),a._v(" "),r("h3",{attrs:{id:"_6-运行时常量池"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-运行时常量池"}},[a._v("#")]),a._v(" 6. 运行时常量池")]),a._v(" "),r("h3",{attrs:{id:"_7-直接内存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-直接内存"}},[a._v("#")]),a._v(" 7. 直接内存")]),a._v(" "),r("h2",{attrs:{id:"二-、垃圾收集"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、垃圾收集"}},[a._v("#")]),a._v(" （二）、垃圾收集")]),a._v(" "),r("h3",{attrs:{id:"_1-判断一个对象是否可回收"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-判断一个对象是否可回收"}},[a._v("#")]),a._v(" 1. 判断一个对象是否可回收")]),a._v(" "),r("h4",{attrs:{id:"_1-引用计数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-引用计数"}},[a._v("#")]),a._v(" ⑴. 引用计数")]),a._v(" "),r("h4",{attrs:{id:"_2-可达性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-可达性"}},[a._v("#")]),a._v(" ⑵. 可达性")]),a._v(" "),r("h4",{attrs:{id:"_3-引用类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-引用类型"}},[a._v("#")]),a._v(" ⑶. 引用类型")]),a._v(" "),r("h4",{attrs:{id:"_4-方法区的回收"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-方法区的回收"}},[a._v("#")]),a._v(" ⑷. 方法区的回收")]),a._v(" "),r("h4",{attrs:{id:"_5-finalize"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-finalize"}},[a._v("#")]),a._v(" ⑸. finalize()")]),a._v(" "),r("h3",{attrs:{id:"_2-垃圾收集算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-垃圾收集算法"}},[a._v("#")]),a._v(" 2. 垃圾收集算法")]),a._v(" "),r("h4",{attrs:{id:"_1-标记-清除"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-标记-清除"}},[a._v("#")]),a._v(" ⑴. 标记 - 清除")]),a._v(" "),r("h4",{attrs:{id:"_2-复制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-复制"}},[a._v("#")]),a._v(" ⑵. 复制")]),a._v(" "),r("h4",{attrs:{id:"_3-标记-整理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-标记-整理"}},[a._v("#")]),a._v(" ⑶. 标记 - 整理")]),a._v(" "),r("h4",{attrs:{id:"_4-分代收集"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-分代收集"}},[a._v("#")]),a._v(" ⑷. 分代收集")]),a._v(" "),r("h3",{attrs:{id:"_3-垃圾收集器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-垃圾收集器"}},[a._v("#")]),a._v(" 3. 垃圾收集器")]),a._v(" "),r("h4",{attrs:{id:"_1-serial-收集器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-serial-收集器"}},[a._v("#")]),a._v(" ⑴. Serial 收集器")]),a._v(" "),r("h4",{attrs:{id:"_2-parnew-收集器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-parnew-收集器"}},[a._v("#")]),a._v(" ⑵. ParNew 收集器")]),a._v(" "),r("h4",{attrs:{id:"_3-parallel-scavenge-收集器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-parallel-scavenge-收集器"}},[a._v("#")]),a._v(" ⑶. Parallel Scavenge 收集器")]),a._v(" "),r("h4",{attrs:{id:"_4-serial-old-收集器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-serial-old-收集器"}},[a._v("#")]),a._v(" ⑷. Serial Old 收集器")]),a._v(" "),r("h4",{attrs:{id:"_5-parallel-old-收集器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-parallel-old-收集器"}},[a._v("#")]),a._v(" ⑸. Parallel Old 收集器")]),a._v(" "),r("h4",{attrs:{id:"_6-cms-收集器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-cms-收集器"}},[a._v("#")]),a._v(" ⑹. CMS 收集器")]),a._v(" "),r("h4",{attrs:{id:"_7-g1-收集器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-g1-收集器"}},[a._v("#")]),a._v(" ⑺. G1 收集器")]),a._v(" "),r("h4",{attrs:{id:"_8-七种垃圾收集器的比较"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-七种垃圾收集器的比较"}},[a._v("#")]),a._v(" ⑻. 七种垃圾收集器的比较")]),a._v(" "),r("h3",{attrs:{id:"_4-内存分配与回收策略"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-内存分配与回收策略"}},[a._v("#")]),a._v(" 4. 内存分配与回收策略")]),a._v(" "),r("h4",{attrs:{id:"_1-优先在-eden-分配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-优先在-eden-分配"}},[a._v("#")]),a._v(" ⑴. 优先在 Eden 分配")]),a._v(" "),r("h4",{attrs:{id:"_2-大对象直接进入老年代"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-大对象直接进入老年代"}},[a._v("#")]),a._v(" ⑵. 大对象直接进入老年代")]),a._v(" "),r("h4",{attrs:{id:"_3-长期存活的对象进入老年代"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-长期存活的对象进入老年代"}},[a._v("#")]),a._v(" ⑶. 长期存活的对象进入老年代")]),a._v(" "),r("h4",{attrs:{id:"_4-动态对象年龄判定"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-动态对象年龄判定"}},[a._v("#")]),a._v(" ⑷. 动态对象年龄判定")]),a._v(" "),r("h4",{attrs:{id:"_5-空间分配担保"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-空间分配担保"}},[a._v("#")]),a._v(" ⑸. 空间分配担保")]),a._v(" "),r("h3",{attrs:{id:"_5-full-gc-的触发条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-full-gc-的触发条件"}},[a._v("#")]),a._v(" 5. Full GC 的触发条件")]),a._v(" "),r("h4",{attrs:{id:"_1-调用-system-gc"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-调用-system-gc"}},[a._v("#")]),a._v(" ⑴. 调用 System.gc()")]),a._v(" "),r("h4",{attrs:{id:"_2-老年代空间不足"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-老年代空间不足"}},[a._v("#")]),a._v(" ⑵. 老年代空间不足")]),a._v(" "),r("h4",{attrs:{id:"_3-空间分配担保失败"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-空间分配担保失败"}},[a._v("#")]),a._v(" ⑶. 空间分配担保失败")]),a._v(" "),r("h4",{attrs:{id:"_4-jdk-1-7-及以前的永久代空间不足"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-jdk-1-7-及以前的永久代空间不足"}},[a._v("#")]),a._v(" ⑷. JDK 1.7 及以前的永久代空间不足")]),a._v(" "),r("h4",{attrs:{id:"_5-concurrent-mode-failure"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-concurrent-mode-failure"}},[a._v("#")]),a._v(" ⑸. Concurrent Mode Failure")]),a._v(" "),r("h2",{attrs:{id:"三-、类加载机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、类加载机制"}},[a._v("#")]),a._v(" （三）、类加载机制")]),a._v(" "),r("h3",{attrs:{id:"_1-类的生命周期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-类的生命周期"}},[a._v("#")]),a._v(" 1. 类的生命周期")]),a._v(" "),r("h3",{attrs:{id:"_2-类初始化时机"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-类初始化时机"}},[a._v("#")]),a._v(" 2. 类初始化时机")]),a._v(" "),r("h3",{attrs:{id:"_3-类加载过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-类加载过程"}},[a._v("#")]),a._v(" 3. 类加载过程")]),a._v(" "),r("h4",{attrs:{id:"_1-加载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-加载"}},[a._v("#")]),a._v(" ⑴. 加载")]),a._v(" "),r("h4",{attrs:{id:"_2-验证"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-验证"}},[a._v("#")]),a._v(" ⑵. 验证")]),a._v(" "),r("h4",{attrs:{id:"_3-准备"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-准备"}},[a._v("#")]),a._v(" ⑶. 准备")]),a._v(" "),r("h4",{attrs:{id:"_4-解析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-解析"}},[a._v("#")]),a._v(" ⑷. 解析")]),a._v(" "),r("h4",{attrs:{id:"_5-初始化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-初始化"}},[a._v("#")]),a._v(" ⑸. 初始化")]),a._v(" "),r("h3",{attrs:{id:"_4-类加载器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-类加载器"}},[a._v("#")]),a._v(" 4. 类加载器")]),a._v(" "),r("h4",{attrs:{id:"_1-类与类加载器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-类与类加载器"}},[a._v("#")]),a._v(" ⑴. 类与类加载器")]),a._v(" "),r("h4",{attrs:{id:"_2-类加载器分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-类加载器分类"}},[a._v("#")]),a._v(" ⑵. 类加载器分类")]),a._v(" "),r("h4",{attrs:{id:"_3-双亲委派模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-双亲委派模型"}},[a._v("#")]),a._v(" ⑶. 双亲委派模型")]),a._v(" "),r("h2",{attrs:{id:"四-、jvm参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、jvm参数"}},[a._v("#")]),a._v(" （四）、JVM参数")]),a._v(" "),r("h3",{attrs:{id:"_1-gc-优化配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-gc-优化配置"}},[a._v("#")]),a._v(" 1. GC 优化配置")]),a._v(" "),r("h3",{attrs:{id:"_2-gc-类型设置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-gc-类型设置"}},[a._v("#")]),a._v(" 2. GC 类型设置")]),a._v(" "),r("h1",{attrs:{id:"十六、java-并发"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十六、java-并发"}},[a._v("#")]),a._v(" 十六、Java 并发")]),a._v(" "),r("h2",{attrs:{id:"一-、使用线程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、使用线程"}},[a._v("#")]),a._v(" （一）、使用线程")]),a._v(" "),r("h3",{attrs:{id:"_1-实现-runnable-接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-实现-runnable-接口"}},[a._v("#")]),a._v(" 1. 实现 Runnable 接口")]),a._v(" "),r("h3",{attrs:{id:"_2-实现-callable-接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现-callable-接口"}},[a._v("#")]),a._v(" 2. 实现 Callable 接口")]),a._v(" "),r("h3",{attrs:{id:"_3-继承-thread-类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-继承-thread-类"}},[a._v("#")]),a._v(" 3. 继承 Thread 类")]),a._v(" "),r("h3",{attrs:{id:"_4-实现接口-vs-继承-thread"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-实现接口-vs-继承-thread"}},[a._v("#")]),a._v(" 4. 实现接口 VS 继承 Thread")]),a._v(" "),r("h2",{attrs:{id:"二-、基础线程机制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、基础线程机制"}},[a._v("#")]),a._v(" （二）、基础线程机制")]),a._v(" "),r("h3",{attrs:{id:"_1-sleep"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-sleep"}},[a._v("#")]),a._v(" 1. sleep()")]),a._v(" "),r("h3",{attrs:{id:"_2-yield"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-yield"}},[a._v("#")]),a._v(" 2. yield()")]),a._v(" "),r("h3",{attrs:{id:"_3-join"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-join"}},[a._v("#")]),a._v(" 3. join()")]),a._v(" "),r("h3",{attrs:{id:"_4-deamon"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-deamon"}},[a._v("#")]),a._v(" 4. deamon")]),a._v(" "),r("h2",{attrs:{id:"三-、结束线程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、结束线程"}},[a._v("#")]),a._v(" （三）、结束线程")]),a._v(" "),r("h3",{attrs:{id:"_1-阻塞"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-阻塞"}},[a._v("#")]),a._v(" 1. 阻塞")]),a._v(" "),r("h3",{attrs:{id:"_2-中断"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-中断"}},[a._v("#")]),a._v(" 2. 中断")]),a._v(" "),r("h2",{attrs:{id:"四-、线程之间的协作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、线程之间的协作"}},[a._v("#")]),a._v(" （四）、线程之间的协作")]),a._v(" "),r("h3",{attrs:{id:"_1-同步与通信的概念理解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-同步与通信的概念理解"}},[a._v("#")]),a._v(" 1. 同步与通信的概念理解")]),a._v(" "),r("h3",{attrs:{id:"_2-线程同步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-线程同步"}},[a._v("#")]),a._v(" 2. 线程同步")]),a._v(" "),r("h4",{attrs:{id:"_1-synchronized"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-synchronized"}},[a._v("#")]),a._v(" ⑴. synchronized")]),a._v(" "),r("h4",{attrs:{id:"_2-reentrantlock"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-reentrantlock"}},[a._v("#")]),a._v(" ⑵. ReentrantLock")]),a._v(" "),r("h3",{attrs:{id:"_3-线程通信"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-线程通信"}},[a._v("#")]),a._v(" 3. 线程通信")]),a._v(" "),r("h4",{attrs:{id:"_1-wait-notify-notifyall"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-wait-notify-notifyall"}},[a._v("#")]),a._v(" ⑴. wait() notify() notifyAll()")]),a._v(" "),r("h4",{attrs:{id:"_2-blockingqueue"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-blockingqueue"}},[a._v("#")]),a._v(" ⑵. BlockingQueue")]),a._v(" "),r("h2",{attrs:{id:"五-、线程状态转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、线程状态转换"}},[a._v("#")]),a._v(" （五）、线程状态转换")]),a._v(" "),r("h2",{attrs:{id:"六-、executor"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、executor"}},[a._v("#")]),a._v(" （六）、Executor")]),a._v(" "),r("h2",{attrs:{id:"七-、内存模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、内存模型"}},[a._v("#")]),a._v(" （七）、内存模型")]),a._v(" "),r("h3",{attrs:{id:"_1-主内存与工作内存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-主内存与工作内存"}},[a._v("#")]),a._v(" 1. 主内存与工作内存")]),a._v(" "),r("h3",{attrs:{id:"_2-内存模型三大特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-内存模型三大特性"}},[a._v("#")]),a._v(" 2. 内存模型三大特性")]),a._v(" "),r("h4",{attrs:{id:"_1-原子性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-原子性"}},[a._v("#")]),a._v(" ⑴. 原子性")]),a._v(" "),r("h4",{attrs:{id:"_2-可见性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-可见性"}},[a._v("#")]),a._v(" ⑵. 可见性")]),a._v(" "),r("h4",{attrs:{id:"_3-有序性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-有序性"}},[a._v("#")]),a._v(" ⑶. 有序性")]),a._v(" "),r("h3",{attrs:{id:"_3-先行发生原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-先行发生原则"}},[a._v("#")]),a._v(" 3. 先行发生原则")]),a._v(" "),r("h4",{attrs:{id:"_1-单一线程原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-单一线程原则"}},[a._v("#")]),a._v(" ⑴. 单一线程原则")]),a._v(" "),r("h4",{attrs:{id:"_2-管程锁定规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-管程锁定规则"}},[a._v("#")]),a._v(" ⑵. 管程锁定规则")]),a._v(" "),r("h4",{attrs:{id:"_3-volatile-变量规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-volatile-变量规则"}},[a._v("#")]),a._v(" ⑶. volatile 变量规则")]),a._v(" "),r("h4",{attrs:{id:"_4-线程启动规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-线程启动规则"}},[a._v("#")]),a._v(" ⑷. 线程启动规则")]),a._v(" "),r("h4",{attrs:{id:"_5-线程加入规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-线程加入规则"}},[a._v("#")]),a._v(" ⑸. 线程加入规则")]),a._v(" "),r("h4",{attrs:{id:"_6-线程中断规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-线程中断规则"}},[a._v("#")]),a._v(" ⑹. 线程中断规则")]),a._v(" "),r("h4",{attrs:{id:"_7-对象终结规则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-对象终结规则"}},[a._v("#")]),a._v(" ⑺. 对象终结规则")]),a._v(" "),r("h4",{attrs:{id:"_8-传递性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-传递性"}},[a._v("#")]),a._v(" ⑻. 传递性")]),a._v(" "),r("h2",{attrs:{id:"八-、线程安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八-、线程安全"}},[a._v("#")]),a._v(" （八）、线程安全")]),a._v(" "),r("h3",{attrs:{id:"_1-线程安全分类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-线程安全分类"}},[a._v("#")]),a._v(" 1. 线程安全分类")]),a._v(" "),r("h4",{attrs:{id:"_1-不可变"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-不可变"}},[a._v("#")]),a._v(" ⑴. 不可变")]),a._v(" "),r("h4",{attrs:{id:"_2-绝对线程安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-绝对线程安全"}},[a._v("#")]),a._v(" ⑵. 绝对线程安全")]),a._v(" "),r("h4",{attrs:{id:"_3-相对线程安全"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-相对线程安全"}},[a._v("#")]),a._v(" ⑶. 相对线程安全")]),a._v(" "),r("h4",{attrs:{id:"_4-线程兼容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-线程兼容"}},[a._v("#")]),a._v(" ⑷. 线程兼容")]),a._v(" "),r("h4",{attrs:{id:"_5-线程对立"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-线程对立"}},[a._v("#")]),a._v(" ⑸. 线程对立")]),a._v(" "),r("h3",{attrs:{id:"_2-线程安全的实现方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-线程安全的实现方法"}},[a._v("#")]),a._v(" 2. 线程安全的实现方法")]),a._v(" "),r("h4",{attrs:{id:"_1-互斥同步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-互斥同步"}},[a._v("#")]),a._v(" ⑴. 互斥同步")]),a._v(" "),r("h4",{attrs:{id:"_2-非阻塞同步"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-非阻塞同步"}},[a._v("#")]),a._v(" ⑵. 非阻塞同步")]),a._v(" "),r("h4",{attrs:{id:"_3-无同步方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-无同步方案"}},[a._v("#")]),a._v(" ⑶. 无同步方案")]),a._v(" "),r("h3",{attrs:{id:"_3-锁优化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-锁优化"}},[a._v("#")]),a._v(" 3. 锁优化")]),a._v(" "),r("h4",{attrs:{id:"_1-自旋锁与自适应自旋"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-自旋锁与自适应自旋"}},[a._v("#")]),a._v(" ⑴. 自旋锁与自适应自旋")]),a._v(" "),r("h4",{attrs:{id:"_2-锁消除"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-锁消除"}},[a._v("#")]),a._v(" ⑵. 锁消除")]),a._v(" "),r("h4",{attrs:{id:"_3-锁粗化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-锁粗化"}},[a._v("#")]),a._v(" ⑶. 锁粗化")]),a._v(" "),r("h4",{attrs:{id:"_4-轻量级锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-轻量级锁"}},[a._v("#")]),a._v(" ⑷. 轻量级锁")]),a._v(" "),r("h4",{attrs:{id:"_5-偏向锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-偏向锁"}},[a._v("#")]),a._v(" ⑸. 偏向锁")]),a._v(" "),r("h2",{attrs:{id:"九-、多线程开发良好的实践"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#九-、多线程开发良好的实践"}},[a._v("#")]),a._v(" （九）、多线程开发良好的实践")]),a._v(" "),r("h1",{attrs:{id:"十七、java-容器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十七、java-容器"}},[a._v("#")]),a._v(" 十七、Java 容器")]),a._v(" "),r("h2",{attrs:{id:"一-、概览"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、概览"}},[a._v("#")]),a._v(" （一）、概览")]),a._v(" "),r("h3",{attrs:{id:"_1-collection"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-collection"}},[a._v("#")]),a._v(" 1. Collection")]),a._v(" "),r("h4",{attrs:{id:"_1-set"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-set"}},[a._v("#")]),a._v(" ⑴. Set")]),a._v(" "),r("h4",{attrs:{id:"_2-list-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-list-2"}},[a._v("#")]),a._v(" ⑵. List")]),a._v(" "),r("h4",{attrs:{id:"_3-queue"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-queue"}},[a._v("#")]),a._v(" ⑶. Queue")]),a._v(" "),r("h3",{attrs:{id:"_2-map"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-map"}},[a._v("#")]),a._v(" 2. Map")]),a._v(" "),r("h2",{attrs:{id:"二-、容器中的设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、容器中的设计模式"}},[a._v("#")]),a._v(" （二）、容器中的设计模式")]),a._v(" "),r("h3",{attrs:{id:"_1-迭代器模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-迭代器模式"}},[a._v("#")]),a._v(" 1. 迭代器模式")]),a._v(" "),r("h3",{attrs:{id:"_2-适配器模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-适配器模式"}},[a._v("#")]),a._v(" 2. 适配器模式")]),a._v(" "),r("h2",{attrs:{id:"三-、散列"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、散列"}},[a._v("#")]),a._v(" （三）、散列")]),a._v(" "),r("h2",{attrs:{id:"四-、源码分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、源码分析"}},[a._v("#")]),a._v(" （四）、源码分析")]),a._v(" "),r("h3",{attrs:{id:"_1-arraylist"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-arraylist"}},[a._v("#")]),a._v(" 1. ArrayList")]),a._v(" "),r("h4",{attrs:{id:"_1-概览"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-概览"}},[a._v("#")]),a._v(" ⑴. 概览")]),a._v(" "),r("h4",{attrs:{id:"_2-fail-fast"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-fail-fast"}},[a._v("#")]),a._v(" ⑵. Fail-Fast")]),a._v(" "),r("h4",{attrs:{id:"_3-和-vector-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-和-vector-的区别"}},[a._v("#")]),a._v(" ⑶. 和 Vector 的区别")]),a._v(" "),r("h4",{attrs:{id:"_4-和-linkedlist-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-和-linkedlist-的区别"}},[a._v("#")]),a._v(" ⑷. 和 LinkedList 的区别")]),a._v(" "),r("h3",{attrs:{id:"_2-vector"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-vector"}},[a._v("#")]),a._v(" 2. Vector")]),a._v(" "),r("h3",{attrs:{id:"_3-linkedlist"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-linkedlist"}},[a._v("#")]),a._v(" 3. LinkedList")]),a._v(" "),r("h3",{attrs:{id:"_4-treemap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-treemap"}},[a._v("#")]),a._v(" 4. TreeMap")]),a._v(" "),r("h3",{attrs:{id:"_5-hashmap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-hashmap"}},[a._v("#")]),a._v(" 5. HashMap")]),a._v(" "),r("h4",{attrs:{id:"_1-存储结构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-存储结构"}},[a._v("#")]),a._v(" ⑴. 存储结构")]),a._v(" "),r("h4",{attrs:{id:"_2-拉链法的工作原理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-拉链法的工作原理"}},[a._v("#")]),a._v(" ⑵. 拉链法的工作原理")]),a._v(" "),r("h4",{attrs:{id:"_3-链表转红黑树"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-链表转红黑树"}},[a._v("#")]),a._v(" ⑶. 链表转红黑树")]),a._v(" "),r("h4",{attrs:{id:"_4-扩容"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-扩容"}},[a._v("#")]),a._v(" ⑷. 扩容")]),a._v(" "),r("h4",{attrs:{id:"_5-确定桶下标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-确定桶下标"}},[a._v("#")]),a._v(" ⑸. 确定桶下标")]),a._v(" "),r("h4",{attrs:{id:"_6-扩容-重新计算桶下标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-扩容-重新计算桶下标"}},[a._v("#")]),a._v(" ⑹. 扩容-重新计算桶下标")]),a._v(" "),r("h4",{attrs:{id:"_7-扩容-计算数组容量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-扩容-计算数组容量"}},[a._v("#")]),a._v(" ⑺. 扩容-计算数组容量")]),a._v(" "),r("h4",{attrs:{id:"_8-null-值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-null-值"}},[a._v("#")]),a._v(" ⑻. null 值")]),a._v(" "),r("h4",{attrs:{id:"_9-与-hashtable-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-与-hashtable-的区别"}},[a._v("#")]),a._v(" ⑼. 与 HashTable 的区别")]),a._v(" "),r("h3",{attrs:{id:"_6-linkedhashmap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-linkedhashmap"}},[a._v("#")]),a._v(" 6. LinkedHashMap")]),a._v(" "),r("h3",{attrs:{id:"_7-concurrenthashmap-jdk-1-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-concurrenthashmap-jdk-1-7"}},[a._v("#")]),a._v(" 7. ConcurrentHashMap - JDK 1.7")]),a._v(" "),r("h4",{attrs:{id:"_1-存储结构-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-存储结构-2"}},[a._v("#")]),a._v(" ⑴. 存储结构")]),a._v(" "),r("h4",{attrs:{id:"_2-hashentery-的不可变性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-hashentery-的不可变性"}},[a._v("#")]),a._v(" ⑵. HashEntery 的不可变性")]),a._v(" "),r("h4",{attrs:{id:"_3-volatile-变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-volatile-变量"}},[a._v("#")]),a._v(" ⑶. Volatile 变量")]),a._v(" "),r("h4",{attrs:{id:"_4-小结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-小结"}},[a._v("#")]),a._v(" ⑷. 小结")]),a._v(" "),r("h3",{attrs:{id:"_8-concurrenthashmap-jdk-1-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-concurrenthashmap-jdk-1-8"}},[a._v("#")]),a._v(" 8. ConcurrentHashMap - JDK 1.8")]),a._v(" "),r("h1",{attrs:{id:"十八、java-io"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十八、java-io"}},[a._v("#")]),a._v(" 十八、Java IO")]),a._v(" "),r("h2",{attrs:{id:"一-、概览-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、概览-2"}},[a._v("#")]),a._v(" （一）、概览")]),a._v(" "),r("h2",{attrs:{id:"二-、磁盘操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、磁盘操作"}},[a._v("#")]),a._v(" （二）、磁盘操作")]),a._v(" "),r("h2",{attrs:{id:"三-、字节操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、字节操作"}},[a._v("#")]),a._v(" （三）、字节操作")]),a._v(" "),r("h2",{attrs:{id:"四-、字符操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、字符操作"}},[a._v("#")]),a._v(" （四）、字符操作")]),a._v(" "),r("h2",{attrs:{id:"五-、对象操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、对象操作"}},[a._v("#")]),a._v(" （五）、对象操作")]),a._v(" "),r("h2",{attrs:{id:"六-、网络操作"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、网络操作"}},[a._v("#")]),a._v(" （六）、网络操作")]),a._v(" "),r("h3",{attrs:{id:"_1-inetaddress"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-inetaddress"}},[a._v("#")]),a._v(" 1. InetAddress")]),a._v(" "),r("h3",{attrs:{id:"_2-url-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-url-2"}},[a._v("#")]),a._v(" 2. URL")]),a._v(" "),r("h3",{attrs:{id:"_3-sockets"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-sockets"}},[a._v("#")]),a._v(" 3. Sockets")]),a._v(" "),r("h3",{attrs:{id:"_4-datagram"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-datagram"}},[a._v("#")]),a._v(" 4. Datagram")]),a._v(" "),r("h2",{attrs:{id:"七-、nio"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、nio"}},[a._v("#")]),a._v(" （七）、NIO")]),a._v(" "),r("h3",{attrs:{id:"_1-流与块"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-流与块"}},[a._v("#")]),a._v(" 1. 流与块")]),a._v(" "),r("h3",{attrs:{id:"_2-通道与缓冲区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-通道与缓冲区"}},[a._v("#")]),a._v(" 2. 通道与缓冲区")]),a._v(" "),r("h4",{attrs:{id:"_1-通道"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-通道"}},[a._v("#")]),a._v(" ⑴. 通道")]),a._v(" "),r("h4",{attrs:{id:"_2-缓冲区"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-缓冲区"}},[a._v("#")]),a._v(" ⑵. 缓冲区")]),a._v(" "),r("h3",{attrs:{id:"_3-缓冲区状态变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-缓冲区状态变量"}},[a._v("#")]),a._v(" 3. 缓冲区状态变量")]),a._v(" "),r("h3",{attrs:{id:"_4-文件-nio-实例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-文件-nio-实例"}},[a._v("#")]),a._v(" 4. 文件 NIO 实例")]),a._v(" "),r("h3",{attrs:{id:"_5-套接字-nio-实例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-套接字-nio-实例"}},[a._v("#")]),a._v(" 5. 套接字 NIO 实例")]),a._v(" "),r("h4",{attrs:{id:"_1-serversocketchannel"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-serversocketchannel"}},[a._v("#")]),a._v(" ⑴. ServerSocketChannel")]),a._v(" "),r("h4",{attrs:{id:"_2-selectors"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-selectors"}},[a._v("#")]),a._v(" ⑵. Selectors")]),a._v(" "),r("h4",{attrs:{id:"_3-主循环"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-主循环"}},[a._v("#")]),a._v(" ⑶. 主循环")]),a._v(" "),r("h4",{attrs:{id:"_4-监听新连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-监听新连接"}},[a._v("#")]),a._v(" ⑷. 监听新连接")]),a._v(" "),r("h4",{attrs:{id:"_5-接受新的连接"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-接受新的连接"}},[a._v("#")]),a._v(" ⑸. 接受新的连接")]),a._v(" "),r("h4",{attrs:{id:"_6-删除处理过的-selectionkey"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-删除处理过的-selectionkey"}},[a._v("#")]),a._v(" ⑹. 删除处理过的 SelectionKey")]),a._v(" "),r("h4",{attrs:{id:"_7-传入的-i-o"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-传入的-i-o"}},[a._v("#")]),a._v(" ⑺. 传入的 I/O")]),a._v(" "),r("h3",{attrs:{id:"_6-内存映射文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-内存映射文件"}},[a._v("#")]),a._v(" 6. 内存映射文件")]),a._v(" "),r("h3",{attrs:{id:"_7-对比"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-对比"}},[a._v("#")]),a._v(" 7. 对比")]),a._v(" "),r("h1",{attrs:{id:"十九、java-基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十九、java-基础"}},[a._v("#")]),a._v(" 十九、Java 基础")]),a._v(" "),r("h2",{attrs:{id:"一-、关键字"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、关键字"}},[a._v("#")]),a._v(" （一）、关键字")]),a._v(" "),r("h3",{attrs:{id:"_1-final"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-final"}},[a._v("#")]),a._v(" 1. final")]),a._v(" "),r("h3",{attrs:{id:"_2-static"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-static"}},[a._v("#")]),a._v(" 2. static")]),a._v(" "),r("h2",{attrs:{id:"二-、object-通用方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、object-通用方法"}},[a._v("#")]),a._v(" （二）、Object 通用方法")]),a._v(" "),r("h3",{attrs:{id:"_1-概览-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-概览-2"}},[a._v("#")]),a._v(" 1. 概览")]),a._v(" "),r("h3",{attrs:{id:"_2-clone"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-clone"}},[a._v("#")]),a._v(" 2. clone()")]),a._v(" "),r("h3",{attrs:{id:"_3-equals"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-equals"}},[a._v("#")]),a._v(" 3. equals()")]),a._v(" "),r("h2",{attrs:{id:"三-、继承"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、继承"}},[a._v("#")]),a._v(" （三）、继承")]),a._v(" "),r("h3",{attrs:{id:"_1-访问权限"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-访问权限"}},[a._v("#")]),a._v(" 1. 访问权限")]),a._v(" "),r("h3",{attrs:{id:"_2-抽象类与接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-抽象类与接口"}},[a._v("#")]),a._v(" 2. 抽象类与接口")]),a._v(" "),r("h3",{attrs:{id:"_3-super"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-super"}},[a._v("#")]),a._v(" 3. super")]),a._v(" "),r("h3",{attrs:{id:"_4-重载与重写"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-重载与重写"}},[a._v("#")]),a._v(" 4. 重载与重写")]),a._v(" "),r("h2",{attrs:{id:"四-、string"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、string"}},[a._v("#")]),a._v(" （四）、String")]),a._v(" "),r("h3",{attrs:{id:"_1-string-stringbuffer-and-stringbuilder"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-string-stringbuffer-and-stringbuilder"}},[a._v("#")]),a._v(" 1. String, StringBuffer and StringBuilder")]),a._v(" "),r("h3",{attrs:{id:"_2-string-不可变的原因"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-string-不可变的原因"}},[a._v("#")]),a._v(" 2. String 不可变的原因")]),a._v(" "),r("h3",{attrs:{id:"_3-string-intern"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-string-intern"}},[a._v("#")]),a._v(" 3. String.intern()")]),a._v(" "),r("h2",{attrs:{id:"五-、基本类型与运算"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、基本类型与运算"}},[a._v("#")]),a._v(" （五）、基本类型与运算")]),a._v(" "),r("h3",{attrs:{id:"_1-包装类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-包装类型"}},[a._v("#")]),a._v(" 1. 包装类型")]),a._v(" "),r("h3",{attrs:{id:"_2-switch"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-switch"}},[a._v("#")]),a._v(" 2. switch")]),a._v(" "),r("h2",{attrs:{id:"六-、反射"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、反射"}},[a._v("#")]),a._v(" （六）、反射")]),a._v(" "),r("h2",{attrs:{id:"七-、异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、异常"}},[a._v("#")]),a._v(" （七）、异常")]),a._v(" "),r("h2",{attrs:{id:"八-、泛型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八-、泛型"}},[a._v("#")]),a._v(" （八）、泛型")]),a._v(" "),r("h2",{attrs:{id:"九-、注解"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#九-、注解"}},[a._v("#")]),a._v(" （九）、注解")]),a._v(" "),r("h2",{attrs:{id:"十-、特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十-、特性"}},[a._v("#")]),a._v(" （十）、特性")]),a._v(" "),r("h3",{attrs:{id:"_1-面向对象三大特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-面向对象三大特性"}},[a._v("#")]),a._v(" 1. 面向对象三大特性")]),a._v(" "),r("h3",{attrs:{id:"_2-java-各版本的新特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-java-各版本的新特性"}},[a._v("#")]),a._v(" 2. Java 各版本的新特性")]),a._v(" "),r("h3",{attrs:{id:"_3-java-与-c-的区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-java-与-c-的区别"}},[a._v("#")]),a._v(" 3. Java 与 C++ 的区别")]),a._v(" "),r("h3",{attrs:{id:"_4-jre-or-jdk"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-jre-or-jdk"}},[a._v("#")]),a._v(" 4. JRE or JDK")]),a._v(" "),r("h1",{attrs:{id:"二十、jdk-中的设计模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十、jdk-中的设计模式"}},[a._v("#")]),a._v(" 二十、JDK 中的设计模式")]),a._v(" "),r("h2",{attrs:{id:"一-、创建型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、创建型"}},[a._v("#")]),a._v(" （一）、创建型")]),a._v(" "),r("h3",{attrs:{id:"_1-单例模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-单例模式"}},[a._v("#")]),a._v(" 1. 单例模式")]),a._v(" "),r("h3",{attrs:{id:"_2-简单工厂模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-简单工厂模式"}},[a._v("#")]),a._v(" 2. 简单工厂模式")]),a._v(" "),r("h3",{attrs:{id:"_3-工厂方法模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-工厂方法模式"}},[a._v("#")]),a._v(" 3. 工厂方法模式")]),a._v(" "),r("h3",{attrs:{id:"_4-抽象工厂"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-抽象工厂"}},[a._v("#")]),a._v(" 4. 抽象工厂")]),a._v(" "),r("h3",{attrs:{id:"_5-生成器模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-生成器模式"}},[a._v("#")]),a._v(" 5. 生成器模式")]),a._v(" "),r("h3",{attrs:{id:"_6-原型模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-原型模式"}},[a._v("#")]),a._v(" 6. 原型模式")]),a._v(" "),r("h2",{attrs:{id:"二-、行为型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、行为型"}},[a._v("#")]),a._v(" （二）、行为型")]),a._v(" "),r("h3",{attrs:{id:"_1-责任链"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-责任链"}},[a._v("#")]),a._v(" 1. 责任链")]),a._v(" "),r("h3",{attrs:{id:"_2-命令模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-命令模式"}},[a._v("#")]),a._v(" 2. 命令模式")]),a._v(" "),r("h3",{attrs:{id:"_3-解释器模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-解释器模式"}},[a._v("#")]),a._v(" 3. 解释器模式")]),a._v(" "),r("h3",{attrs:{id:"_4-迭代器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-迭代器"}},[a._v("#")]),a._v(" 4. 迭代器")]),a._v(" "),r("h3",{attrs:{id:"_5-中间人模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-中间人模式"}},[a._v("#")]),a._v(" 5. 中间人模式")]),a._v(" "),r("h3",{attrs:{id:"_6-备忘录模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-备忘录模式"}},[a._v("#")]),a._v(" 6. 备忘录模式")]),a._v(" "),r("h3",{attrs:{id:"_7-观察者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-观察者模式"}},[a._v("#")]),a._v(" 7. 观察者模式")]),a._v(" "),r("h3",{attrs:{id:"_8-策略模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-策略模式"}},[a._v("#")]),a._v(" 8. 策略模式")]),a._v(" "),r("h3",{attrs:{id:"_9-模板方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-模板方法"}},[a._v("#")]),a._v(" 9. 模板方法")]),a._v(" "),r("h3",{attrs:{id:"_10-访问者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-访问者模式"}},[a._v("#")]),a._v(" 10. 访问者模式")]),a._v(" "),r("h3",{attrs:{id:"_11-空对象模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-空对象模式"}},[a._v("#")]),a._v(" 11. 空对象模式")]),a._v(" "),r("h2",{attrs:{id:"三-、结构型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、结构型"}},[a._v("#")]),a._v(" （三）、结构型")]),a._v(" "),r("h3",{attrs:{id:"_1-适配器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-适配器"}},[a._v("#")]),a._v(" 1. 适配器")]),a._v(" "),r("h3",{attrs:{id:"_2-桥接模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-桥接模式"}},[a._v("#")]),a._v(" 2. 桥接模式")]),a._v(" "),r("h3",{attrs:{id:"_3-组合模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-组合模式"}},[a._v("#")]),a._v(" 3. 组合模式")]),a._v(" "),r("h3",{attrs:{id:"_4-装饰者模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-装饰者模式"}},[a._v("#")]),a._v(" 4. 装饰者模式")]),a._v(" "),r("h3",{attrs:{id:"_5-蝇量模式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-蝇量模式"}},[a._v("#")]),a._v(" 5. 蝇量模式")]),a._v(" "),r("h3",{attrs:{id:"_6-动态代理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-动态代理"}},[a._v("#")]),a._v(" 6. 动态代理")]),a._v(" "),r("h1",{attrs:{id:"二十一、分布式基础"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十一、分布式基础"}},[a._v("#")]),a._v(" 二十一、分布式基础")]),a._v(" "),r("h2",{attrs:{id:"一-、基本概念-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、基本概念-2"}},[a._v("#")]),a._v(" （一）、基本概念")]),a._v(" "),r("h3",{attrs:{id:"_1-异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-异常"}},[a._v("#")]),a._v(" 1. 异常")]),a._v(" "),r("h4",{attrs:{id:"_1-服务器宕机"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-服务器宕机"}},[a._v("#")]),a._v(" ⑴. 服务器宕机")]),a._v(" "),r("h4",{attrs:{id:"_2-网络异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-网络异常"}},[a._v("#")]),a._v(" ⑵. 网络异常")]),a._v(" "),r("h4",{attrs:{id:"_3-磁盘故障"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-磁盘故障"}},[a._v("#")]),a._v(" ⑶. 磁盘故障")]),a._v(" "),r("h3",{attrs:{id:"_2-超时"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-超时"}},[a._v("#")]),a._v(" 2. 超时")]),a._v(" "),r("h3",{attrs:{id:"_3-衡量指标"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-衡量指标"}},[a._v("#")]),a._v(" 3. 衡量指标")]),a._v(" "),r("h4",{attrs:{id:"_1-性能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-性能"}},[a._v("#")]),a._v(" ⑴. 性能")]),a._v(" "),r("h4",{attrs:{id:"_2-可用性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-可用性"}},[a._v("#")]),a._v(" ⑵. 可用性")]),a._v(" "),r("h4",{attrs:{id:"_3-一致性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-一致性"}},[a._v("#")]),a._v(" ⑶. 一致性")]),a._v(" "),r("h4",{attrs:{id:"_4-可扩展性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-可扩展性"}},[a._v("#")]),a._v(" ⑷. 可扩展性")]),a._v(" "),r("h2",{attrs:{id:"二-、数据分布"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、数据分布"}},[a._v("#")]),a._v(" （二）、数据分布")]),a._v(" "),r("h3",{attrs:{id:"_1-哈希分布"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-哈希分布"}},[a._v("#")]),a._v(" 1. 哈希分布")]),a._v(" "),r("h3",{attrs:{id:"_2-顺序分布"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-顺序分布"}},[a._v("#")]),a._v(" 2. 顺序分布")]),a._v(" "),r("h2",{attrs:{id:"三-、负载均衡"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、负载均衡"}},[a._v("#")]),a._v(" （三）、负载均衡")]),a._v(" "),r("h2",{attrs:{id:"四-、复制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、复制"}},[a._v("#")]),a._v(" （四）、复制")]),a._v(" "),r("h3",{attrs:{id:"_1-强同步复制协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-强同步复制协议"}},[a._v("#")]),a._v(" 1. 强同步复制协议")]),a._v(" "),r("h3",{attrs:{id:"_2-异步复制协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-异步复制协议"}},[a._v("#")]),a._v(" 2. 异步复制协议")]),a._v(" "),r("h2",{attrs:{id:"五-、cap"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、cap"}},[a._v("#")]),a._v(" （五）、CAP")]),a._v(" "),r("h2",{attrs:{id:"六-、base"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、base"}},[a._v("#")]),a._v(" （六）、BASE")]),a._v(" "),r("h3",{attrs:{id:"_1-基本可用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-基本可用"}},[a._v("#")]),a._v(" 1. 基本可用")]),a._v(" "),r("h3",{attrs:{id:"_2-软状态"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-软状态"}},[a._v("#")]),a._v(" 2. 软状态")]),a._v(" "),r("h3",{attrs:{id:"_3-最终一致性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-最终一致性"}},[a._v("#")]),a._v(" 3. 最终一致性")]),a._v(" "),r("h2",{attrs:{id:"七-、容错"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、容错"}},[a._v("#")]),a._v(" （七）、容错")]),a._v(" "),r("h3",{attrs:{id:"_1-故障检测"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-故障检测"}},[a._v("#")]),a._v(" 1. 故障检测")]),a._v(" "),r("h3",{attrs:{id:"_2-故障恢复"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-故障恢复"}},[a._v("#")]),a._v(" 2. 故障恢复")]),a._v(" "),r("h2",{attrs:{id:"八-、cdn-架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八-、cdn-架构"}},[a._v("#")]),a._v(" （八）、CDN 架构")]),a._v(" "),r("h1",{attrs:{id:"二十二、一致性协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十二、一致性协议"}},[a._v("#")]),a._v(" 二十二、一致性协议")]),a._v(" "),r("h2",{attrs:{id:"一-、两阶段提交协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、两阶段提交协议"}},[a._v("#")]),a._v(" （一）、两阶段提交协议")]),a._v(" "),r("h3",{attrs:{id:"_1-运行过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-运行过程"}},[a._v("#")]),a._v(" 1. 运行过程")]),a._v(" "),r("h3",{attrs:{id:"_2-存在的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-存在的问题"}},[a._v("#")]),a._v(" 2. 存在的问题")]),a._v(" "),r("h2",{attrs:{id:"二-、paxos-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、paxos-协议"}},[a._v("#")]),a._v(" （二）、Paxos 协议")]),a._v(" "),r("h3",{attrs:{id:"_1-执行过程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-执行过程"}},[a._v("#")]),a._v(" 1. 执行过程")]),a._v(" "),r("h3",{attrs:{id:"_2-约束条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-约束条件"}},[a._v("#")]),a._v(" 2. 约束条件")]),a._v(" "),r("h4",{attrs:{id:"_1-正确性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-正确性"}},[a._v("#")]),a._v(" ⑴. 正确性")]),a._v(" "),r("h4",{attrs:{id:"_2-可终止性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-可终止性"}},[a._v("#")]),a._v(" ⑵. 可终止性")]),a._v(" "),r("h2",{attrs:{id:"三-、raft-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、raft-协议"}},[a._v("#")]),a._v(" （三）、Raft 协议")]),a._v(" "),r("h3",{attrs:{id:"_1-单个-candidate-的竞选"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-单个-candidate-的竞选"}},[a._v("#")]),a._v(" 1. 单个 Candidate 的竞选")]),a._v(" "),r("h3",{attrs:{id:"_2-多个-candidate-竞选"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-多个-candidate-竞选"}},[a._v("#")]),a._v(" 2. 多个 Candidate 竞选")]),a._v(" "),r("h3",{attrs:{id:"_3-日志复制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-日志复制"}},[a._v("#")]),a._v(" 3. 日志复制")]),a._v(" "),r("h2",{attrs:{id:"四-、拜占庭将军问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、拜占庭将军问题"}},[a._v("#")]),a._v(" （四）、拜占庭将军问题")]),a._v(" "),r("h1",{attrs:{id:"二十三、分布式问题分析"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十三、分布式问题分析"}},[a._v("#")]),a._v(" 二十三、分布式问题分析")]),a._v(" "),r("h2",{attrs:{id:"一-、谈谈业务中使用分布式的场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、谈谈业务中使用分布式的场景"}},[a._v("#")]),a._v(" （一）、谈谈业务中使用分布式的场景")]),a._v(" "),r("h2",{attrs:{id:"二-、分布式事务"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、分布式事务"}},[a._v("#")]),a._v(" （二）、分布式事务")]),a._v(" "),r("h3",{attrs:{id:"_1-产生原因"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-产生原因"}},[a._v("#")]),a._v(" 1. 产生原因")]),a._v(" "),r("h3",{attrs:{id:"_2-应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-应用场景"}},[a._v("#")]),a._v(" 2. 应用场景")]),a._v(" "),r("h3",{attrs:{id:"_3-解决方案"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-解决方案"}},[a._v("#")]),a._v(" 3. 解决方案")]),a._v(" "),r("h4",{attrs:{id:"_1-两阶段提交协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-两阶段提交协议"}},[a._v("#")]),a._v(" ⑴. 两阶段提交协议")]),a._v(" "),r("h4",{attrs:{id:"_2-消息中间件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-消息中间件"}},[a._v("#")]),a._v(" ⑵. 消息中间件")]),a._v(" "),r("h5",{attrs:{id:"_1-消息处理模型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-消息处理模型"}},[a._v("#")]),a._v(" ①. 消息处理模型")]),a._v(" "),r("h5",{attrs:{id:"_2-消息的可靠性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-消息的可靠性"}},[a._v("#")]),a._v(" ②. 消息的可靠性")]),a._v(" "),r("h2",{attrs:{id:"三-、负载均衡的算法与实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、负载均衡的算法与实现"}},[a._v("#")]),a._v(" （三）、负载均衡的算法与实现")]),a._v(" "),r("h3",{attrs:{id:"_1-算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-算法"}},[a._v("#")]),a._v(" 1. 算法")]),a._v(" "),r("h4",{attrs:{id:"_1-轮询-round-robin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-轮询-round-robin"}},[a._v("#")]),a._v(" ⑴. 轮询（Round Robin）")]),a._v(" "),r("h4",{attrs:{id:"_2-加权轮询-weighted-round-robbin"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-加权轮询-weighted-round-robbin"}},[a._v("#")]),a._v(" ⑵. 加权轮询（Weighted Round Robbin）")]),a._v(" "),r("h4",{attrs:{id:"_3-最少连接-least-connections"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-最少连接-least-connections"}},[a._v("#")]),a._v(" ⑶. 最少连接（least Connections）")]),a._v(" "),r("h4",{attrs:{id:"_4-加权最小连接-weighted-leastconnection"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-加权最小连接-weighted-leastconnection"}},[a._v("#")]),a._v(" ⑷. 加权最小连接（Weighted LeastConnection）")]),a._v(" "),r("h4",{attrs:{id:"_5-随机算法-random"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-随机算法-random"}},[a._v("#")]),a._v(" ⑸. 随机算法（Random）")]),a._v(" "),r("h3",{attrs:{id:"_2-实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现"}},[a._v("#")]),a._v(" 2. 实现")]),a._v(" "),r("h4",{attrs:{id:"_1-http-重定向"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-重定向"}},[a._v("#")]),a._v(" ⑴. HTTP 重定向")]),a._v(" "),r("h4",{attrs:{id:"_2-dns-重定向"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-dns-重定向"}},[a._v("#")]),a._v(" ⑵. DNS 重定向")]),a._v(" "),r("h4",{attrs:{id:"_3-修改-mac-地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-修改-mac-地址"}},[a._v("#")]),a._v(" ⑶. 修改 MAC 地址")]),a._v(" "),r("h4",{attrs:{id:"_4-修改-ip-地址"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-修改-ip-地址"}},[a._v("#")]),a._v(" ⑷. 修改 IP 地址")]),a._v(" "),r("h4",{attrs:{id:"_5-代理自动配置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-代理自动配置"}},[a._v("#")]),a._v(" ⑸. 代理自动配置")]),a._v(" "),r("h2",{attrs:{id:"四-、分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、分布式锁"}},[a._v("#")]),a._v(" （四）、分布式锁")]),a._v(" "),r("h3",{attrs:{id:"_1-使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用场景"}},[a._v("#")]),a._v(" 1. 使用场景")]),a._v(" "),r("h3",{attrs:{id:"_2-实现方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-实现方式"}},[a._v("#")]),a._v(" 2. 实现方式")]),a._v(" "),r("h4",{attrs:{id:"_1-数据库分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据库分布式锁"}},[a._v("#")]),a._v(" ⑴. 数据库分布式锁")]),a._v(" "),r("h4",{attrs:{id:"_2-redis-分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-redis-分布式锁"}},[a._v("#")]),a._v(" ⑵. Redis 分布式锁")]),a._v(" "),r("h4",{attrs:{id:"_3-zookeeper-分布式锁"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-zookeeper-分布式锁"}},[a._v("#")]),a._v(" ⑶. Zookeeper 分布式锁")]),a._v(" "),r("h2",{attrs:{id:"五-、分布式-session"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、分布式-session"}},[a._v("#")]),a._v(" （五）、分布式 Session")]),a._v(" "),r("h3",{attrs:{id:"_1-sticky-sessions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-sticky-sessions"}},[a._v("#")]),a._v(" 1. Sticky Sessions")]),a._v(" "),r("h3",{attrs:{id:"_2-session-replication"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-session-replication"}},[a._v("#")]),a._v(" 2. Session Replication")]),a._v(" "),r("h3",{attrs:{id:"_3-persistent-datastore"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-persistent-datastore"}},[a._v("#")]),a._v(" 3. Persistent DataStore")]),a._v(" "),r("h3",{attrs:{id:"_4-in-memory-datastore"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-in-memory-datastore"}},[a._v("#")]),a._v(" 4. In-Memory DataStore")]),a._v(" "),r("h2",{attrs:{id:"六-、分库与分表带来的分布式困境与应对之策"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、分库与分表带来的分布式困境与应对之策"}},[a._v("#")]),a._v(" （六）、分库与分表带来的分布式困境与应对之策")]),a._v(" "),r("h3",{attrs:{id:"_1-事务问题-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-事务问题-2"}},[a._v("#")]),a._v(" 1. 事务问题")]),a._v(" "),r("h3",{attrs:{id:"_2-查询问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-查询问题"}},[a._v("#")]),a._v(" 2. 查询问题")]),a._v(" "),r("h3",{attrs:{id:"_3-id-唯一性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-id-唯一性"}},[a._v("#")]),a._v(" 3. ID 唯一性")]),a._v(" "),r("h1",{attrs:{id:"二十四、git"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十四、git"}},[a._v("#")]),a._v(" 二十四、Git")]),a._v(" "),r("h2",{attrs:{id:"_1-学习资料"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-学习资料"}},[a._v("#")]),a._v(" 1. 学习资料")]),a._v(" "),r("h2",{attrs:{id:"_2-集中式与分布式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-集中式与分布式"}},[a._v("#")]),a._v(" 2. 集中式与分布式")]),a._v(" "),r("h2",{attrs:{id:"_3-git-的中心服务器"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-git-的中心服务器"}},[a._v("#")]),a._v(" 3. Git 的中心服务器")]),a._v(" "),r("h2",{attrs:{id:"_4-git-工作流"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-git-工作流"}},[a._v("#")]),a._v(" 4. Git 工作流")]),a._v(" "),r("h2",{attrs:{id:"_5-分支实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-分支实现"}},[a._v("#")]),a._v(" 5. 分支实现")]),a._v(" "),r("h2",{attrs:{id:"_6-冲突"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-冲突"}},[a._v("#")]),a._v(" 6. 冲突")]),a._v(" "),r("h2",{attrs:{id:"_7-fast-forward"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-fast-forward"}},[a._v("#")]),a._v(" 7. Fast forward")]),a._v(" "),r("h2",{attrs:{id:"_8-分支管理策略"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-分支管理策略"}},[a._v("#")]),a._v(" 8. 分支管理策略")]),a._v(" "),r("h2",{attrs:{id:"_9-储藏-stashing"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-储藏-stashing"}},[a._v("#")]),a._v(" 9. 储藏（Stashing）")]),a._v(" "),r("h2",{attrs:{id:"_10-ssh-传输设置"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-ssh-传输设置"}},[a._v("#")]),a._v(" 10. SSH 传输设置")]),a._v(" "),r("h2",{attrs:{id:"_11-gitignore-文件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-gitignore-文件"}},[a._v("#")]),a._v(" 11. .gitignore 文件")]),a._v(" "),r("h2",{attrs:{id:"_12-git-命令一览"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-git-命令一览"}},[a._v("#")]),a._v(" 12. Git 命令一览")]),a._v(" "),r("h1",{attrs:{id:"二十五、正则表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十五、正则表达式"}},[a._v("#")]),a._v(" 二十五、正则表达式")]),a._v(" "),r("h2",{attrs:{id:"一-、概述-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、概述-3"}},[a._v("#")]),a._v(" （一）、概述")]),a._v(" "),r("h2",{attrs:{id:"二-、匹配单个字符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、匹配单个字符"}},[a._v("#")]),a._v(" （二）、匹配单个字符")]),a._v(" "),r("h2",{attrs:{id:"三-、匹配一组字符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、匹配一组字符"}},[a._v("#")]),a._v(" （三）、匹配一组字符")]),a._v(" "),r("h2",{attrs:{id:"四-、使用元字符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、使用元字符"}},[a._v("#")]),a._v(" （四）、使用元字符")]),a._v(" "),r("h3",{attrs:{id:"_1-匹配空白字符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-匹配空白字符"}},[a._v("#")]),a._v(" 1. 匹配空白字符")]),a._v(" "),r("h3",{attrs:{id:"_2-匹配特定的字符类别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-匹配特定的字符类别"}},[a._v("#")]),a._v(" 2. 匹配特定的字符类别")]),a._v(" "),r("h4",{attrs:{id:"_1-数字元字符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-数字元字符"}},[a._v("#")]),a._v(" ⑴. 数字元字符")]),a._v(" "),r("h4",{attrs:{id:"_2-字母数字元字符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-字母数字元字符"}},[a._v("#")]),a._v(" ⑵. 字母数字元字符")]),a._v(" "),r("h4",{attrs:{id:"_3-空白字符元字符"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-空白字符元字符"}},[a._v("#")]),a._v(" ⑶. 空白字符元字符")]),a._v(" "),r("h2",{attrs:{id:"五-、重复匹配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、重复匹配"}},[a._v("#")]),a._v(" （五）、重复匹配")]),a._v(" "),r("h2",{attrs:{id:"六-、位置匹配"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、位置匹配"}},[a._v("#")]),a._v(" （六）、位置匹配")]),a._v(" "),r("h3",{attrs:{id:"_1-单词边界"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-单词边界"}},[a._v("#")]),a._v(" 1. 单词边界")]),a._v(" "),r("h3",{attrs:{id:"_2-字符串边界"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符串边界"}},[a._v("#")]),a._v(" 2. 字符串边界")]),a._v(" "),r("h2",{attrs:{id:"七-、使用子表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、使用子表达式"}},[a._v("#")]),a._v(" （七）、使用子表达式")]),a._v(" "),r("h2",{attrs:{id:"八-、回溯引用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八-、回溯引用"}},[a._v("#")]),a._v(" （八）、回溯引用")]),a._v(" "),r("h3",{attrs:{id:"_1-替换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-替换"}},[a._v("#")]),a._v(" 1. 替换")]),a._v(" "),r("h3",{attrs:{id:"_2-大小写转换"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-大小写转换"}},[a._v("#")]),a._v(" 2. 大小写转换")]),a._v(" "),r("h2",{attrs:{id:"九-、前后查找"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#九-、前后查找"}},[a._v("#")]),a._v(" （九）、前后查找")]),a._v(" "),r("h2",{attrs:{id:"十-、嵌入条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十-、嵌入条件"}},[a._v("#")]),a._v(" （十）、嵌入条件")]),a._v(" "),r("h3",{attrs:{id:"_1-回溯引用条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-回溯引用条件"}},[a._v("#")]),a._v(" 1. 回溯引用条件")]),a._v(" "),r("h3",{attrs:{id:"_2-前后查找条件"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-前后查找条件"}},[a._v("#")]),a._v(" 2. 前后查找条件")]),a._v(" "),r("h1",{attrs:{id:"二十六、重构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十六、重构"}},[a._v("#")]),a._v(" 二十六、重构")]),a._v(" "),r("h2",{attrs:{id:"一-、第一个案例"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一-、第一个案例"}},[a._v("#")]),a._v(" （一）、第一个案例")]),a._v(" "),r("h2",{attrs:{id:"二-、重构原则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二-、重构原则"}},[a._v("#")]),a._v(" （二）、重构原则")]),a._v(" "),r("h3",{attrs:{id:"_1-定义-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-定义-2"}},[a._v("#")]),a._v(" 1. 定义")]),a._v(" "),r("h3",{attrs:{id:"_2-为何重构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-为何重构"}},[a._v("#")]),a._v(" 2. 为何重构")]),a._v(" "),r("h3",{attrs:{id:"_3-三次法则"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-三次法则"}},[a._v("#")]),a._v(" 3. 三次法则")]),a._v(" "),r("h3",{attrs:{id:"_4-间接层与重构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-间接层与重构"}},[a._v("#")]),a._v(" 4. 间接层与重构")]),a._v(" "),r("h3",{attrs:{id:"_5-修改接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-修改接口"}},[a._v("#")]),a._v(" 5. 修改接口")]),a._v(" "),r("h3",{attrs:{id:"_6-何时不该重构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-何时不该重构"}},[a._v("#")]),a._v(" 6. 何时不该重构")]),a._v(" "),r("h3",{attrs:{id:"_7-重构与设计"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-重构与设计"}},[a._v("#")]),a._v(" 7. 重构与设计")]),a._v(" "),r("h3",{attrs:{id:"_8-重构与性能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-重构与性能"}},[a._v("#")]),a._v(" 8. 重构与性能")]),a._v(" "),r("h2",{attrs:{id:"三-、代码的坏味道"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三-、代码的坏味道"}},[a._v("#")]),a._v(" （三）、代码的坏味道")]),a._v(" "),r("h3",{attrs:{id:"_1-重复代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-重复代码"}},[a._v("#")]),a._v(" 1. 重复代码")]),a._v(" "),r("h3",{attrs:{id:"_2-过长函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-过长函数"}},[a._v("#")]),a._v(" 2. 过长函数")]),a._v(" "),r("h3",{attrs:{id:"_3-过大的类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-过大的类"}},[a._v("#")]),a._v(" 3. 过大的类")]),a._v(" "),r("h3",{attrs:{id:"_4-过长的参数列表"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-过长的参数列表"}},[a._v("#")]),a._v(" 4. 过长的参数列表")]),a._v(" "),r("h3",{attrs:{id:"_5-发散式变化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-发散式变化"}},[a._v("#")]),a._v(" 5. 发散式变化")]),a._v(" "),r("h3",{attrs:{id:"_6-散弹式修改"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-散弹式修改"}},[a._v("#")]),a._v(" 6. 散弹式修改")]),a._v(" "),r("h3",{attrs:{id:"_7-依恋情结"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-依恋情结"}},[a._v("#")]),a._v(" 7. 依恋情结")]),a._v(" "),r("h3",{attrs:{id:"_8-数据泥团"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-数据泥团"}},[a._v("#")]),a._v(" 8. 数据泥团")]),a._v(" "),r("h3",{attrs:{id:"_9-基本类型偏执"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-基本类型偏执"}},[a._v("#")]),a._v(" 9. 基本类型偏执")]),a._v(" "),r("h3",{attrs:{id:"_10-switch-惊悚现身"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-switch-惊悚现身"}},[a._v("#")]),a._v(" 10. switch 惊悚现身")]),a._v(" "),r("h3",{attrs:{id:"_11-平行继承体系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-平行继承体系"}},[a._v("#")]),a._v(" 11. 平行继承体系")]),a._v(" "),r("h3",{attrs:{id:"_12-冗余类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-冗余类"}},[a._v("#")]),a._v(" 12. 冗余类")]),a._v(" "),r("h3",{attrs:{id:"_13-夸夸其谈未来性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-夸夸其谈未来性"}},[a._v("#")]),a._v(" 13. 夸夸其谈未来性")]),a._v(" "),r("h3",{attrs:{id:"_14-令人迷惑的暂时字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-令人迷惑的暂时字段"}},[a._v("#")]),a._v(" 14. 令人迷惑的暂时字段")]),a._v(" "),r("h3",{attrs:{id:"_15-过度耦合的消息链"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-过度耦合的消息链"}},[a._v("#")]),a._v(" 15. 过度耦合的消息链")]),a._v(" "),r("h3",{attrs:{id:"_16-中间人"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-中间人"}},[a._v("#")]),a._v(" 16. 中间人")]),a._v(" "),r("h3",{attrs:{id:"_17-狎昵关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_17-狎昵关系"}},[a._v("#")]),a._v(" 17. 狎昵关系")]),a._v(" "),r("h3",{attrs:{id:"_18-异曲同工的类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_18-异曲同工的类"}},[a._v("#")]),a._v(" 18. 异曲同工的类")]),a._v(" "),r("h3",{attrs:{id:"_19-不完美的类库"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_19-不完美的类库"}},[a._v("#")]),a._v(" 19. 不完美的类库")]),a._v(" "),r("h3",{attrs:{id:"_20-幼稚的数据类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_20-幼稚的数据类"}},[a._v("#")]),a._v(" 20. 幼稚的数据类")]),a._v(" "),r("h3",{attrs:{id:"_21-被拒绝的馈赠"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_21-被拒绝的馈赠"}},[a._v("#")]),a._v(" 21. 被拒绝的馈赠")]),a._v(" "),r("h3",{attrs:{id:"_22-过多的注释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_22-过多的注释"}},[a._v("#")]),a._v(" 22. 过多的注释")]),a._v(" "),r("h2",{attrs:{id:"四-、构筑测试体系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四-、构筑测试体系"}},[a._v("#")]),a._v(" （四）、构筑测试体系")]),a._v(" "),r("h2",{attrs:{id:"五-、重新组织函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#五-、重新组织函数"}},[a._v("#")]),a._v(" （五）、重新组织函数")]),a._v(" "),r("h3",{attrs:{id:"_1-提炼函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-提炼函数"}},[a._v("#")]),a._v(" 1. 提炼函数")]),a._v(" "),r("h3",{attrs:{id:"_2-内联函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-内联函数"}},[a._v("#")]),a._v(" 2. 内联函数")]),a._v(" "),r("h3",{attrs:{id:"_3-内联临时变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-内联临时变量"}},[a._v("#")]),a._v(" 3. 内联临时变量")]),a._v(" "),r("h3",{attrs:{id:"_4-以查询取代临时变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-以查询取代临时变量"}},[a._v("#")]),a._v(" 4. 以查询取代临时变量")]),a._v(" "),r("h3",{attrs:{id:"_5-引起解释变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-引起解释变量"}},[a._v("#")]),a._v(" 5. 引起解释变量")]),a._v(" "),r("h3",{attrs:{id:"_6-分解临时变量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-分解临时变量"}},[a._v("#")]),a._v(" 6. 分解临时变量")]),a._v(" "),r("h3",{attrs:{id:"_7-移除对参数的赋值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-移除对参数的赋值"}},[a._v("#")]),a._v(" 7. 移除对参数的赋值")]),a._v(" "),r("h3",{attrs:{id:"_8-以函数对象取代函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-以函数对象取代函数"}},[a._v("#")]),a._v(" 8. 以函数对象取代函数")]),a._v(" "),r("h3",{attrs:{id:"_9-替换算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-替换算法"}},[a._v("#")]),a._v(" 9. 替换算法")]),a._v(" "),r("h2",{attrs:{id:"六-、在对象之间搬移特性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#六-、在对象之间搬移特性"}},[a._v("#")]),a._v(" （六）、在对象之间搬移特性")]),a._v(" "),r("h3",{attrs:{id:"_1-搬移函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-搬移函数"}},[a._v("#")]),a._v(" 1. 搬移函数")]),a._v(" "),r("h3",{attrs:{id:"_2-搬移字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-搬移字段"}},[a._v("#")]),a._v(" 2. 搬移字段")]),a._v(" "),r("h3",{attrs:{id:"_3-提炼类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-提炼类"}},[a._v("#")]),a._v(" 3. 提炼类")]),a._v(" "),r("h3",{attrs:{id:"_4-将类内联化"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-将类内联化"}},[a._v("#")]),a._v(" 4. 将类内联化")]),a._v(" "),r("h3",{attrs:{id:"_5-隐藏委托关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-隐藏委托关系"}},[a._v("#")]),a._v(" 5. 隐藏委托关系")]),a._v(" "),r("h3",{attrs:{id:"_6-移除中间人"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-移除中间人"}},[a._v("#")]),a._v(" 6. 移除中间人")]),a._v(" "),r("h3",{attrs:{id:"_7-引入外加函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-引入外加函数"}},[a._v("#")]),a._v(" 7. 引入外加函数")]),a._v(" "),r("h3",{attrs:{id:"_8-引入本地扩展"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-引入本地扩展"}},[a._v("#")]),a._v(" 8. 引入本地扩展")]),a._v(" "),r("h2",{attrs:{id:"七-、重新组织数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#七-、重新组织数据"}},[a._v("#")]),a._v(" （七）、重新组织数据")]),a._v(" "),r("h3",{attrs:{id:"_1-自封装字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-自封装字段"}},[a._v("#")]),a._v(" 1. 自封装字段")]),a._v(" "),r("h3",{attrs:{id:"_2-以对象取代数据值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-以对象取代数据值"}},[a._v("#")]),a._v(" 2. 以对象取代数据值")]),a._v(" "),r("h3",{attrs:{id:"_3-将值对象改成引用对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-将值对象改成引用对象"}},[a._v("#")]),a._v(" 3. 将值对象改成引用对象")]),a._v(" "),r("h3",{attrs:{id:"_4-将引用对象改为值对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-将引用对象改为值对象"}},[a._v("#")]),a._v(" 4. 将引用对象改为值对象")]),a._v(" "),r("h3",{attrs:{id:"_5-以对象取代数组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-以对象取代数组"}},[a._v("#")]),a._v(" 5. 以对象取代数组")]),a._v(" "),r("h3",{attrs:{id:"_6-赋值被监视数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-赋值被监视数据"}},[a._v("#")]),a._v(" 6. 赋值被监视数据")]),a._v(" "),r("h3",{attrs:{id:"_7-将单向关联改为双向关联"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-将单向关联改为双向关联"}},[a._v("#")]),a._v(" 7. 将单向关联改为双向关联")]),a._v(" "),r("h3",{attrs:{id:"_8-将双向关联改为单向关联"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-将双向关联改为单向关联"}},[a._v("#")]),a._v(" 8. 将双向关联改为单向关联")]),a._v(" "),r("h3",{attrs:{id:"_9-以字面常量取代魔法数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-以字面常量取代魔法数"}},[a._v("#")]),a._v(" 9. 以字面常量取代魔法数")]),a._v(" "),r("h3",{attrs:{id:"_10-封装字段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-封装字段"}},[a._v("#")]),a._v(" 10. 封装字段")]),a._v(" "),r("h3",{attrs:{id:"_11-封装集合"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-封装集合"}},[a._v("#")]),a._v(" 11. 封装集合")]),a._v(" "),r("h3",{attrs:{id:"_12-以数据类取代记录"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-以数据类取代记录"}},[a._v("#")]),a._v(" 12. 以数据类取代记录")]),a._v(" "),r("h3",{attrs:{id:"_13-以类取代类型码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-以类取代类型码"}},[a._v("#")]),a._v(" 13. 以类取代类型码")]),a._v(" "),r("h3",{attrs:{id:"_14-以子类取代类型码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-以子类取代类型码"}},[a._v("#")]),a._v(" 14. 以子类取代类型码")]),a._v(" "),r("h3",{attrs:{id:"_15-以-state-strategy-取代类型码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-以-state-strategy-取代类型码"}},[a._v("#")]),a._v(" 15. 以 State/Strategy 取代类型码")]),a._v(" "),r("h3",{attrs:{id:"_16-以字段取代子类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_16-以字段取代子类"}},[a._v("#")]),a._v(" 16. 以字段取代子类")]),a._v(" "),r("h2",{attrs:{id:"八-、简化条件表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#八-、简化条件表达式"}},[a._v("#")]),a._v(" （八）、简化条件表达式")]),a._v(" "),r("h3",{attrs:{id:"_1-分解条件表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-分解条件表达式"}},[a._v("#")]),a._v(" 1. 分解条件表达式")]),a._v(" "),r("h3",{attrs:{id:"_2-合并条件表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-合并条件表达式"}},[a._v("#")]),a._v(" 2. 合并条件表达式")]),a._v(" "),r("h3",{attrs:{id:"_3-合并重复的条件片段"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-合并重复的条件片段"}},[a._v("#")]),a._v(" 3. 合并重复的条件片段")]),a._v(" "),r("h3",{attrs:{id:"_4-移除控制标记"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-移除控制标记"}},[a._v("#")]),a._v(" 4. 移除控制标记")]),a._v(" "),r("h3",{attrs:{id:"_5-以卫语句取代嵌套条件表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-以卫语句取代嵌套条件表达式"}},[a._v("#")]),a._v(" 5. 以卫语句取代嵌套条件表达式")]),a._v(" "),r("h3",{attrs:{id:"_6-以多态取代条件表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-以多态取代条件表达式"}},[a._v("#")]),a._v(" 6. 以多态取代条件表达式")]),a._v(" "),r("h3",{attrs:{id:"_7-引入-null-对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-引入-null-对象"}},[a._v("#")]),a._v(" 7. 引入 Null 对象")]),a._v(" "),r("h3",{attrs:{id:"_8-引入断言"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-引入断言"}},[a._v("#")]),a._v(" 8. 引入断言")]),a._v(" "),r("h2",{attrs:{id:"九-、简化函数调用"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#九-、简化函数调用"}},[a._v("#")]),a._v(" （九）、简化函数调用")]),a._v(" "),r("h3",{attrs:{id:"_1-函数改名"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-函数改名"}},[a._v("#")]),a._v(" 1. 函数改名")]),a._v(" "),r("h3",{attrs:{id:"_2-添加参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-添加参数"}},[a._v("#")]),a._v(" 2. 添加参数")]),a._v(" "),r("h3",{attrs:{id:"_3-移除参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-移除参数"}},[a._v("#")]),a._v(" 3. 移除参数")]),a._v(" "),r("h3",{attrs:{id:"_4-将查询函数和修改函数分离"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-将查询函数和修改函数分离"}},[a._v("#")]),a._v(" 4. 将查询函数和修改函数分离")]),a._v(" "),r("h3",{attrs:{id:"_5-令函数携带参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-令函数携带参数"}},[a._v("#")]),a._v(" 5. 令函数携带参数")]),a._v(" "),r("h3",{attrs:{id:"_6-以明确函数取代参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-以明确函数取代参数"}},[a._v("#")]),a._v(" 6. 以明确函数取代参数")]),a._v(" "),r("h3",{attrs:{id:"_7-保持对象完整"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-保持对象完整"}},[a._v("#")]),a._v(" 7. 保持对象完整")]),a._v(" "),r("h3",{attrs:{id:"_8-以函数取代参数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-以函数取代参数"}},[a._v("#")]),a._v(" 8. 以函数取代参数")]),a._v(" "),r("h3",{attrs:{id:"_9-引入参数对象"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-引入参数对象"}},[a._v("#")]),a._v(" 9. 引入参数对象")]),a._v(" "),r("h3",{attrs:{id:"_10-移除设值函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-移除设值函数"}},[a._v("#")]),a._v(" 10. 移除设值函数")]),a._v(" "),r("h3",{attrs:{id:"_11-隐藏函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-隐藏函数"}},[a._v("#")]),a._v(" 11. 隐藏函数")]),a._v(" "),r("h3",{attrs:{id:"_12-以工厂函数取代构造函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-以工厂函数取代构造函数"}},[a._v("#")]),a._v(" 12. 以工厂函数取代构造函数")]),a._v(" "),r("h3",{attrs:{id:"_13-封装向下转型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-封装向下转型"}},[a._v("#")]),a._v(" 13. 封装向下转型")]),a._v(" "),r("h3",{attrs:{id:"_14-以异常取代错误码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_14-以异常取代错误码"}},[a._v("#")]),a._v(" 14. 以异常取代错误码")]),a._v(" "),r("h3",{attrs:{id:"_15-以测试取代异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_15-以测试取代异常"}},[a._v("#")]),a._v(" 15. 以测试取代异常")]),a._v(" "),r("h2",{attrs:{id:"十-、处理概括关系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#十-、处理概括关系"}},[a._v("#")]),a._v(" （十）、处理概括关系")]),a._v(" "),r("h3",{attrs:{id:"_1-字段上移"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-字段上移"}},[a._v("#")]),a._v(" 1. 字段上移")]),a._v(" "),r("h3",{attrs:{id:"_2-函数上移"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-函数上移"}},[a._v("#")]),a._v(" 2. 函数上移")]),a._v(" "),r("h3",{attrs:{id:"_3-构造函数本体上移"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-构造函数本体上移"}},[a._v("#")]),a._v(" 3. 构造函数本体上移")]),a._v(" "),r("h3",{attrs:{id:"_4-函数下移"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-函数下移"}},[a._v("#")]),a._v(" 4. 函数下移")]),a._v(" "),r("h3",{attrs:{id:"_5-字段下移"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-字段下移"}},[a._v("#")]),a._v(" 5. 字段下移")]),a._v(" "),r("h3",{attrs:{id:"_6-提炼子类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-提炼子类"}},[a._v("#")]),a._v(" 6. 提炼子类")]),a._v(" "),r("h3",{attrs:{id:"_7-提炼超类"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-提炼超类"}},[a._v("#")]),a._v(" 7. 提炼超类")]),a._v(" "),r("h3",{attrs:{id:"_8-提炼接口"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-提炼接口"}},[a._v("#")]),a._v(" 8. 提炼接口")]),a._v(" "),r("h3",{attrs:{id:"_9-折叠继承体系"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-折叠继承体系"}},[a._v("#")]),a._v(" 9. 折叠继承体系")]),a._v(" "),r("h3",{attrs:{id:"_10-塑造模板函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-塑造模板函数"}},[a._v("#")]),a._v(" 10. 塑造模板函数")]),a._v(" "),r("h3",{attrs:{id:"_11-以委托取代继承"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-以委托取代继承"}},[a._v("#")]),a._v(" 11. 以委托取代继承")]),a._v(" "),r("h3",{attrs:{id:"_12-以继承取代委托"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-以继承取代委托"}},[a._v("#")]),a._v(" 12. 以继承取代委托")]),a._v(" "),r("h1",{attrs:{id:"二十七、代码可读性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二十七、代码可读性"}},[a._v("#")]),a._v(" 二十七、代码可读性")]),a._v(" "),r("h2",{attrs:{id:"_1-可读性的重要性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_1-可读性的重要性"}},[a._v("#")]),a._v(" 1. 可读性的重要性")]),a._v(" "),r("h2",{attrs:{id:"_2-用名字表达代码含义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_2-用名字表达代码含义"}},[a._v("#")]),a._v(" 2. 用名字表达代码含义")]),a._v(" "),r("h2",{attrs:{id:"_3-名字不能带来歧义"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_3-名字不能带来歧义"}},[a._v("#")]),a._v(" 3. 名字不能带来歧义")]),a._v(" "),r("h2",{attrs:{id:"_4-良好的代码风格"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_4-良好的代码风格"}},[a._v("#")]),a._v(" 4. 良好的代码风格")]),a._v(" "),r("h2",{attrs:{id:"_5-编写注释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_5-编写注释"}},[a._v("#")]),a._v(" 5. 编写注释")]),a._v(" "),r("h2",{attrs:{id:"_6-如何编写注释"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_6-如何编写注释"}},[a._v("#")]),a._v(" 6. 如何编写注释")]),a._v(" "),r("h2",{attrs:{id:"_7-提高控制流的可读性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_7-提高控制流的可读性"}},[a._v("#")]),a._v(" 7. 提高控制流的可读性")]),a._v(" "),r("h2",{attrs:{id:"_8-拆分长表达式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_8-拆分长表达式"}},[a._v("#")]),a._v(" 8. 拆分长表达式")]),a._v(" "),r("h2",{attrs:{id:"_9-变量与可读性"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_9-变量与可读性"}},[a._v("#")]),a._v(" 9. 变量与可读性")]),a._v(" "),r("h2",{attrs:{id:"_10-抽取函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_10-抽取函数"}},[a._v("#")]),a._v(" 10. 抽取函数")]),a._v(" "),r("h2",{attrs:{id:"_11-一次只做一件事"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_11-一次只做一件事"}},[a._v("#")]),a._v(" 11. 一次只做一件事")]),a._v(" "),r("h2",{attrs:{id:"_12-用自然语言表述代码"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_12-用自然语言表述代码"}},[a._v("#")]),a._v(" 12. 用自然语言表述代码")]),a._v(" "),r("h2",{attrs:{id:"_13-减少代码量"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#_13-减少代码量"}},[a._v("#")]),a._v(" 13. 减少代码量")])])}),[],!1,null,null,null);t.default=_.exports}}]);